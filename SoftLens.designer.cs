#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MOULDING")]
public partial class SoftLensDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertHydrationAftTumbling(HydrationAftTumbling instance);
  partial void UpdateHydrationAftTumbling(HydrationAftTumbling instance);
  partial void DeleteHydrationAftTumbling(HydrationAftTumbling instance);
  partial void InsertPowerMaster(PowerMaster instance);
  partial void UpdatePowerMaster(PowerMaster instance);
  partial void DeletePowerMaster(PowerMaster instance);
  partial void InsertLatheMaster(LatheMaster instance);
  partial void UpdateLatheMaster(LatheMaster instance);
  partial void DeleteLatheMaster(LatheMaster instance);
  partial void InsertLogin(Login instance);
  partial void UpdateLogin(Login instance);
  partial void DeleteLogin(Login instance);
  partial void InsertDespatchChild(DespatchChild instance);
  partial void UpdateDespatchChild(DespatchChild instance);
  partial void DeleteDespatchChild(DespatchChild instance);
  partial void InsertPackingEntryTable(PackingEntryTable instance);
  partial void UpdatePackingEntryTable(PackingEntryTable instance);
  partial void DeletePackingEntryTable(PackingEntryTable instance);
  partial void InsertBoxPackgcollecList(BoxPackgcollecList instance);
  partial void UpdateBoxPackgcollecList(BoxPackgcollecList instance);
  partial void DeleteBoxPackgcollecList(BoxPackgcollecList instance);
  partial void InsertQcSerialNo(QcSerialNo instance);
  partial void UpdateQcSerialNo(QcSerialNo instance);
  partial void DeleteQcSerialNo(QcSerialNo instance);
  partial void InsertPackingEntryData(PackingEntryData instance);
  partial void UpdatePackingEntryData(PackingEntryData instance);
  partial void DeletePackingEntryData(PackingEntryData instance);
  partial void InsertLensBoxPackingRejection(LensBoxPackingRejection instance);
  partial void UpdateLensBoxPackingRejection(LensBoxPackingRejection instance);
  partial void DeleteLensBoxPackingRejection(LensBoxPackingRejection instance);
  partial void InsertQualityControl(QualityControl instance);
  partial void UpdateQualityControl(QualityControl instance);
  partial void DeleteQualityControl(QualityControl instance);
  partial void InsertLenscollectBoxPackRecord(LenscollectBoxPackRecord instance);
  partial void UpdateLenscollectBoxPackRecord(LenscollectBoxPackRecord instance);
  partial void DeleteLenscollectBoxPackRecord(LenscollectBoxPackRecord instance);
  partial void InsertPRNnum(PRNnum instance);
  partial void UpdatePRNnum(PRNnum instance);
  partial void DeletePRNnum(PRNnum instance);
  partial void InsertDespatchTable(DespatchTable instance);
  partial void UpdateDespatchTable(DespatchTable instance);
  partial void DeleteDespatchTable(DespatchTable instance);
  partial void InsertMHSRnew(MHSRnew instance);
  partial void UpdateMHSRnew(MHSRnew instance);
  partial void DeleteMHSRnew(MHSRnew instance);
  partial void InsertMHSR(MHSR instance);
  partial void UpdateMHSR(MHSR instance);
  partial void DeleteMHSR(MHSR instance);
  partial void InsertMillingLatheNoMaster(MillingLatheNoMaster instance);
  partial void UpdateMillingLatheNoMaster(MillingLatheNoMaster instance);
  partial void DeleteMillingLatheNoMaster(MillingLatheNoMaster instance);
  partial void InsertSI_Tumbling(SI_Tumbling instance);
  partial void UpdateSI_Tumbling(SI_Tumbling instance);
  partial void DeleteSI_Tumbling(SI_Tumbling instance);
  partial void InsertSealingCupandPouch(SealingCupandPouch instance);
  partial void UpdateSealingCupandPouch(SealingCupandPouch instance);
  partial void DeleteSealingCupandPouch(SealingCupandPouch instance);
  partial void InsertModelMaster(ModelMaster instance);
  partial void UpdateModelMaster(ModelMaster instance);
  partial void DeleteModelMaster(ModelMaster instance);
  partial void InsertInprocess_Power_Inspection(Inprocess_Power_Inspection instance);
  partial void UpdateInprocess_Power_Inspection(Inprocess_Power_Inspection instance);
  partial void DeleteInprocess_Power_Inspection(Inprocess_Power_Inspection instance);
  partial void InsertInspectionsDoc(InspectionsDoc instance);
  partial void UpdateInspectionsDoc(InspectionsDoc instance);
  partial void DeleteInspectionsDoc(InspectionsDoc instance);
  partial void InsertInspectionDocData(InspectionDocData instance);
  partial void UpdateInspectionDocData(InspectionDocData instance);
  partial void DeleteInspectionDocData(InspectionDocData instance);
  partial void InsertTumblingChild(TumblingChild instance);
  partial void UpdateTumblingChild(TumblingChild instance);
  partial void DeleteTumblingChild(TumblingChild instance);
  partial void InsertTumbling(Tumbling instance);
  partial void UpdateTumbling(Tumbling instance);
  partial void DeleteTumbling(Tumbling instance);
  partial void InsertBatchAllot(BatchAllot instance);
  partial void UpdateBatchAllot(BatchAllot instance);
  partial void DeleteBatchAllot(BatchAllot instance);
  partial void InsertBlocking(Blocking instance);
  partial void UpdateBlocking(Blocking instance);
  partial void DeleteBlocking(Blocking instance);
  partial void InsertDeBlocking(DeBlocking instance);
  partial void UpdateDeBlocking(DeBlocking instance);
  partial void DeleteDeBlocking(DeBlocking instance);
  partial void InsertLathecut(Lathecut instance);
  partial void UpdateLathecut(Lathecut instance);
  partial void DeleteLathecut(Lathecut instance);
  partial void InsertHapticSample(HapticSample instance);
  partial void UpdateHapticSample(HapticSample instance);
  partial void DeleteHapticSample(HapticSample instance);
  partial void InsertHydration(Hydration instance);
  partial void UpdateHydration(Hydration instance);
  partial void DeleteHydration(Hydration instance);
  partial void InsertLensMeasurement(LensMeasurement instance);
  partial void UpdateLensMeasurement(LensMeasurement instance);
  partial void DeleteLensMeasurement(LensMeasurement instance);
  partial void InsertLotResult(LotResult instance);
  partial void UpdateLotResult(LotResult instance);
  partial void DeleteLotResult(LotResult instance);
  partial void InsertMicroscopicInspection(MicroscopicInspection instance);
  partial void UpdateMicroscopicInspection(MicroscopicInspection instance);
  partial void DeleteMicroscopicInspection(MicroscopicInspection instance);
  partial void InsertMilling(Milling instance);
  partial void UpdateMilling(Milling instance);
  partial void DeleteMilling(Milling instance);
  partial void InsertPowerinspection(Powerinspection instance);
  partial void UpdatePowerinspection(Powerinspection instance);
  partial void DeletePowerinspection(Powerinspection instance);
  partial void InsertMicroScopicInspCollet(MicroScopicInspCollet instance);
  partial void UpdateMicroScopicInspCollet(MicroScopicInspCollet instance);
  partial void DeleteMicroScopicInspCollet(MicroScopicInspCollet instance);
  partial void InsertInspectionResolution(InspectionResolution instance);
  partial void UpdateInspectionResolution(InspectionResolution instance);
  partial void DeleteInspectionResolution(InspectionResolution instance);
  partial void InsertMattTumblingLen(MattTumblingLen instance);
  partial void UpdateMattTumblingLen(MattTumblingLen instance);
  partial void DeleteMattTumblingLen(MattTumblingLen instance);
  partial void InsertSO_MattTumbling(SO_MattTumbling instance);
  partial void UpdateSO_MattTumbling(SO_MattTumbling instance);
  partial void DeleteSO_MattTumbling(SO_MattTumbling instance);
  partial void InsertModelPower(ModelPower instance);
  partial void UpdateModelPower(ModelPower instance);
  partial void DeleteModelPower(ModelPower instance);
  partial void InsertTumblingQuantityDetail(TumblingQuantityDetail instance);
  partial void UpdateTumblingQuantityDetail(TumblingQuantityDetail instance);
  partial void DeleteTumblingQuantityDetail(TumblingQuantityDetail instance);
  partial void InsertMillingCleanedLen(MillingCleanedLen instance);
  partial void UpdateMillingCleanedLen(MillingCleanedLen instance);
  partial void DeleteMillingCleanedLen(MillingCleanedLen instance);
  partial void InsertFirstRetumblingReport(FirstRetumblingReport instance);
  partial void UpdateFirstRetumblingReport(FirstRetumblingReport instance);
  partial void DeleteFirstRetumblingReport(FirstRetumblingReport instance);
  partial void InsertPackingReport(PackingReport instance);
  partial void UpdatePackingReport(PackingReport instance);
  partial void DeletePackingReport(PackingReport instance);
  partial void InsertPowerSegregationTable(PowerSegregationTable instance);
  partial void UpdatePowerSegregationTable(PowerSegregationTable instance);
  partial void DeletePowerSegregationTable(PowerSegregationTable instance);
  partial void InsertPowerSegregationChild(PowerSegregationChild instance);
  partial void UpdatePowerSegregationChild(PowerSegregationChild instance);
  partial void DeletePowerSegregationChild(PowerSegregationChild instance);
  partial void InsertLensWiping(LensWiping instance);
  partial void UpdateLensWiping(LensWiping instance);
  partial void DeleteLensWiping(LensWiping instance);
  partial void InsertPick_Packing(Pick_Packing instance);
  partial void UpdatePick_Packing(Pick_Packing instance);
  partial void DeletePick_Packing(Pick_Packing instance);
  partial void InsertBlisterSealingTable(BlisterSealingTable instance);
  partial void UpdateBlisterSealingTable(BlisterSealingTable instance);
  partial void DeleteBlisterSealingTable(BlisterSealingTable instance);
  partial void InsertGlassyTumblingSO(GlassyTumblingSO instance);
  partial void UpdateGlassyTumblingSO(GlassyTumblingSO instance);
  partial void DeleteGlassyTumblingSO(GlassyTumblingSO instance);
  partial void InsertMIinFQI(MIinFQI instance);
  partial void UpdateMIinFQI(MIinFQI instance);
  partial void DeleteMIinFQI(MIinFQI instance);
  partial void InsertLabelDetailsPacking(LabelDetailsPacking instance);
  partial void UpdateLabelDetailsPacking(LabelDetailsPacking instance);
  partial void DeleteLabelDetailsPacking(LabelDetailsPacking instance);
  partial void InsertBatchFinalReport(BatchFinalReport instance);
  partial void UpdateBatchFinalReport(BatchFinalReport instance);
  partial void DeleteBatchFinalReport(BatchFinalReport instance);
  partial void InsertLensPreperation_Detail(LensPreperation_Detail instance);
  partial void UpdateLensPreperation_Detail(LensPreperation_Detail instance);
  partial void DeleteLensPreperation_Detail(LensPreperation_Detail instance);
  partial void InsertRemattTumblingLen(RemattTumblingLen instance);
  partial void UpdateRemattTumblingLen(RemattTumblingLen instance);
  partial void DeleteRemattTumblingLen(RemattTumblingLen instance);
  partial void InsertFinalLensPreparation(FinalLensPreparation instance);
  partial void UpdateFinalLensPreparation(FinalLensPreparation instance);
  partial void DeleteFinalLensPreparation(FinalLensPreparation instance);
  partial void InsertHapticPowerTable(HapticPowerTable instance);
  partial void UpdateHapticPowerTable(HapticPowerTable instance);
  partial void DeleteHapticPowerTable(HapticPowerTable instance);
  partial void InsertPouch_Delete(Pouch_Delete instance);
  partial void UpdatePouch_Delete(Pouch_Delete instance);
  partial void DeletePouch_Delete(Pouch_Delete instance);
  partial void InsertReport_Table(Report_Table instance);
  partial void UpdateReport_Table(Report_Table instance);
  partial void DeleteReport_Table(Report_Table instance);
  partial void InsertMI_FQIReject(MI_FQIReject instance);
  partial void UpdateMI_FQIReject(MI_FQIReject instance);
  partial void DeleteMI_FQIReject(MI_FQIReject instance);
  partial void InsertLensometer_PowerCheck(Lensometer_PowerCheck instance);
  partial void UpdateLensometer_PowerCheck(Lensometer_PowerCheck instance);
  partial void DeleteLensometer_PowerCheck(Lensometer_PowerCheck instance);
  partial void InsertNewBtchAllot(NewBtchAllot instance);
  partial void UpdateNewBtchAllot(NewBtchAllot instance);
  partial void DeleteNewBtchAllot(NewBtchAllot instance);
  #endregion
	
	public SoftLensDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PHOBICConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public SoftLensDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public SoftLensDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public SoftLensDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public SoftLensDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<HydrationAftTumbling> HydrationAftTumblings
	{
		get
		{
			return this.GetTable<HydrationAftTumbling>();
		}
	}
	
	public System.Data.Linq.Table<PowerMaster> PowerMasters
	{
		get
		{
			return this.GetTable<PowerMaster>();
		}
	}
	
	public System.Data.Linq.Table<LatheMaster> LatheMasters
	{
		get
		{
			return this.GetTable<LatheMaster>();
		}
	}
	
	public System.Data.Linq.Table<Login> Logins
	{
		get
		{
			return this.GetTable<Login>();
		}
	}
	
	public System.Data.Linq.Table<DespatchChild> DespatchChilds
	{
		get
		{
			return this.GetTable<DespatchChild>();
		}
	}
	
	public System.Data.Linq.Table<PackingEntryTable> PackingEntryTables
	{
		get
		{
			return this.GetTable<PackingEntryTable>();
		}
	}
	
	public System.Data.Linq.Table<BoxPackgcollecList> BoxPackgcollecLists
	{
		get
		{
			return this.GetTable<BoxPackgcollecList>();
		}
	}
	
	public System.Data.Linq.Table<QcSerialNo> QcSerialNos
	{
		get
		{
			return this.GetTable<QcSerialNo>();
		}
	}
	
	public System.Data.Linq.Table<PackingEntryData> PackingEntryDatas
	{
		get
		{
			return this.GetTable<PackingEntryData>();
		}
	}
	
	public System.Data.Linq.Table<LensBoxPackingRejection> LensBoxPackingRejections
	{
		get
		{
			return this.GetTable<LensBoxPackingRejection>();
		}
	}
	
	public System.Data.Linq.Table<QualityControl> QualityControls
	{
		get
		{
			return this.GetTable<QualityControl>();
		}
	}
	
	public System.Data.Linq.Table<LenscollectBoxPackRecord> LenscollectBoxPackRecords
	{
		get
		{
			return this.GetTable<LenscollectBoxPackRecord>();
		}
	}
	
	public System.Data.Linq.Table<PRNnum> PRNnums
	{
		get
		{
			return this.GetTable<PRNnum>();
		}
	}
	
	public System.Data.Linq.Table<DespatchTable> DespatchTables
	{
		get
		{
			return this.GetTable<DespatchTable>();
		}
	}
	
	public System.Data.Linq.Table<MHSRnew> MHSRnews
	{
		get
		{
			return this.GetTable<MHSRnew>();
		}
	}
	
	public System.Data.Linq.Table<MHSR> MHSRs
	{
		get
		{
			return this.GetTable<MHSR>();
		}
	}
	
	public System.Data.Linq.Table<MillingLatheNoMaster> MillingLatheNoMasters
	{
		get
		{
			return this.GetTable<MillingLatheNoMaster>();
		}
	}
	
	public System.Data.Linq.Table<SI_Tumbling> SI_Tumblings
	{
		get
		{
			return this.GetTable<SI_Tumbling>();
		}
	}
	
	public System.Data.Linq.Table<SealingCupandPouch> SealingCupandPouches
	{
		get
		{
			return this.GetTable<SealingCupandPouch>();
		}
	}
	
	public System.Data.Linq.Table<ModelMaster> ModelMasters
	{
		get
		{
			return this.GetTable<ModelMaster>();
		}
	}
	
	public System.Data.Linq.Table<Inprocess_Power_Inspection> Inprocess_Power_Inspections
	{
		get
		{
			return this.GetTable<Inprocess_Power_Inspection>();
		}
	}
	
	public System.Data.Linq.Table<InspectionsDoc> InspectionsDocs
	{
		get
		{
			return this.GetTable<InspectionsDoc>();
		}
	}
	
	public System.Data.Linq.Table<InspectionDocData> InspectionDocDatas
	{
		get
		{
			return this.GetTable<InspectionDocData>();
		}
	}
	
	public System.Data.Linq.Table<TumblingChild> TumblingChilds
	{
		get
		{
			return this.GetTable<TumblingChild>();
		}
	}
	
	public System.Data.Linq.Table<Tumbling> Tumblings
	{
		get
		{
			return this.GetTable<Tumbling>();
		}
	}
	
	public System.Data.Linq.Table<BatchAllot> BatchAllots
	{
		get
		{
			return this.GetTable<BatchAllot>();
		}
	}
	
	public System.Data.Linq.Table<Blocking> Blockings
	{
		get
		{
			return this.GetTable<Blocking>();
		}
	}
	
	public System.Data.Linq.Table<DeBlocking> DeBlockings
	{
		get
		{
			return this.GetTable<DeBlocking>();
		}
	}
	
	public System.Data.Linq.Table<Lathecut> Lathecuts
	{
		get
		{
			return this.GetTable<Lathecut>();
		}
	}
	
	public System.Data.Linq.Table<HapticSample> HapticSamples
	{
		get
		{
			return this.GetTable<HapticSample>();
		}
	}
	
	public System.Data.Linq.Table<Hydration> Hydrations
	{
		get
		{
			return this.GetTable<Hydration>();
		}
	}
	
	public System.Data.Linq.Table<LensMeasurement> LensMeasurements
	{
		get
		{
			return this.GetTable<LensMeasurement>();
		}
	}
	
	public System.Data.Linq.Table<LotResult> LotResults
	{
		get
		{
			return this.GetTable<LotResult>();
		}
	}
	
	public System.Data.Linq.Table<MicroscopicInspection> MicroscopicInspections
	{
		get
		{
			return this.GetTable<MicroscopicInspection>();
		}
	}
	
	public System.Data.Linq.Table<Milling> Millings
	{
		get
		{
			return this.GetTable<Milling>();
		}
	}
	
	public System.Data.Linq.Table<Powerinspection> Powerinspections
	{
		get
		{
			return this.GetTable<Powerinspection>();
		}
	}
	
	public System.Data.Linq.Table<MicroScopicInspCollet> MicroScopicInspCollets
	{
		get
		{
			return this.GetTable<MicroScopicInspCollet>();
		}
	}
	
	public System.Data.Linq.Table<InspectionResolution> InspectionResolutions
	{
		get
		{
			return this.GetTable<InspectionResolution>();
		}
	}
	
	public System.Data.Linq.Table<MattTumblingLen> MattTumblingLens
	{
		get
		{
			return this.GetTable<MattTumblingLen>();
		}
	}
	
	public System.Data.Linq.Table<SO_MattTumbling> SO_MattTumblings
	{
		get
		{
			return this.GetTable<SO_MattTumbling>();
		}
	}
	
	public System.Data.Linq.Table<ModelPower> ModelPowers
	{
		get
		{
			return this.GetTable<ModelPower>();
		}
	}
	
	public System.Data.Linq.Table<TumblingQuantityDetail> TumblingQuantityDetails
	{
		get
		{
			return this.GetTable<TumblingQuantityDetail>();
		}
	}
	
	public System.Data.Linq.Table<MillingCleanedLen> MillingCleanedLens
	{
		get
		{
			return this.GetTable<MillingCleanedLen>();
		}
	}
	
	public System.Data.Linq.Table<FirstRetumblingReport> FirstRetumblingReports
	{
		get
		{
			return this.GetTable<FirstRetumblingReport>();
		}
	}
	
	public System.Data.Linq.Table<PackingReport> PackingReports
	{
		get
		{
			return this.GetTable<PackingReport>();
		}
	}
	
	public System.Data.Linq.Table<PowerSegregationTable> PowerSegregationTables
	{
		get
		{
			return this.GetTable<PowerSegregationTable>();
		}
	}
	
	public System.Data.Linq.Table<PowerSegregationChild> PowerSegregationChilds
	{
		get
		{
			return this.GetTable<PowerSegregationChild>();
		}
	}
	
	public System.Data.Linq.Table<LensWiping> LensWipings
	{
		get
		{
			return this.GetTable<LensWiping>();
		}
	}
	
	public System.Data.Linq.Table<Pick_Packing> Pick_Packings
	{
		get
		{
			return this.GetTable<Pick_Packing>();
		}
	}
	
	public System.Data.Linq.Table<BlisterSealingTable> BlisterSealingTables
	{
		get
		{
			return this.GetTable<BlisterSealingTable>();
		}
	}
	
	public System.Data.Linq.Table<GlassyTumblingSO> GlassyTumblingSOs
	{
		get
		{
			return this.GetTable<GlassyTumblingSO>();
		}
	}
	
	public System.Data.Linq.Table<MIinFQI> MIinFQIs
	{
		get
		{
			return this.GetTable<MIinFQI>();
		}
	}
	
	public System.Data.Linq.Table<LabelDetailsPacking> LabelDetailsPackings
	{
		get
		{
			return this.GetTable<LabelDetailsPacking>();
		}
	}
	
	public System.Data.Linq.Table<BatchFinalReport> BatchFinalReports
	{
		get
		{
			return this.GetTable<BatchFinalReport>();
		}
	}
	
	public System.Data.Linq.Table<LensPreperation_Detail> LensPreperation_Details
	{
		get
		{
			return this.GetTable<LensPreperation_Detail>();
		}
	}
	
	public System.Data.Linq.Table<RemattTumblingLen> RemattTumblingLens
	{
		get
		{
			return this.GetTable<RemattTumblingLen>();
		}
	}
	
	public System.Data.Linq.Table<FinalLensPreparation> FinalLensPreparations
	{
		get
		{
			return this.GetTable<FinalLensPreparation>();
		}
	}
	
	public System.Data.Linq.Table<HapticPowerTable> HapticPowerTables
	{
		get
		{
			return this.GetTable<HapticPowerTable>();
		}
	}
	
	public System.Data.Linq.Table<Pouch_Delete> Pouch_Deletes
	{
		get
		{
			return this.GetTable<Pouch_Delete>();
		}
	}
	
	public System.Data.Linq.Table<Report_Table> Report_Tables
	{
		get
		{
			return this.GetTable<Report_Table>();
		}
	}
	
	public System.Data.Linq.Table<MI_FQIReject> MI_FQIRejects
	{
		get
		{
			return this.GetTable<MI_FQIReject>();
		}
	}
	
	public System.Data.Linq.Table<Lensometer_PowerCheck> Lensometer_PowerChecks
	{
		get
		{
			return this.GetTable<Lensometer_PowerCheck>();
		}
	}
	
	public System.Data.Linq.Table<NewBtchAllot> NewBtchAllots
	{
		get
		{
			return this.GetTable<NewBtchAllot>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HydrationAftTumbling")]
public partial class HydrationAftTumbling : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingLotNo;
	
	private string _StartDate;
	
	private string _StartTime;
	
	private string _StartTimeCal;
	
	private string _StopDate;
	
	private string _StopTime;
	
	private System.Nullable<int> _StartQty;
	
	private System.Nullable<int> _Acceptedqty;
	
	private System.Nullable<int> _Rejectedqty;
	
	private string _Duration;
	
	private string _RejectedReason;
	
	private string _RejMTSNo;
	
	private string _Shift;
	
	private string _Hydratedby;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingLotNoChanging(string value);
    partial void OnTumblingLotNoChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnStartTimeCalChanging(string value);
    partial void OnStartTimeCalChanged();
    partial void OnStopDateChanging(string value);
    partial void OnStopDateChanged();
    partial void OnStopTimeChanging(string value);
    partial void OnStopTimeChanged();
    partial void OnStartQtyChanging(System.Nullable<int> value);
    partial void OnStartQtyChanged();
    partial void OnAcceptedqtyChanging(System.Nullable<int> value);
    partial void OnAcceptedqtyChanged();
    partial void OnRejectedqtyChanging(System.Nullable<int> value);
    partial void OnRejectedqtyChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnRejectedReasonChanging(string value);
    partial void OnRejectedReasonChanged();
    partial void OnRejMTSNoChanging(string value);
    partial void OnRejMTSNoChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnHydratedbyChanging(string value);
    partial void OnHydratedbyChanged();
    #endregion
	
	public HydrationAftTumbling()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingLotNo", DbType="VarChar(50)")]
	public string TumblingLotNo
	{
		get
		{
			return this._TumblingLotNo;
		}
		set
		{
			if ((this._TumblingLotNo != value))
			{
				this.OnTumblingLotNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingLotNo = value;
				this.SendPropertyChanged("TumblingLotNo");
				this.OnTumblingLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="VarChar(50)")]
	public string StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimeCal", DbType="VarChar(50)")]
	public string StartTimeCal
	{
		get
		{
			return this._StartTimeCal;
		}
		set
		{
			if ((this._StartTimeCal != value))
			{
				this.OnStartTimeCalChanging(value);
				this.SendPropertyChanging();
				this._StartTimeCal = value;
				this.SendPropertyChanged("StartTimeCal");
				this.OnStartTimeCalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopDate", DbType="VarChar(50)")]
	public string StopDate
	{
		get
		{
			return this._StopDate;
		}
		set
		{
			if ((this._StopDate != value))
			{
				this.OnStopDateChanging(value);
				this.SendPropertyChanging();
				this._StopDate = value;
				this.SendPropertyChanged("StopDate");
				this.OnStopDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopTime", DbType="VarChar(50)")]
	public string StopTime
	{
		get
		{
			return this._StopTime;
		}
		set
		{
			if ((this._StopTime != value))
			{
				this.OnStopTimeChanging(value);
				this.SendPropertyChanging();
				this._StopTime = value;
				this.SendPropertyChanged("StopTime");
				this.OnStopTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartQty", DbType="Int")]
	public System.Nullable<int> StartQty
	{
		get
		{
			return this._StartQty;
		}
		set
		{
			if ((this._StartQty != value))
			{
				this.OnStartQtyChanging(value);
				this.SendPropertyChanging();
				this._StartQty = value;
				this.SendPropertyChanged("StartQty");
				this.OnStartQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acceptedqty", DbType="Int")]
	public System.Nullable<int> Acceptedqty
	{
		get
		{
			return this._Acceptedqty;
		}
		set
		{
			if ((this._Acceptedqty != value))
			{
				this.OnAcceptedqtyChanging(value);
				this.SendPropertyChanging();
				this._Acceptedqty = value;
				this.SendPropertyChanged("Acceptedqty");
				this.OnAcceptedqtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rejectedqty", DbType="Int")]
	public System.Nullable<int> Rejectedqty
	{
		get
		{
			return this._Rejectedqty;
		}
		set
		{
			if ((this._Rejectedqty != value))
			{
				this.OnRejectedqtyChanging(value);
				this.SendPropertyChanging();
				this._Rejectedqty = value;
				this.SendPropertyChanged("Rejectedqty");
				this.OnRejectedqtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="VarChar(50)")]
	public string Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedReason", DbType="VarChar(50)")]
	public string RejectedReason
	{
		get
		{
			return this._RejectedReason;
		}
		set
		{
			if ((this._RejectedReason != value))
			{
				this.OnRejectedReasonChanging(value);
				this.SendPropertyChanging();
				this._RejectedReason = value;
				this.SendPropertyChanged("RejectedReason");
				this.OnRejectedReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejMTSNo", DbType="VarChar(50)")]
	public string RejMTSNo
	{
		get
		{
			return this._RejMTSNo;
		}
		set
		{
			if ((this._RejMTSNo != value))
			{
				this.OnRejMTSNoChanging(value);
				this.SendPropertyChanging();
				this._RejMTSNo = value;
				this.SendPropertyChanged("RejMTSNo");
				this.OnRejMTSNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hydratedby", DbType="VarChar(50)")]
	public string Hydratedby
	{
		get
		{
			return this._Hydratedby;
		}
		set
		{
			if ((this._Hydratedby != value))
			{
				this.OnHydratedbyChanging(value);
				this.SendPropertyChanging();
				this._Hydratedby = value;
				this.SendPropertyChanged("Hydratedby");
				this.OnHydratedbyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PowerMaster")]
public partial class PowerMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<decimal> _Radius1;
	
	private System.Nullable<decimal> _Radius2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnRadius1Changing(System.Nullable<decimal> value);
    partial void OnRadius1Changed();
    partial void OnRadius2Changing(System.Nullable<decimal> value);
    partial void OnRadius2Changed();
    #endregion
	
	public PowerMaster()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Radius1
	{
		get
		{
			return this._Radius1;
		}
		set
		{
			if ((this._Radius1 != value))
			{
				this.OnRadius1Changing(value);
				this.SendPropertyChanging();
				this._Radius1 = value;
				this.SendPropertyChanged("Radius1");
				this.OnRadius1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius2", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Radius2
	{
		get
		{
			return this._Radius2;
		}
		set
		{
			if ((this._Radius2 != value))
			{
				this.OnRadius2Changing(value);
				this.SendPropertyChanging();
				this._Radius2 = value;
				this.SendPropertyChanged("Radius2");
				this.OnRadius2Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LatheMaster")]
public partial class LatheMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LatheNo;
	
	private string _ToolId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLatheNoChanging(string value);
    partial void OnLatheNoChanged();
    partial void OnToolIdChanging(string value);
    partial void OnToolIdChanged();
    #endregion
	
	public LatheMaster()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatheNo", DbType="VarChar(50)")]
	public string LatheNo
	{
		get
		{
			return this._LatheNo;
		}
		set
		{
			if ((this._LatheNo != value))
			{
				this.OnLatheNoChanging(value);
				this.SendPropertyChanging();
				this._LatheNo = value;
				this.SendPropertyChanged("LatheNo");
				this.OnLatheNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolId", DbType="VarChar(50)")]
	public string ToolId
	{
		get
		{
			return this._ToolId;
		}
		set
		{
			if ((this._ToolId != value))
			{
				this.OnToolIdChanging(value);
				this.SendPropertyChanging();
				this._ToolId = value;
				this.SendPropertyChanged("ToolId");
				this.OnToolIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _LoginName;
	
	private string _Password;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public Login()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(50)")]
	public string LoginName
	{
		get
		{
			return this._LoginName;
		}
		set
		{
			if ((this._LoginName != value))
			{
				this.OnLoginNameChanging(value);
				this.SendPropertyChanging();
				this._LoginName = value;
				this.SendPropertyChanged("LoginName");
				this.OnLoginNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DespatchChild")]
public partial class DespatchChild : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _DCNo;
	
	private System.Nullable<int> _Model;
	
	private string _SubModel;
	
	private string _Brand;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _TakenQuantity;
	
	private string _LotNo;
	
	private System.Nullable<int> _RequiredQty;
	
	private System.Nullable<int> _RefID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDCNoChanging(string value);
    partial void OnDCNoChanged();
    partial void OnModelChanging(System.Nullable<int> value);
    partial void OnModelChanged();
    partial void OnSubModelChanging(string value);
    partial void OnSubModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnTakenQuantityChanging(System.Nullable<int> value);
    partial void OnTakenQuantityChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnRequiredQtyChanging(System.Nullable<int> value);
    partial void OnRequiredQtyChanged();
    partial void OnRefIDChanging(System.Nullable<int> value);
    partial void OnRefIDChanged();
    #endregion
	
	public DespatchChild()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCNo", DbType="VarChar(50)")]
	public string DCNo
	{
		get
		{
			return this._DCNo;
		}
		set
		{
			if ((this._DCNo != value))
			{
				this.OnDCNoChanging(value);
				this.SendPropertyChanging();
				this._DCNo = value;
				this.SendPropertyChanged("DCNo");
				this.OnDCNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="Int")]
	public System.Nullable<int> Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubModel", DbType="VarChar(50)")]
	public string SubModel
	{
		get
		{
			return this._SubModel;
		}
		set
		{
			if ((this._SubModel != value))
			{
				this.OnSubModelChanging(value);
				this.SendPropertyChanging();
				this._SubModel = value;
				this.SendPropertyChanged("SubModel");
				this.OnSubModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenQuantity", DbType="Int")]
	public System.Nullable<int> TakenQuantity
	{
		get
		{
			return this._TakenQuantity;
		}
		set
		{
			if ((this._TakenQuantity != value))
			{
				this.OnTakenQuantityChanging(value);
				this.SendPropertyChanging();
				this._TakenQuantity = value;
				this.SendPropertyChanged("TakenQuantity");
				this.OnTakenQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="NChar(10)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredQty", DbType="Int")]
	public System.Nullable<int> RequiredQty
	{
		get
		{
			return this._RequiredQty;
		}
		set
		{
			if ((this._RequiredQty != value))
			{
				this.OnRequiredQtyChanging(value);
				this.SendPropertyChanging();
				this._RequiredQty = value;
				this.SendPropertyChanged("RequiredQty");
				this.OnRequiredQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefID", DbType="Int")]
	public System.Nullable<int> RefID
	{
		get
		{
			return this._RefID;
		}
		set
		{
			if ((this._RefID != value))
			{
				this.OnRefIDChanging(value);
				this.SendPropertyChanging();
				this._RefID = value;
				this.SendPropertyChanged("RefID");
				this.OnRefIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackingEntryTable")]
public partial class PackingEntryTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _LotNo;
	
	private System.Nullable<int> _Model;
	
	private string _SubModel;
	
	private string _Brand;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _SerialFrom;
	
	private System.Nullable<int> _SerialTo;
	
	private System.Nullable<int> _Qty;
	
	private System.Nullable<int> _RemainingQty;
	
	private System.Nullable<int> _TakenQty;
	
	private System.Nullable<int> _BPLNO;
	
	private string _Date;
	
	private string _SterileBatchNo;
	
	private System.Nullable<System.DateTime> _ManufactureDate;
	
	private System.Nullable<System.DateTime> _ExpiryDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(System.Nullable<int> value);
    partial void OnLotNoChanged();
    partial void OnModelChanging(System.Nullable<int> value);
    partial void OnModelChanged();
    partial void OnSubModelChanging(string value);
    partial void OnSubModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnSerialFromChanging(System.Nullable<int> value);
    partial void OnSerialFromChanged();
    partial void OnSerialToChanging(System.Nullable<int> value);
    partial void OnSerialToChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnRemainingQtyChanging(System.Nullable<int> value);
    partial void OnRemainingQtyChanged();
    partial void OnTakenQtyChanging(System.Nullable<int> value);
    partial void OnTakenQtyChanged();
    partial void OnBPLNOChanging(System.Nullable<int> value);
    partial void OnBPLNOChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnSterileBatchNoChanging(string value);
    partial void OnSterileBatchNoChanged();
    partial void OnManufactureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnManufactureDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    #endregion
	
	public PackingEntryTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="Int")]
	public System.Nullable<int> LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="Int")]
	public System.Nullable<int> Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubModel", DbType="VarChar(50)")]
	public string SubModel
	{
		get
		{
			return this._SubModel;
		}
		set
		{
			if ((this._SubModel != value))
			{
				this.OnSubModelChanging(value);
				this.SendPropertyChanging();
				this._SubModel = value;
				this.SendPropertyChanged("SubModel");
				this.OnSubModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialFrom", DbType="Int")]
	public System.Nullable<int> SerialFrom
	{
		get
		{
			return this._SerialFrom;
		}
		set
		{
			if ((this._SerialFrom != value))
			{
				this.OnSerialFromChanging(value);
				this.SendPropertyChanging();
				this._SerialFrom = value;
				this.SendPropertyChanged("SerialFrom");
				this.OnSerialFromChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialTo", DbType="Int")]
	public System.Nullable<int> SerialTo
	{
		get
		{
			return this._SerialTo;
		}
		set
		{
			if ((this._SerialTo != value))
			{
				this.OnSerialToChanging(value);
				this.SendPropertyChanging();
				this._SerialTo = value;
				this.SendPropertyChanged("SerialTo");
				this.OnSerialToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
	public System.Nullable<int> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingQty", DbType="Int")]
	public System.Nullable<int> RemainingQty
	{
		get
		{
			return this._RemainingQty;
		}
		set
		{
			if ((this._RemainingQty != value))
			{
				this.OnRemainingQtyChanging(value);
				this.SendPropertyChanging();
				this._RemainingQty = value;
				this.SendPropertyChanged("RemainingQty");
				this.OnRemainingQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenQty", DbType="Int")]
	public System.Nullable<int> TakenQty
	{
		get
		{
			return this._TakenQty;
		}
		set
		{
			if ((this._TakenQty != value))
			{
				this.OnTakenQtyChanging(value);
				this.SendPropertyChanging();
				this._TakenQty = value;
				this.SendPropertyChanged("TakenQty");
				this.OnTakenQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPLNO", DbType="Int")]
	public System.Nullable<int> BPLNO
	{
		get
		{
			return this._BPLNO;
		}
		set
		{
			if ((this._BPLNO != value))
			{
				this.OnBPLNOChanging(value);
				this.SendPropertyChanging();
				this._BPLNO = value;
				this.SendPropertyChanged("BPLNO");
				this.OnBPLNOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
	public string Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SterileBatchNo", DbType="VarChar(50)")]
	public string SterileBatchNo
	{
		get
		{
			return this._SterileBatchNo;
		}
		set
		{
			if ((this._SterileBatchNo != value))
			{
				this.OnSterileBatchNoChanging(value);
				this.SendPropertyChanging();
				this._SterileBatchNo = value;
				this.SendPropertyChanged("SterileBatchNo");
				this.OnSterileBatchNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ManufactureDate
	{
		get
		{
			return this._ManufactureDate;
		}
		set
		{
			if ((this._ManufactureDate != value))
			{
				this.OnManufactureDateChanging(value);
				this.SendPropertyChanging();
				this._ManufactureDate = value;
				this.SendPropertyChanged("ManufactureDate");
				this.OnManufactureDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this.OnExpiryDateChanging(value);
				this.SendPropertyChanging();
				this._ExpiryDate = value;
				this.SendPropertyChanged("ExpiryDate");
				this.OnExpiryDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BoxPackgcollecList")]
public partial class BoxPackgcollecList : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _BplNo;
	
	private string _Model;
	
	private string _Power;
	
	private string _AsDate;
	
	private string _AeDate;
	
	private System.Nullable<int> _Nod;
	
	private System.Nullable<int> _Total;
	
	private System.Nullable<int> _CollecQty;
	
	private System.Nullable<int> _BalQty;
	
	private string _CollecBy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnBplNoChanging(string value);
    partial void OnBplNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPowerChanging(string value);
    partial void OnPowerChanged();
    partial void OnAsDateChanging(string value);
    partial void OnAsDateChanged();
    partial void OnAeDateChanging(string value);
    partial void OnAeDateChanged();
    partial void OnNodChanging(System.Nullable<int> value);
    partial void OnNodChanged();
    partial void OnTotalChanging(System.Nullable<int> value);
    partial void OnTotalChanged();
    partial void OnCollecQtyChanging(System.Nullable<int> value);
    partial void OnCollecQtyChanged();
    partial void OnBalQtyChanging(System.Nullable<int> value);
    partial void OnBalQtyChanged();
    partial void OnCollecByChanging(string value);
    partial void OnCollecByChanged();
    #endregion
	
	public BoxPackgcollecList()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BplNo", DbType="VarChar(50)")]
	public string BplNo
	{
		get
		{
			return this._BplNo;
		}
		set
		{
			if ((this._BplNo != value))
			{
				this.OnBplNoChanging(value);
				this.SendPropertyChanging();
				this._BplNo = value;
				this.SendPropertyChanged("BplNo");
				this.OnBplNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="VarChar(50)")]
	public string Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsDate", DbType="VarChar(50)")]
	public string AsDate
	{
		get
		{
			return this._AsDate;
		}
		set
		{
			if ((this._AsDate != value))
			{
				this.OnAsDateChanging(value);
				this.SendPropertyChanging();
				this._AsDate = value;
				this.SendPropertyChanged("AsDate");
				this.OnAsDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AeDate", DbType="VarChar(50)")]
	public string AeDate
	{
		get
		{
			return this._AeDate;
		}
		set
		{
			if ((this._AeDate != value))
			{
				this.OnAeDateChanging(value);
				this.SendPropertyChanging();
				this._AeDate = value;
				this.SendPropertyChanged("AeDate");
				this.OnAeDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nod", DbType="Int")]
	public System.Nullable<int> Nod
	{
		get
		{
			return this._Nod;
		}
		set
		{
			if ((this._Nod != value))
			{
				this.OnNodChanging(value);
				this.SendPropertyChanging();
				this._Nod = value;
				this.SendPropertyChanged("Nod");
				this.OnNodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int")]
	public System.Nullable<int> Total
	{
		get
		{
			return this._Total;
		}
		set
		{
			if ((this._Total != value))
			{
				this.OnTotalChanging(value);
				this.SendPropertyChanging();
				this._Total = value;
				this.SendPropertyChanged("Total");
				this.OnTotalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollecQty", DbType="Int")]
	public System.Nullable<int> CollecQty
	{
		get
		{
			return this._CollecQty;
		}
		set
		{
			if ((this._CollecQty != value))
			{
				this.OnCollecQtyChanging(value);
				this.SendPropertyChanging();
				this._CollecQty = value;
				this.SendPropertyChanged("CollecQty");
				this.OnCollecQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalQty", DbType="Int")]
	public System.Nullable<int> BalQty
	{
		get
		{
			return this._BalQty;
		}
		set
		{
			if ((this._BalQty != value))
			{
				this.OnBalQtyChanging(value);
				this.SendPropertyChanging();
				this._BalQty = value;
				this.SendPropertyChanged("BalQty");
				this.OnBalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollecBy", DbType="VarChar(50)")]
	public string CollecBy
	{
		get
		{
			return this._CollecBy;
		}
		set
		{
			if ((this._CollecBy != value))
			{
				this.OnCollecByChanging(value);
				this.SendPropertyChanging();
				this._CollecBy = value;
				this.SendPropertyChanged("CollecBy");
				this.OnCollecByChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QcSerialNo")]
public partial class QcSerialNo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _TestType;
	
	private System.Nullable<int> _LotNo;
	
	private string _SerialNo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnLotNoChanging(System.Nullable<int> value);
    partial void OnLotNoChanged();
    partial void OnSerialNoChanging(string value);
    partial void OnSerialNoChanged();
    #endregion
	
	public QcSerialNo()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="VarChar(50)")]
	public string TestType
	{
		get
		{
			return this._TestType;
		}
		set
		{
			if ((this._TestType != value))
			{
				this.OnTestTypeChanging(value);
				this.SendPropertyChanging();
				this._TestType = value;
				this.SendPropertyChanged("TestType");
				this.OnTestTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="Int")]
	public System.Nullable<int> LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="VarChar(50)")]
	public string SerialNo
	{
		get
		{
			return this._SerialNo;
		}
		set
		{
			if ((this._SerialNo != value))
			{
				this.OnSerialNoChanging(value);
				this.SendPropertyChanging();
				this._SerialNo = value;
				this.SendPropertyChanged("SerialNo");
				this.OnSerialNoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackingEntryData")]
public partial class PackingEntryData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _LotNo;
	
	private System.Nullable<int> _Model;
	
	private string _SubModel;
	
	private string _Brand;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _SerialFrom;
	
	private System.Nullable<int> _SerialTo;
	
	private System.Nullable<int> _Qty;
	
	private System.Nullable<int> _RemainingQty;
	
	private System.Nullable<int> _TakenQty;
	
	private System.Nullable<int> _BPLNO;
	
	private string _Date;
	
	private string _SterileBatchNo;
	
	private System.Nullable<System.DateTime> _ManufactureDate;
	
	private System.Nullable<System.DateTime> _ExpiryDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(System.Nullable<int> value);
    partial void OnLotNoChanged();
    partial void OnModelChanging(System.Nullable<int> value);
    partial void OnModelChanged();
    partial void OnSubModelChanging(string value);
    partial void OnSubModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnSerialFromChanging(System.Nullable<int> value);
    partial void OnSerialFromChanged();
    partial void OnSerialToChanging(System.Nullable<int> value);
    partial void OnSerialToChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnRemainingQtyChanging(System.Nullable<int> value);
    partial void OnRemainingQtyChanged();
    partial void OnTakenQtyChanging(System.Nullable<int> value);
    partial void OnTakenQtyChanged();
    partial void OnBPLNOChanging(System.Nullable<int> value);
    partial void OnBPLNOChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnSterileBatchNoChanging(string value);
    partial void OnSterileBatchNoChanged();
    partial void OnManufactureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnManufactureDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    #endregion
	
	public PackingEntryData()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="Int")]
	public System.Nullable<int> LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="Int")]
	public System.Nullable<int> Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubModel", DbType="VarChar(50)")]
	public string SubModel
	{
		get
		{
			return this._SubModel;
		}
		set
		{
			if ((this._SubModel != value))
			{
				this.OnSubModelChanging(value);
				this.SendPropertyChanging();
				this._SubModel = value;
				this.SendPropertyChanged("SubModel");
				this.OnSubModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialFrom", DbType="Int")]
	public System.Nullable<int> SerialFrom
	{
		get
		{
			return this._SerialFrom;
		}
		set
		{
			if ((this._SerialFrom != value))
			{
				this.OnSerialFromChanging(value);
				this.SendPropertyChanging();
				this._SerialFrom = value;
				this.SendPropertyChanged("SerialFrom");
				this.OnSerialFromChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialTo", DbType="Int")]
	public System.Nullable<int> SerialTo
	{
		get
		{
			return this._SerialTo;
		}
		set
		{
			if ((this._SerialTo != value))
			{
				this.OnSerialToChanging(value);
				this.SendPropertyChanging();
				this._SerialTo = value;
				this.SendPropertyChanged("SerialTo");
				this.OnSerialToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
	public System.Nullable<int> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingQty", DbType="Int")]
	public System.Nullable<int> RemainingQty
	{
		get
		{
			return this._RemainingQty;
		}
		set
		{
			if ((this._RemainingQty != value))
			{
				this.OnRemainingQtyChanging(value);
				this.SendPropertyChanging();
				this._RemainingQty = value;
				this.SendPropertyChanged("RemainingQty");
				this.OnRemainingQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TakenQty", DbType="Int")]
	public System.Nullable<int> TakenQty
	{
		get
		{
			return this._TakenQty;
		}
		set
		{
			if ((this._TakenQty != value))
			{
				this.OnTakenQtyChanging(value);
				this.SendPropertyChanging();
				this._TakenQty = value;
				this.SendPropertyChanged("TakenQty");
				this.OnTakenQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPLNO", DbType="Int")]
	public System.Nullable<int> BPLNO
	{
		get
		{
			return this._BPLNO;
		}
		set
		{
			if ((this._BPLNO != value))
			{
				this.OnBPLNOChanging(value);
				this.SendPropertyChanging();
				this._BPLNO = value;
				this.SendPropertyChanged("BPLNO");
				this.OnBPLNOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
	public string Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SterileBatchNo", DbType="VarChar(50)")]
	public string SterileBatchNo
	{
		get
		{
			return this._SterileBatchNo;
		}
		set
		{
			if ((this._SterileBatchNo != value))
			{
				this.OnSterileBatchNoChanging(value);
				this.SendPropertyChanging();
				this._SterileBatchNo = value;
				this.SendPropertyChanged("SterileBatchNo");
				this.OnSterileBatchNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ManufactureDate
	{
		get
		{
			return this._ManufactureDate;
		}
		set
		{
			if ((this._ManufactureDate != value))
			{
				this.OnManufactureDateChanging(value);
				this.SendPropertyChanging();
				this._ManufactureDate = value;
				this.SendPropertyChanged("ManufactureDate");
				this.OnManufactureDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this.OnExpiryDateChanging(value);
				this.SendPropertyChanging();
				this._ExpiryDate = value;
				this.SendPropertyChanged("ExpiryDate");
				this.OnExpiryDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LensBoxPackingRejection")]
public partial class LensBoxPackingRejection : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _BplNo;
	
	private System.Nullable<int> _RejecQty;
	
	private string _LotNo;
	
	private string _SerialNo;
	
	private string _LensModel;
	
	private string _Pdama;
	
	private string _Pseal;
	
	private string _Pstrain;
	
	private string _Pstain;
	
	private string _PCdama;
	
	private string _PCdots;
	
	private string _PClabel;
	
	private string _PCseal;
	
	private string _PPhair;
	
	private string _PPdust;
	
	private string _PPburr;
	
	private string _PPthread;
	
	private string _PPliqLev;
	
	private string _PPoth;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBplNoChanging(System.Nullable<int> value);
    partial void OnBplNoChanged();
    partial void OnRejecQtyChanging(System.Nullable<int> value);
    partial void OnRejecQtyChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnSerialNoChanging(string value);
    partial void OnSerialNoChanged();
    partial void OnLensModelChanging(string value);
    partial void OnLensModelChanged();
    partial void OnPdamaChanging(string value);
    partial void OnPdamaChanged();
    partial void OnPsealChanging(string value);
    partial void OnPsealChanged();
    partial void OnPstrainChanging(string value);
    partial void OnPstrainChanged();
    partial void OnPstainChanging(string value);
    partial void OnPstainChanged();
    partial void OnPCdamaChanging(string value);
    partial void OnPCdamaChanged();
    partial void OnPCdotsChanging(string value);
    partial void OnPCdotsChanged();
    partial void OnPClabelChanging(string value);
    partial void OnPClabelChanged();
    partial void OnPCsealChanging(string value);
    partial void OnPCsealChanged();
    partial void OnPPhairChanging(string value);
    partial void OnPPhairChanged();
    partial void OnPPdustChanging(string value);
    partial void OnPPdustChanged();
    partial void OnPPburrChanging(string value);
    partial void OnPPburrChanged();
    partial void OnPPthreadChanging(string value);
    partial void OnPPthreadChanged();
    partial void OnPPliqLevChanging(string value);
    partial void OnPPliqLevChanged();
    partial void OnPPothChanging(string value);
    partial void OnPPothChanged();
    #endregion
	
	public LensBoxPackingRejection()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BplNo", DbType="Int")]
	public System.Nullable<int> BplNo
	{
		get
		{
			return this._BplNo;
		}
		set
		{
			if ((this._BplNo != value))
			{
				this.OnBplNoChanging(value);
				this.SendPropertyChanging();
				this._BplNo = value;
				this.SendPropertyChanged("BplNo");
				this.OnBplNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejecQty", DbType="Int")]
	public System.Nullable<int> RejecQty
	{
		get
		{
			return this._RejecQty;
		}
		set
		{
			if ((this._RejecQty != value))
			{
				this.OnRejecQtyChanging(value);
				this.SendPropertyChanging();
				this._RejecQty = value;
				this.SendPropertyChanged("RejecQty");
				this.OnRejecQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="VarChar(50)")]
	public string SerialNo
	{
		get
		{
			return this._SerialNo;
		}
		set
		{
			if ((this._SerialNo != value))
			{
				this.OnSerialNoChanging(value);
				this.SendPropertyChanging();
				this._SerialNo = value;
				this.SendPropertyChanged("SerialNo");
				this.OnSerialNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LensModel", DbType="VarChar(50)")]
	public string LensModel
	{
		get
		{
			return this._LensModel;
		}
		set
		{
			if ((this._LensModel != value))
			{
				this.OnLensModelChanging(value);
				this.SendPropertyChanging();
				this._LensModel = value;
				this.SendPropertyChanged("LensModel");
				this.OnLensModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdama", DbType="VarChar(50)")]
	public string Pdama
	{
		get
		{
			return this._Pdama;
		}
		set
		{
			if ((this._Pdama != value))
			{
				this.OnPdamaChanging(value);
				this.SendPropertyChanging();
				this._Pdama = value;
				this.SendPropertyChanged("Pdama");
				this.OnPdamaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pseal", DbType="VarChar(50)")]
	public string Pseal
	{
		get
		{
			return this._Pseal;
		}
		set
		{
			if ((this._Pseal != value))
			{
				this.OnPsealChanging(value);
				this.SendPropertyChanging();
				this._Pseal = value;
				this.SendPropertyChanged("Pseal");
				this.OnPsealChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pstrain", DbType="VarChar(50)")]
	public string Pstrain
	{
		get
		{
			return this._Pstrain;
		}
		set
		{
			if ((this._Pstrain != value))
			{
				this.OnPstrainChanging(value);
				this.SendPropertyChanging();
				this._Pstrain = value;
				this.SendPropertyChanged("Pstrain");
				this.OnPstrainChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pstain", DbType="VarChar(50)")]
	public string Pstain
	{
		get
		{
			return this._Pstain;
		}
		set
		{
			if ((this._Pstain != value))
			{
				this.OnPstainChanging(value);
				this.SendPropertyChanging();
				this._Pstain = value;
				this.SendPropertyChanged("Pstain");
				this.OnPstainChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCdama", DbType="VarChar(50)")]
	public string PCdama
	{
		get
		{
			return this._PCdama;
		}
		set
		{
			if ((this._PCdama != value))
			{
				this.OnPCdamaChanging(value);
				this.SendPropertyChanging();
				this._PCdama = value;
				this.SendPropertyChanged("PCdama");
				this.OnPCdamaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCdots", DbType="VarChar(50)")]
	public string PCdots
	{
		get
		{
			return this._PCdots;
		}
		set
		{
			if ((this._PCdots != value))
			{
				this.OnPCdotsChanging(value);
				this.SendPropertyChanging();
				this._PCdots = value;
				this.SendPropertyChanged("PCdots");
				this.OnPCdotsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PClabel", DbType="VarChar(50)")]
	public string PClabel
	{
		get
		{
			return this._PClabel;
		}
		set
		{
			if ((this._PClabel != value))
			{
				this.OnPClabelChanging(value);
				this.SendPropertyChanging();
				this._PClabel = value;
				this.SendPropertyChanged("PClabel");
				this.OnPClabelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCseal", DbType="VarChar(50)")]
	public string PCseal
	{
		get
		{
			return this._PCseal;
		}
		set
		{
			if ((this._PCseal != value))
			{
				this.OnPCsealChanging(value);
				this.SendPropertyChanging();
				this._PCseal = value;
				this.SendPropertyChanged("PCseal");
				this.OnPCsealChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPhair", DbType="VarChar(50)")]
	public string PPhair
	{
		get
		{
			return this._PPhair;
		}
		set
		{
			if ((this._PPhair != value))
			{
				this.OnPPhairChanging(value);
				this.SendPropertyChanging();
				this._PPhair = value;
				this.SendPropertyChanged("PPhair");
				this.OnPPhairChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPdust", DbType="VarChar(50)")]
	public string PPdust
	{
		get
		{
			return this._PPdust;
		}
		set
		{
			if ((this._PPdust != value))
			{
				this.OnPPdustChanging(value);
				this.SendPropertyChanging();
				this._PPdust = value;
				this.SendPropertyChanged("PPdust");
				this.OnPPdustChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPburr", DbType="VarChar(50)")]
	public string PPburr
	{
		get
		{
			return this._PPburr;
		}
		set
		{
			if ((this._PPburr != value))
			{
				this.OnPPburrChanging(value);
				this.SendPropertyChanging();
				this._PPburr = value;
				this.SendPropertyChanged("PPburr");
				this.OnPPburrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPthread", DbType="VarChar(50)")]
	public string PPthread
	{
		get
		{
			return this._PPthread;
		}
		set
		{
			if ((this._PPthread != value))
			{
				this.OnPPthreadChanging(value);
				this.SendPropertyChanging();
				this._PPthread = value;
				this.SendPropertyChanged("PPthread");
				this.OnPPthreadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPliqLev", DbType="VarChar(50)")]
	public string PPliqLev
	{
		get
		{
			return this._PPliqLev;
		}
		set
		{
			if ((this._PPliqLev != value))
			{
				this.OnPPliqLevChanging(value);
				this.SendPropertyChanging();
				this._PPliqLev = value;
				this.SendPropertyChanged("PPliqLev");
				this.OnPPliqLevChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPoth", DbType="VarChar(50)")]
	public string PPoth
	{
		get
		{
			return this._PPoth;
		}
		set
		{
			if ((this._PPoth != value))
			{
				this.OnPPothChanging(value);
				this.SendPropertyChanging();
				this._PPoth = value;
				this.SendPropertyChanged("PPoth");
				this.OnPPothChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityControl")]
public partial class QualityControl : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _BatchNo;
	
	private string _LotNo;
	
	private string _Model;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _Quantity;
	
	private string _Type;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
	
	public QualityControl()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="VarChar(50)")]
	public string BatchNo
	{
		get
		{
			return this._BatchNo;
		}
		set
		{
			if ((this._BatchNo != value))
			{
				this.OnBatchNoChanging(value);
				this.SendPropertyChanging();
				this._BatchNo = value;
				this.SendPropertyChanged("BatchNo");
				this.OnBatchNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LenscollectBoxPackRecord")]
public partial class LenscollectBoxPackRecord : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _BPLno;
	
	private System.Nullable<int> _Model;
	
	private System.Nullable<decimal> _Power;
	
	private string _Brand;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<int> _QtyReceived;
	
	private System.Nullable<int> _QtyAccepted;
	
	private System.Nullable<int> _QtyRejected;
	
	private string _InspectedBy;
	
	private string _SnoRejLens;
	
	private string _LPrintedBy;
	
	private string _Boxprepby;
	
	private string _PnOuterLby;
	
	private string _shrkPacBy;
	
	private string _Rmks;
	
	private string _LnPckLotNo;
	
	private string _LnPckQty;
	
	private string _FpStrQty;
	
	private System.Nullable<System.DateTime> _FpDate;
	
	private string _FpMtsNo;
	
	private System.Nullable<System.DateTime> _ThbDate;
	
	private string _ThbMtsNo;
	
	private string _ThbQty;
	
	private string _ToStrMtsNo;
	
	private string _ToStrQty;
	
	private System.Nullable<System.DateTime> _ToStrDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnBPLnoChanging(string value);
    partial void OnBPLnoChanged();
    partial void OnModelChanging(System.Nullable<int> value);
    partial void OnModelChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnQtyReceivedChanging(System.Nullable<int> value);
    partial void OnQtyReceivedChanged();
    partial void OnQtyAcceptedChanging(System.Nullable<int> value);
    partial void OnQtyAcceptedChanged();
    partial void OnQtyRejectedChanging(System.Nullable<int> value);
    partial void OnQtyRejectedChanged();
    partial void OnInspectedByChanging(string value);
    partial void OnInspectedByChanged();
    partial void OnSnoRejLensChanging(string value);
    partial void OnSnoRejLensChanged();
    partial void OnLPrintedByChanging(string value);
    partial void OnLPrintedByChanged();
    partial void OnBoxprepbyChanging(string value);
    partial void OnBoxprepbyChanged();
    partial void OnPnOuterLbyChanging(string value);
    partial void OnPnOuterLbyChanged();
    partial void OnshrkPacByChanging(string value);
    partial void OnshrkPacByChanged();
    partial void OnRmksChanging(string value);
    partial void OnRmksChanged();
    partial void OnLnPckLotNoChanging(string value);
    partial void OnLnPckLotNoChanged();
    partial void OnLnPckQtyChanging(string value);
    partial void OnLnPckQtyChanged();
    partial void OnFpStrQtyChanging(string value);
    partial void OnFpStrQtyChanged();
    partial void OnFpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFpDateChanged();
    partial void OnFpMtsNoChanging(string value);
    partial void OnFpMtsNoChanged();
    partial void OnThbDateChanging(System.Nullable<System.DateTime> value);
    partial void OnThbDateChanged();
    partial void OnThbMtsNoChanging(string value);
    partial void OnThbMtsNoChanged();
    partial void OnThbQtyChanging(string value);
    partial void OnThbQtyChanged();
    partial void OnToStrMtsNoChanging(string value);
    partial void OnToStrMtsNoChanged();
    partial void OnToStrQtyChanging(string value);
    partial void OnToStrQtyChanged();
    partial void OnToStrDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToStrDateChanged();
    #endregion
	
	public LenscollectBoxPackRecord()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BPLno", DbType="VarChar(50)")]
	public string BPLno
	{
		get
		{
			return this._BPLno;
		}
		set
		{
			if ((this._BPLno != value))
			{
				this.OnBPLnoChanging(value);
				this.SendPropertyChanging();
				this._BPLno = value;
				this.SendPropertyChanged("BPLno");
				this.OnBPLnoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="Int")]
	public System.Nullable<int> Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyReceived", DbType="Int")]
	public System.Nullable<int> QtyReceived
	{
		get
		{
			return this._QtyReceived;
		}
		set
		{
			if ((this._QtyReceived != value))
			{
				this.OnQtyReceivedChanging(value);
				this.SendPropertyChanging();
				this._QtyReceived = value;
				this.SendPropertyChanged("QtyReceived");
				this.OnQtyReceivedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyAccepted", DbType="Int")]
	public System.Nullable<int> QtyAccepted
	{
		get
		{
			return this._QtyAccepted;
		}
		set
		{
			if ((this._QtyAccepted != value))
			{
				this.OnQtyAcceptedChanging(value);
				this.SendPropertyChanging();
				this._QtyAccepted = value;
				this.SendPropertyChanged("QtyAccepted");
				this.OnQtyAcceptedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyRejected", DbType="Int")]
	public System.Nullable<int> QtyRejected
	{
		get
		{
			return this._QtyRejected;
		}
		set
		{
			if ((this._QtyRejected != value))
			{
				this.OnQtyRejectedChanging(value);
				this.SendPropertyChanging();
				this._QtyRejected = value;
				this.SendPropertyChanged("QtyRejected");
				this.OnQtyRejectedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy", DbType="VarChar(50)")]
	public string InspectedBy
	{
		get
		{
			return this._InspectedBy;
		}
		set
		{
			if ((this._InspectedBy != value))
			{
				this.OnInspectedByChanging(value);
				this.SendPropertyChanging();
				this._InspectedBy = value;
				this.SendPropertyChanged("InspectedBy");
				this.OnInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnoRejLens", DbType="VarChar(50)")]
	public string SnoRejLens
	{
		get
		{
			return this._SnoRejLens;
		}
		set
		{
			if ((this._SnoRejLens != value))
			{
				this.OnSnoRejLensChanging(value);
				this.SendPropertyChanging();
				this._SnoRejLens = value;
				this.SendPropertyChanged("SnoRejLens");
				this.OnSnoRejLensChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPrintedBy", DbType="VarChar(50)")]
	public string LPrintedBy
	{
		get
		{
			return this._LPrintedBy;
		}
		set
		{
			if ((this._LPrintedBy != value))
			{
				this.OnLPrintedByChanging(value);
				this.SendPropertyChanging();
				this._LPrintedBy = value;
				this.SendPropertyChanged("LPrintedBy");
				this.OnLPrintedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Boxprepby", DbType="VarChar(50)")]
	public string Boxprepby
	{
		get
		{
			return this._Boxprepby;
		}
		set
		{
			if ((this._Boxprepby != value))
			{
				this.OnBoxprepbyChanging(value);
				this.SendPropertyChanging();
				this._Boxprepby = value;
				this.SendPropertyChanged("Boxprepby");
				this.OnBoxprepbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PnOuterLby", DbType="VarChar(50)")]
	public string PnOuterLby
	{
		get
		{
			return this._PnOuterLby;
		}
		set
		{
			if ((this._PnOuterLby != value))
			{
				this.OnPnOuterLbyChanging(value);
				this.SendPropertyChanging();
				this._PnOuterLby = value;
				this.SendPropertyChanged("PnOuterLby");
				this.OnPnOuterLbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shrkPacBy", DbType="VarChar(50)")]
	public string shrkPacBy
	{
		get
		{
			return this._shrkPacBy;
		}
		set
		{
			if ((this._shrkPacBy != value))
			{
				this.OnshrkPacByChanging(value);
				this.SendPropertyChanging();
				this._shrkPacBy = value;
				this.SendPropertyChanged("shrkPacBy");
				this.OnshrkPacByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rmks", DbType="VarChar(50)")]
	public string Rmks
	{
		get
		{
			return this._Rmks;
		}
		set
		{
			if ((this._Rmks != value))
			{
				this.OnRmksChanging(value);
				this.SendPropertyChanging();
				this._Rmks = value;
				this.SendPropertyChanged("Rmks");
				this.OnRmksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LnPckLotNo", DbType="VarChar(50)")]
	public string LnPckLotNo
	{
		get
		{
			return this._LnPckLotNo;
		}
		set
		{
			if ((this._LnPckLotNo != value))
			{
				this.OnLnPckLotNoChanging(value);
				this.SendPropertyChanging();
				this._LnPckLotNo = value;
				this.SendPropertyChanged("LnPckLotNo");
				this.OnLnPckLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LnPckQty", DbType="VarChar(50)")]
	public string LnPckQty
	{
		get
		{
			return this._LnPckQty;
		}
		set
		{
			if ((this._LnPckQty != value))
			{
				this.OnLnPckQtyChanging(value);
				this.SendPropertyChanging();
				this._LnPckQty = value;
				this.SendPropertyChanged("LnPckQty");
				this.OnLnPckQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FpStrQty", DbType="VarChar(50)")]
	public string FpStrQty
	{
		get
		{
			return this._FpStrQty;
		}
		set
		{
			if ((this._FpStrQty != value))
			{
				this.OnFpStrQtyChanging(value);
				this.SendPropertyChanging();
				this._FpStrQty = value;
				this.SendPropertyChanged("FpStrQty");
				this.OnFpStrQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FpDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> FpDate
	{
		get
		{
			return this._FpDate;
		}
		set
		{
			if ((this._FpDate != value))
			{
				this.OnFpDateChanging(value);
				this.SendPropertyChanging();
				this._FpDate = value;
				this.SendPropertyChanged("FpDate");
				this.OnFpDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FpMtsNo", DbType="VarChar(50)")]
	public string FpMtsNo
	{
		get
		{
			return this._FpMtsNo;
		}
		set
		{
			if ((this._FpMtsNo != value))
			{
				this.OnFpMtsNoChanging(value);
				this.SendPropertyChanging();
				this._FpMtsNo = value;
				this.SendPropertyChanged("FpMtsNo");
				this.OnFpMtsNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThbDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ThbDate
	{
		get
		{
			return this._ThbDate;
		}
		set
		{
			if ((this._ThbDate != value))
			{
				this.OnThbDateChanging(value);
				this.SendPropertyChanging();
				this._ThbDate = value;
				this.SendPropertyChanged("ThbDate");
				this.OnThbDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThbMtsNo", DbType="VarChar(50)")]
	public string ThbMtsNo
	{
		get
		{
			return this._ThbMtsNo;
		}
		set
		{
			if ((this._ThbMtsNo != value))
			{
				this.OnThbMtsNoChanging(value);
				this.SendPropertyChanging();
				this._ThbMtsNo = value;
				this.SendPropertyChanged("ThbMtsNo");
				this.OnThbMtsNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThbQty", DbType="VarChar(50)")]
	public string ThbQty
	{
		get
		{
			return this._ThbQty;
		}
		set
		{
			if ((this._ThbQty != value))
			{
				this.OnThbQtyChanging(value);
				this.SendPropertyChanging();
				this._ThbQty = value;
				this.SendPropertyChanged("ThbQty");
				this.OnThbQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStrMtsNo", DbType="VarChar(50)")]
	public string ToStrMtsNo
	{
		get
		{
			return this._ToStrMtsNo;
		}
		set
		{
			if ((this._ToStrMtsNo != value))
			{
				this.OnToStrMtsNoChanging(value);
				this.SendPropertyChanging();
				this._ToStrMtsNo = value;
				this.SendPropertyChanged("ToStrMtsNo");
				this.OnToStrMtsNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStrQty", DbType="VarChar(50)")]
	public string ToStrQty
	{
		get
		{
			return this._ToStrQty;
		}
		set
		{
			if ((this._ToStrQty != value))
			{
				this.OnToStrQtyChanging(value);
				this.SendPropertyChanging();
				this._ToStrQty = value;
				this.SendPropertyChanged("ToStrQty");
				this.OnToStrQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStrDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ToStrDate
	{
		get
		{
			return this._ToStrDate;
		}
		set
		{
			if ((this._ToStrDate != value))
			{
				this.OnToStrDateChanging(value);
				this.SendPropertyChanging();
				this._ToStrDate = value;
				this.SendPropertyChanged("ToStrDate");
				this.OnToStrDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRNnum")]
public partial class PRNnum : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _PRNno;
	
	private string _ApprovedBy;
	
	private string _AuthSign;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPRNnoChanging(string value);
    partial void OnPRNnoChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    partial void OnAuthSignChanging(string value);
    partial void OnAuthSignChanged();
    #endregion
	
	public PRNnum()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRNno", DbType="VarChar(50)")]
	public string PRNno
	{
		get
		{
			return this._PRNno;
		}
		set
		{
			if ((this._PRNno != value))
			{
				this.OnPRNnoChanging(value);
				this.SendPropertyChanging();
				this._PRNno = value;
				this.SendPropertyChanged("PRNno");
				this.OnPRNnoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="VarChar(50)")]
	public string ApprovedBy
	{
		get
		{
			return this._ApprovedBy;
		}
		set
		{
			if ((this._ApprovedBy != value))
			{
				this.OnApprovedByChanging(value);
				this.SendPropertyChanging();
				this._ApprovedBy = value;
				this.SendPropertyChanged("ApprovedBy");
				this.OnApprovedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthSign", DbType="VarChar(50)")]
	public string AuthSign
	{
		get
		{
			return this._AuthSign;
		}
		set
		{
			if ((this._AuthSign != value))
			{
				this.OnAuthSignChanging(value);
				this.SendPropertyChanging();
				this._AuthSign = value;
				this.SendPropertyChanged("AuthSign");
				this.OnAuthSignChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DespatchTable")]
public partial class DespatchTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _DCNo;
	
	private string _ToName;
	
	private string _Address;
	
	private string _IndentNo;
	
	private System.Nullable<int> _NoOfPacking;
	
	private System.Nullable<System.DateTime> _DcDate;
	
	private System.Nullable<System.DateTime> _TransactionDate;
	
	private string _OrderRef;
	
	private string _ModeOfDespatch;
	
	private string _Remarks;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDCNoChanging(string value);
    partial void OnDCNoChanged();
    partial void OnToNameChanging(string value);
    partial void OnToNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIndentNoChanging(string value);
    partial void OnIndentNoChanged();
    partial void OnNoOfPackingChanging(System.Nullable<int> value);
    partial void OnNoOfPackingChanged();
    partial void OnDcDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDcDateChanged();
    partial void OnTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransactionDateChanged();
    partial void OnOrderRefChanging(string value);
    partial void OnOrderRefChanged();
    partial void OnModeOfDespatchChanging(string value);
    partial void OnModeOfDespatchChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
	
	public DespatchTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCNo", DbType="VarChar(50)")]
	public string DCNo
	{
		get
		{
			return this._DCNo;
		}
		set
		{
			if ((this._DCNo != value))
			{
				this.OnDCNoChanging(value);
				this.SendPropertyChanging();
				this._DCNo = value;
				this.SendPropertyChanged("DCNo");
				this.OnDCNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToName", DbType="VarChar(50)")]
	public string ToName
	{
		get
		{
			return this._ToName;
		}
		set
		{
			if ((this._ToName != value))
			{
				this.OnToNameChanging(value);
				this.SendPropertyChanging();
				this._ToName = value;
				this.SendPropertyChanged("ToName");
				this.OnToNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndentNo", DbType="VarChar(50)")]
	public string IndentNo
	{
		get
		{
			return this._IndentNo;
		}
		set
		{
			if ((this._IndentNo != value))
			{
				this.OnIndentNoChanging(value);
				this.SendPropertyChanging();
				this._IndentNo = value;
				this.SendPropertyChanged("IndentNo");
				this.OnIndentNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfPacking", DbType="Int")]
	public System.Nullable<int> NoOfPacking
	{
		get
		{
			return this._NoOfPacking;
		}
		set
		{
			if ((this._NoOfPacking != value))
			{
				this.OnNoOfPackingChanging(value);
				this.SendPropertyChanging();
				this._NoOfPacking = value;
				this.SendPropertyChanged("NoOfPacking");
				this.OnNoOfPackingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DcDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> DcDate
	{
		get
		{
			return this._DcDate;
		}
		set
		{
			if ((this._DcDate != value))
			{
				this.OnDcDateChanging(value);
				this.SendPropertyChanging();
				this._DcDate = value;
				this.SendPropertyChanged("DcDate");
				this.OnDcDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> TransactionDate
	{
		get
		{
			return this._TransactionDate;
		}
		set
		{
			if ((this._TransactionDate != value))
			{
				this.OnTransactionDateChanging(value);
				this.SendPropertyChanging();
				this._TransactionDate = value;
				this.SendPropertyChanged("TransactionDate");
				this.OnTransactionDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderRef", DbType="VarChar(50)")]
	public string OrderRef
	{
		get
		{
			return this._OrderRef;
		}
		set
		{
			if ((this._OrderRef != value))
			{
				this.OnOrderRefChanging(value);
				this.SendPropertyChanging();
				this._OrderRef = value;
				this.SendPropertyChanged("OrderRef");
				this.OnOrderRefChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModeOfDespatch", DbType="VarChar(50)")]
	public string ModeOfDespatch
	{
		get
		{
			return this._ModeOfDespatch;
		}
		set
		{
			if ((this._ModeOfDespatch != value))
			{
				this.OnModeOfDespatchChanging(value);
				this.SendPropertyChanging();
				this._ModeOfDespatch = value;
				this.SendPropertyChanged("ModeOfDespatch");
				this.OnModeOfDespatchChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MHSRnew")]
public partial class MHSRnew : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _MHSR;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _Shift;
	
	private string _BNoMHSR;
	
	private string _CheckedBySterility;
	
	private string _Chemist;
	
	private System.Nullable<System.DateTime> _DateMHSR;
	
	private string _DoorClosedTime;
	
	private string _DoorOpenedTime;
	
	private string _LalTest;
	
	private string _MaintainedUpto;
	
	private string _Operator;
	
	private string _OtherTest;
	
	private string _Particulars;
	
	private string _Press;
	
	private string _PressAttainedTime;
	
	private string _ProductRelease;
	
	private string _QuqlityControlCycle;
	
	private string _RecordRef;
	
	private string _ResultCycle;
	
	private string _ResultSterility;
	
	private string _SteamOpenedTime;
	
	private string _SterilityTest;
	
	private string _Temp;
	
	private string _VentClosedTime;
	
	private string _VentOpenedTime;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMHSRChanging(string value);
    partial void OnMHSRChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnBNoMHSRChanging(string value);
    partial void OnBNoMHSRChanged();
    partial void OnCheckedBySterilityChanging(string value);
    partial void OnCheckedBySterilityChanged();
    partial void OnChemistChanging(string value);
    partial void OnChemistChanged();
    partial void OnDateMHSRChanging(System.Nullable<System.DateTime> value);
    partial void OnDateMHSRChanged();
    partial void OnDoorClosedTimeChanging(string value);
    partial void OnDoorClosedTimeChanged();
    partial void OnDoorOpenedTimeChanging(string value);
    partial void OnDoorOpenedTimeChanged();
    partial void OnLalTestChanging(string value);
    partial void OnLalTestChanged();
    partial void OnMaintainedUptoChanging(string value);
    partial void OnMaintainedUptoChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnOtherTestChanging(string value);
    partial void OnOtherTestChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPressChanging(string value);
    partial void OnPressChanged();
    partial void OnPressAttainedTimeChanging(string value);
    partial void OnPressAttainedTimeChanged();
    partial void OnProductReleaseChanging(string value);
    partial void OnProductReleaseChanged();
    partial void OnQuqlityControlCycleChanging(string value);
    partial void OnQuqlityControlCycleChanged();
    partial void OnRecordRefChanging(string value);
    partial void OnRecordRefChanged();
    partial void OnResultCycleChanging(string value);
    partial void OnResultCycleChanged();
    partial void OnResultSterilityChanging(string value);
    partial void OnResultSterilityChanged();
    partial void OnSteamOpenedTimeChanging(string value);
    partial void OnSteamOpenedTimeChanged();
    partial void OnSterilityTestChanging(string value);
    partial void OnSterilityTestChanged();
    partial void OnTempChanging(string value);
    partial void OnTempChanged();
    partial void OnVentClosedTimeChanging(string value);
    partial void OnVentClosedTimeChanged();
    partial void OnVentOpenedTimeChanging(string value);
    partial void OnVentOpenedTimeChanged();
    #endregion
	
	public MHSRnew()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHSR", DbType="VarChar(50)")]
	public string MHSR
	{
		get
		{
			return this._MHSR;
		}
		set
		{
			if ((this._MHSR != value))
			{
				this.OnMHSRChanging(value);
				this.SendPropertyChanging();
				this._MHSR = value;
				this.SendPropertyChanged("MHSR");
				this.OnMHSRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(5)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BNoMHSR", DbType="VarChar(50)")]
	public string BNoMHSR
	{
		get
		{
			return this._BNoMHSR;
		}
		set
		{
			if ((this._BNoMHSR != value))
			{
				this.OnBNoMHSRChanging(value);
				this.SendPropertyChanging();
				this._BNoMHSR = value;
				this.SendPropertyChanged("BNoMHSR");
				this.OnBNoMHSRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBySterility", DbType="VarChar(50)")]
	public string CheckedBySterility
	{
		get
		{
			return this._CheckedBySterility;
		}
		set
		{
			if ((this._CheckedBySterility != value))
			{
				this.OnCheckedBySterilityChanging(value);
				this.SendPropertyChanging();
				this._CheckedBySterility = value;
				this.SendPropertyChanged("CheckedBySterility");
				this.OnCheckedBySterilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chemist", DbType="VarChar(50)")]
	public string Chemist
	{
		get
		{
			return this._Chemist;
		}
		set
		{
			if ((this._Chemist != value))
			{
				this.OnChemistChanging(value);
				this.SendPropertyChanging();
				this._Chemist = value;
				this.SendPropertyChanged("Chemist");
				this.OnChemistChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateMHSR", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateMHSR
	{
		get
		{
			return this._DateMHSR;
		}
		set
		{
			if ((this._DateMHSR != value))
			{
				this.OnDateMHSRChanging(value);
				this.SendPropertyChanging();
				this._DateMHSR = value;
				this.SendPropertyChanged("DateMHSR");
				this.OnDateMHSRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorClosedTime", DbType="VarChar(50)")]
	public string DoorClosedTime
	{
		get
		{
			return this._DoorClosedTime;
		}
		set
		{
			if ((this._DoorClosedTime != value))
			{
				this.OnDoorClosedTimeChanging(value);
				this.SendPropertyChanging();
				this._DoorClosedTime = value;
				this.SendPropertyChanged("DoorClosedTime");
				this.OnDoorClosedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorOpenedTime", DbType="VarChar(50)")]
	public string DoorOpenedTime
	{
		get
		{
			return this._DoorOpenedTime;
		}
		set
		{
			if ((this._DoorOpenedTime != value))
			{
				this.OnDoorOpenedTimeChanging(value);
				this.SendPropertyChanging();
				this._DoorOpenedTime = value;
				this.SendPropertyChanged("DoorOpenedTime");
				this.OnDoorOpenedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LalTest", DbType="VarChar(50)")]
	public string LalTest
	{
		get
		{
			return this._LalTest;
		}
		set
		{
			if ((this._LalTest != value))
			{
				this.OnLalTestChanging(value);
				this.SendPropertyChanging();
				this._LalTest = value;
				this.SendPropertyChanged("LalTest");
				this.OnLalTestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintainedUpto", DbType="VarChar(50)")]
	public string MaintainedUpto
	{
		get
		{
			return this._MaintainedUpto;
		}
		set
		{
			if ((this._MaintainedUpto != value))
			{
				this.OnMaintainedUptoChanging(value);
				this.SendPropertyChanging();
				this._MaintainedUpto = value;
				this.SendPropertyChanged("MaintainedUpto");
				this.OnMaintainedUptoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="VarChar(50)")]
	public string Operator
	{
		get
		{
			return this._Operator;
		}
		set
		{
			if ((this._Operator != value))
			{
				this.OnOperatorChanging(value);
				this.SendPropertyChanging();
				this._Operator = value;
				this.SendPropertyChanged("Operator");
				this.OnOperatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTest", DbType="VarChar(50)")]
	public string OtherTest
	{
		get
		{
			return this._OtherTest;
		}
		set
		{
			if ((this._OtherTest != value))
			{
				this.OnOtherTestChanging(value);
				this.SendPropertyChanging();
				this._OtherTest = value;
				this.SendPropertyChanged("OtherTest");
				this.OnOtherTestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="VarChar(50)")]
	public string Particulars
	{
		get
		{
			return this._Particulars;
		}
		set
		{
			if ((this._Particulars != value))
			{
				this.OnParticularsChanging(value);
				this.SendPropertyChanging();
				this._Particulars = value;
				this.SendPropertyChanged("Particulars");
				this.OnParticularsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Press", DbType="VarChar(50)")]
	public string Press
	{
		get
		{
			return this._Press;
		}
		set
		{
			if ((this._Press != value))
			{
				this.OnPressChanging(value);
				this.SendPropertyChanging();
				this._Press = value;
				this.SendPropertyChanged("Press");
				this.OnPressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressAttainedTime", DbType="VarChar(50)")]
	public string PressAttainedTime
	{
		get
		{
			return this._PressAttainedTime;
		}
		set
		{
			if ((this._PressAttainedTime != value))
			{
				this.OnPressAttainedTimeChanging(value);
				this.SendPropertyChanging();
				this._PressAttainedTime = value;
				this.SendPropertyChanged("PressAttainedTime");
				this.OnPressAttainedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductRelease", DbType="VarChar(50)")]
	public string ProductRelease
	{
		get
		{
			return this._ProductRelease;
		}
		set
		{
			if ((this._ProductRelease != value))
			{
				this.OnProductReleaseChanging(value);
				this.SendPropertyChanging();
				this._ProductRelease = value;
				this.SendPropertyChanged("ProductRelease");
				this.OnProductReleaseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuqlityControlCycle", DbType="VarChar(50)")]
	public string QuqlityControlCycle
	{
		get
		{
			return this._QuqlityControlCycle;
		}
		set
		{
			if ((this._QuqlityControlCycle != value))
			{
				this.OnQuqlityControlCycleChanging(value);
				this.SendPropertyChanging();
				this._QuqlityControlCycle = value;
				this.SendPropertyChanged("QuqlityControlCycle");
				this.OnQuqlityControlCycleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordRef", DbType="VarChar(50)")]
	public string RecordRef
	{
		get
		{
			return this._RecordRef;
		}
		set
		{
			if ((this._RecordRef != value))
			{
				this.OnRecordRefChanging(value);
				this.SendPropertyChanging();
				this._RecordRef = value;
				this.SendPropertyChanged("RecordRef");
				this.OnRecordRefChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCycle", DbType="VarChar(50)")]
	public string ResultCycle
	{
		get
		{
			return this._ResultCycle;
		}
		set
		{
			if ((this._ResultCycle != value))
			{
				this.OnResultCycleChanging(value);
				this.SendPropertyChanging();
				this._ResultCycle = value;
				this.SendPropertyChanged("ResultCycle");
				this.OnResultCycleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultSterility", DbType="VarChar(50)")]
	public string ResultSterility
	{
		get
		{
			return this._ResultSterility;
		}
		set
		{
			if ((this._ResultSterility != value))
			{
				this.OnResultSterilityChanging(value);
				this.SendPropertyChanging();
				this._ResultSterility = value;
				this.SendPropertyChanged("ResultSterility");
				this.OnResultSterilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteamOpenedTime", DbType="VarChar(50)")]
	public string SteamOpenedTime
	{
		get
		{
			return this._SteamOpenedTime;
		}
		set
		{
			if ((this._SteamOpenedTime != value))
			{
				this.OnSteamOpenedTimeChanging(value);
				this.SendPropertyChanging();
				this._SteamOpenedTime = value;
				this.SendPropertyChanged("SteamOpenedTime");
				this.OnSteamOpenedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SterilityTest", DbType="VarChar(50)")]
	public string SterilityTest
	{
		get
		{
			return this._SterilityTest;
		}
		set
		{
			if ((this._SterilityTest != value))
			{
				this.OnSterilityTestChanging(value);
				this.SendPropertyChanging();
				this._SterilityTest = value;
				this.SendPropertyChanged("SterilityTest");
				this.OnSterilityTestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temp", DbType="VarChar(50)")]
	public string Temp
	{
		get
		{
			return this._Temp;
		}
		set
		{
			if ((this._Temp != value))
			{
				this.OnTempChanging(value);
				this.SendPropertyChanging();
				this._Temp = value;
				this.SendPropertyChanged("Temp");
				this.OnTempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VentClosedTime", DbType="VarChar(50)")]
	public string VentClosedTime
	{
		get
		{
			return this._VentClosedTime;
		}
		set
		{
			if ((this._VentClosedTime != value))
			{
				this.OnVentClosedTimeChanging(value);
				this.SendPropertyChanging();
				this._VentClosedTime = value;
				this.SendPropertyChanged("VentClosedTime");
				this.OnVentClosedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VentOpenedTime", DbType="VarChar(50)")]
	public string VentOpenedTime
	{
		get
		{
			return this._VentOpenedTime;
		}
		set
		{
			if ((this._VentOpenedTime != value))
			{
				this.OnVentOpenedTimeChanging(value);
				this.SendPropertyChanging();
				this._VentOpenedTime = value;
				this.SendPropertyChanged("VentOpenedTime");
				this.OnVentOpenedTimeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MHSR")]
public partial class MHSR : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _MHSRNo;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _Shift;
	
	private string _BatchNo;
	
	private System.Nullable<System.DateTime> _DateLoad;
	
	private System.Nullable<int> _LotNo1;
	
	private System.Nullable<int> _LotNo2;
	
	private System.Nullable<int> _LotNo3;
	
	private System.Nullable<int> _LotNo4;
	
	private System.Nullable<int> _LotNo5;
	
	private System.Nullable<int> _LotNo6;
	
	private string _DummyLotNo;
	
	private System.Nullable<int> _qty1;
	
	private System.Nullable<int> _qty2;
	
	private System.Nullable<int> _qty3;
	
	private System.Nullable<int> _qty4;
	
	private System.Nullable<int> _qty5;
	
	private System.Nullable<int> _qty6;
	
	private System.Nullable<int> _qtyDummy;
	
	private string _BI1;
	
	private string _BI2;
	
	private string _BI3;
	
	private string _BI4;
	
	private string _BI5;
	
	private string _BI6;
	
	private string _BI7;
	
	private string _BI8;
	
	private string _BI9;
	
	private string _BI10;
	
	private string _BI11;
	
	private string _BI12;
	
	private string _Mode;
	
	private string _ExposureTime;
	
	private string _RoomTemp;
	
	private string _StartTime;
	
	private string _StartDay;
	
	private string _StopTime;
	
	private string _StopDay;
	
	private string _CycleTime;
	
	private string _BeforeChemical;
	
	private string _AfterChemical;
	
	private string _ResultChemical;
	
	private string _CheckedByChemical;
	
	private string _BeforeBio;
	
	private string _AfterBio;
	
	private string _CheckedByBio;
	
	private string _ResultBio;
	
	private System.Nullable<System.DateTime> _DateMHSR;
	
	private string _BNoMHSR;
	
	private string _Particulars;
	
	private string _DoorClosedTime;
	
	private string _SteamOpenedTime;
	
	private string _VentClosedTime;
	
	private string _PressAttainedTime;
	
	private string _Press;
	
	private string _Temp;
	
	private string _MaintainedUpto;
	
	private string _VentOpenedTime;
	
	private string _DoorOpenedTime;
	
	private string _Operator;
	
	private string _Chemist;
	
	private string _SterilityTest;
	
	private string _LalTest;
	
	private string _OtherTest;
	
	private string _ResultSterility;
	
	private string _RecordRef;
	
	private string _CheckedBySterility;
	
	private string _ResultCycle;
	
	private string _QuqlityControlCycle;
	
	private string _ProductRelease;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMHSRNoChanging(string value);
    partial void OnMHSRNoChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnDateLoadChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLoadChanged();
    partial void OnLotNo1Changing(System.Nullable<int> value);
    partial void OnLotNo1Changed();
    partial void OnLotNo2Changing(System.Nullable<int> value);
    partial void OnLotNo2Changed();
    partial void OnLotNo3Changing(System.Nullable<int> value);
    partial void OnLotNo3Changed();
    partial void OnLotNo4Changing(System.Nullable<int> value);
    partial void OnLotNo4Changed();
    partial void OnLotNo5Changing(System.Nullable<int> value);
    partial void OnLotNo5Changed();
    partial void OnLotNo6Changing(System.Nullable<int> value);
    partial void OnLotNo6Changed();
    partial void OnDummyLotNoChanging(string value);
    partial void OnDummyLotNoChanged();
    partial void Onqty1Changing(System.Nullable<int> value);
    partial void Onqty1Changed();
    partial void Onqty2Changing(System.Nullable<int> value);
    partial void Onqty2Changed();
    partial void Onqty3Changing(System.Nullable<int> value);
    partial void Onqty3Changed();
    partial void Onqty4Changing(System.Nullable<int> value);
    partial void Onqty4Changed();
    partial void Onqty5Changing(System.Nullable<int> value);
    partial void Onqty5Changed();
    partial void Onqty6Changing(System.Nullable<int> value);
    partial void Onqty6Changed();
    partial void OnqtyDummyChanging(System.Nullable<int> value);
    partial void OnqtyDummyChanged();
    partial void OnBI1Changing(string value);
    partial void OnBI1Changed();
    partial void OnBI2Changing(string value);
    partial void OnBI2Changed();
    partial void OnBI3Changing(string value);
    partial void OnBI3Changed();
    partial void OnBI4Changing(string value);
    partial void OnBI4Changed();
    partial void OnBI5Changing(string value);
    partial void OnBI5Changed();
    partial void OnBI6Changing(string value);
    partial void OnBI6Changed();
    partial void OnBI7Changing(string value);
    partial void OnBI7Changed();
    partial void OnBI8Changing(string value);
    partial void OnBI8Changed();
    partial void OnBI9Changing(string value);
    partial void OnBI9Changed();
    partial void OnBI10Changing(string value);
    partial void OnBI10Changed();
    partial void OnBI11Changing(string value);
    partial void OnBI11Changed();
    partial void OnBI12Changing(string value);
    partial void OnBI12Changed();
    partial void OnModeChanging(string value);
    partial void OnModeChanged();
    partial void OnExposureTimeChanging(string value);
    partial void OnExposureTimeChanged();
    partial void OnRoomTempChanging(string value);
    partial void OnRoomTempChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnStartDayChanging(string value);
    partial void OnStartDayChanged();
    partial void OnStopTimeChanging(string value);
    partial void OnStopTimeChanged();
    partial void OnStopDayChanging(string value);
    partial void OnStopDayChanged();
    partial void OnCycleTimeChanging(string value);
    partial void OnCycleTimeChanged();
    partial void OnBeforeChemicalChanging(string value);
    partial void OnBeforeChemicalChanged();
    partial void OnAfterChemicalChanging(string value);
    partial void OnAfterChemicalChanged();
    partial void OnResultChemicalChanging(string value);
    partial void OnResultChemicalChanged();
    partial void OnCheckedByChemicalChanging(string value);
    partial void OnCheckedByChemicalChanged();
    partial void OnBeforeBioChanging(string value);
    partial void OnBeforeBioChanged();
    partial void OnAfterBioChanging(string value);
    partial void OnAfterBioChanged();
    partial void OnCheckedByBioChanging(string value);
    partial void OnCheckedByBioChanged();
    partial void OnResultBioChanging(string value);
    partial void OnResultBioChanged();
    partial void OnDateMHSRChanging(System.Nullable<System.DateTime> value);
    partial void OnDateMHSRChanged();
    partial void OnBNoMHSRChanging(string value);
    partial void OnBNoMHSRChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnDoorClosedTimeChanging(string value);
    partial void OnDoorClosedTimeChanged();
    partial void OnSteamOpenedTimeChanging(string value);
    partial void OnSteamOpenedTimeChanged();
    partial void OnVentClosedTimeChanging(string value);
    partial void OnVentClosedTimeChanged();
    partial void OnPressAttainedTimeChanging(string value);
    partial void OnPressAttainedTimeChanged();
    partial void OnPressChanging(string value);
    partial void OnPressChanged();
    partial void OnTempChanging(string value);
    partial void OnTempChanged();
    partial void OnMaintainedUptoChanging(string value);
    partial void OnMaintainedUptoChanged();
    partial void OnVentOpenedTimeChanging(string value);
    partial void OnVentOpenedTimeChanged();
    partial void OnDoorOpenedTimeChanging(string value);
    partial void OnDoorOpenedTimeChanged();
    partial void OnOperatorChanging(string value);
    partial void OnOperatorChanged();
    partial void OnChemistChanging(string value);
    partial void OnChemistChanged();
    partial void OnSterilityTestChanging(string value);
    partial void OnSterilityTestChanged();
    partial void OnLalTestChanging(string value);
    partial void OnLalTestChanged();
    partial void OnOtherTestChanging(string value);
    partial void OnOtherTestChanged();
    partial void OnResultSterilityChanging(string value);
    partial void OnResultSterilityChanged();
    partial void OnRecordRefChanging(string value);
    partial void OnRecordRefChanged();
    partial void OnCheckedBySterilityChanging(string value);
    partial void OnCheckedBySterilityChanged();
    partial void OnResultCycleChanging(string value);
    partial void OnResultCycleChanged();
    partial void OnQuqlityControlCycleChanging(string value);
    partial void OnQuqlityControlCycleChanged();
    partial void OnProductReleaseChanging(string value);
    partial void OnProductReleaseChanged();
    #endregion
	
	public MHSR()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHSRNo", DbType="VarChar(50)")]
	public string MHSRNo
	{
		get
		{
			return this._MHSRNo;
		}
		set
		{
			if ((this._MHSRNo != value))
			{
				this.OnMHSRNoChanging(value);
				this.SendPropertyChanging();
				this._MHSRNo = value;
				this.SendPropertyChanged("MHSRNo");
				this.OnMHSRNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="VarChar(50)")]
	public string BatchNo
	{
		get
		{
			return this._BatchNo;
		}
		set
		{
			if ((this._BatchNo != value))
			{
				this.OnBatchNoChanging(value);
				this.SendPropertyChanging();
				this._BatchNo = value;
				this.SendPropertyChanged("BatchNo");
				this.OnBatchNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLoad", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateLoad
	{
		get
		{
			return this._DateLoad;
		}
		set
		{
			if ((this._DateLoad != value))
			{
				this.OnDateLoadChanging(value);
				this.SendPropertyChanging();
				this._DateLoad = value;
				this.SendPropertyChanged("DateLoad");
				this.OnDateLoadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo1", DbType="Int")]
	public System.Nullable<int> LotNo1
	{
		get
		{
			return this._LotNo1;
		}
		set
		{
			if ((this._LotNo1 != value))
			{
				this.OnLotNo1Changing(value);
				this.SendPropertyChanging();
				this._LotNo1 = value;
				this.SendPropertyChanged("LotNo1");
				this.OnLotNo1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo2", DbType="Int")]
	public System.Nullable<int> LotNo2
	{
		get
		{
			return this._LotNo2;
		}
		set
		{
			if ((this._LotNo2 != value))
			{
				this.OnLotNo2Changing(value);
				this.SendPropertyChanging();
				this._LotNo2 = value;
				this.SendPropertyChanged("LotNo2");
				this.OnLotNo2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo3", DbType="Int")]
	public System.Nullable<int> LotNo3
	{
		get
		{
			return this._LotNo3;
		}
		set
		{
			if ((this._LotNo3 != value))
			{
				this.OnLotNo3Changing(value);
				this.SendPropertyChanging();
				this._LotNo3 = value;
				this.SendPropertyChanged("LotNo3");
				this.OnLotNo3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo4", DbType="Int")]
	public System.Nullable<int> LotNo4
	{
		get
		{
			return this._LotNo4;
		}
		set
		{
			if ((this._LotNo4 != value))
			{
				this.OnLotNo4Changing(value);
				this.SendPropertyChanging();
				this._LotNo4 = value;
				this.SendPropertyChanged("LotNo4");
				this.OnLotNo4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo5", DbType="Int")]
	public System.Nullable<int> LotNo5
	{
		get
		{
			return this._LotNo5;
		}
		set
		{
			if ((this._LotNo5 != value))
			{
				this.OnLotNo5Changing(value);
				this.SendPropertyChanging();
				this._LotNo5 = value;
				this.SendPropertyChanged("LotNo5");
				this.OnLotNo5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo6", DbType="Int")]
	public System.Nullable<int> LotNo6
	{
		get
		{
			return this._LotNo6;
		}
		set
		{
			if ((this._LotNo6 != value))
			{
				this.OnLotNo6Changing(value);
				this.SendPropertyChanging();
				this._LotNo6 = value;
				this.SendPropertyChanged("LotNo6");
				this.OnLotNo6Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DummyLotNo", DbType="VarChar(50)")]
	public string DummyLotNo
	{
		get
		{
			return this._DummyLotNo;
		}
		set
		{
			if ((this._DummyLotNo != value))
			{
				this.OnDummyLotNoChanging(value);
				this.SendPropertyChanging();
				this._DummyLotNo = value;
				this.SendPropertyChanged("DummyLotNo");
				this.OnDummyLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty1", DbType="Int")]
	public System.Nullable<int> qty1
	{
		get
		{
			return this._qty1;
		}
		set
		{
			if ((this._qty1 != value))
			{
				this.Onqty1Changing(value);
				this.SendPropertyChanging();
				this._qty1 = value;
				this.SendPropertyChanged("qty1");
				this.Onqty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty2", DbType="Int")]
	public System.Nullable<int> qty2
	{
		get
		{
			return this._qty2;
		}
		set
		{
			if ((this._qty2 != value))
			{
				this.Onqty2Changing(value);
				this.SendPropertyChanging();
				this._qty2 = value;
				this.SendPropertyChanged("qty2");
				this.Onqty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty3", DbType="Int")]
	public System.Nullable<int> qty3
	{
		get
		{
			return this._qty3;
		}
		set
		{
			if ((this._qty3 != value))
			{
				this.Onqty3Changing(value);
				this.SendPropertyChanging();
				this._qty3 = value;
				this.SendPropertyChanged("qty3");
				this.Onqty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty4", DbType="Int")]
	public System.Nullable<int> qty4
	{
		get
		{
			return this._qty4;
		}
		set
		{
			if ((this._qty4 != value))
			{
				this.Onqty4Changing(value);
				this.SendPropertyChanging();
				this._qty4 = value;
				this.SendPropertyChanged("qty4");
				this.Onqty4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty5", DbType="Int")]
	public System.Nullable<int> qty5
	{
		get
		{
			return this._qty5;
		}
		set
		{
			if ((this._qty5 != value))
			{
				this.Onqty5Changing(value);
				this.SendPropertyChanging();
				this._qty5 = value;
				this.SendPropertyChanged("qty5");
				this.Onqty5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty6", DbType="Int")]
	public System.Nullable<int> qty6
	{
		get
		{
			return this._qty6;
		}
		set
		{
			if ((this._qty6 != value))
			{
				this.Onqty6Changing(value);
				this.SendPropertyChanging();
				this._qty6 = value;
				this.SendPropertyChanged("qty6");
				this.Onqty6Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtyDummy", DbType="Int")]
	public System.Nullable<int> qtyDummy
	{
		get
		{
			return this._qtyDummy;
		}
		set
		{
			if ((this._qtyDummy != value))
			{
				this.OnqtyDummyChanging(value);
				this.SendPropertyChanging();
				this._qtyDummy = value;
				this.SendPropertyChanged("qtyDummy");
				this.OnqtyDummyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI1", DbType="VarChar(50)")]
	public string BI1
	{
		get
		{
			return this._BI1;
		}
		set
		{
			if ((this._BI1 != value))
			{
				this.OnBI1Changing(value);
				this.SendPropertyChanging();
				this._BI1 = value;
				this.SendPropertyChanged("BI1");
				this.OnBI1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI2", DbType="VarChar(50)")]
	public string BI2
	{
		get
		{
			return this._BI2;
		}
		set
		{
			if ((this._BI2 != value))
			{
				this.OnBI2Changing(value);
				this.SendPropertyChanging();
				this._BI2 = value;
				this.SendPropertyChanged("BI2");
				this.OnBI2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI3", DbType="VarChar(50)")]
	public string BI3
	{
		get
		{
			return this._BI3;
		}
		set
		{
			if ((this._BI3 != value))
			{
				this.OnBI3Changing(value);
				this.SendPropertyChanging();
				this._BI3 = value;
				this.SendPropertyChanged("BI3");
				this.OnBI3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI4", DbType="VarChar(50)")]
	public string BI4
	{
		get
		{
			return this._BI4;
		}
		set
		{
			if ((this._BI4 != value))
			{
				this.OnBI4Changing(value);
				this.SendPropertyChanging();
				this._BI4 = value;
				this.SendPropertyChanged("BI4");
				this.OnBI4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI5", DbType="VarChar(50)")]
	public string BI5
	{
		get
		{
			return this._BI5;
		}
		set
		{
			if ((this._BI5 != value))
			{
				this.OnBI5Changing(value);
				this.SendPropertyChanging();
				this._BI5 = value;
				this.SendPropertyChanged("BI5");
				this.OnBI5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI6", DbType="VarChar(50)")]
	public string BI6
	{
		get
		{
			return this._BI6;
		}
		set
		{
			if ((this._BI6 != value))
			{
				this.OnBI6Changing(value);
				this.SendPropertyChanging();
				this._BI6 = value;
				this.SendPropertyChanged("BI6");
				this.OnBI6Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI7", DbType="VarChar(50)")]
	public string BI7
	{
		get
		{
			return this._BI7;
		}
		set
		{
			if ((this._BI7 != value))
			{
				this.OnBI7Changing(value);
				this.SendPropertyChanging();
				this._BI7 = value;
				this.SendPropertyChanged("BI7");
				this.OnBI7Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI8", DbType="VarChar(50)")]
	public string BI8
	{
		get
		{
			return this._BI8;
		}
		set
		{
			if ((this._BI8 != value))
			{
				this.OnBI8Changing(value);
				this.SendPropertyChanging();
				this._BI8 = value;
				this.SendPropertyChanged("BI8");
				this.OnBI8Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI9", DbType="VarChar(50)")]
	public string BI9
	{
		get
		{
			return this._BI9;
		}
		set
		{
			if ((this._BI9 != value))
			{
				this.OnBI9Changing(value);
				this.SendPropertyChanging();
				this._BI9 = value;
				this.SendPropertyChanged("BI9");
				this.OnBI9Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI10", DbType="VarChar(50)")]
	public string BI10
	{
		get
		{
			return this._BI10;
		}
		set
		{
			if ((this._BI10 != value))
			{
				this.OnBI10Changing(value);
				this.SendPropertyChanging();
				this._BI10 = value;
				this.SendPropertyChanged("BI10");
				this.OnBI10Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI11", DbType="VarChar(50)")]
	public string BI11
	{
		get
		{
			return this._BI11;
		}
		set
		{
			if ((this._BI11 != value))
			{
				this.OnBI11Changing(value);
				this.SendPropertyChanging();
				this._BI11 = value;
				this.SendPropertyChanged("BI11");
				this.OnBI11Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BI12", DbType="VarChar(50)")]
	public string BI12
	{
		get
		{
			return this._BI12;
		}
		set
		{
			if ((this._BI12 != value))
			{
				this.OnBI12Changing(value);
				this.SendPropertyChanging();
				this._BI12 = value;
				this.SendPropertyChanged("BI12");
				this.OnBI12Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mode", DbType="VarChar(50)")]
	public string Mode
	{
		get
		{
			return this._Mode;
		}
		set
		{
			if ((this._Mode != value))
			{
				this.OnModeChanging(value);
				this.SendPropertyChanging();
				this._Mode = value;
				this.SendPropertyChanged("Mode");
				this.OnModeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExposureTime", DbType="VarChar(50)")]
	public string ExposureTime
	{
		get
		{
			return this._ExposureTime;
		}
		set
		{
			if ((this._ExposureTime != value))
			{
				this.OnExposureTimeChanging(value);
				this.SendPropertyChanging();
				this._ExposureTime = value;
				this.SendPropertyChanged("ExposureTime");
				this.OnExposureTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomTemp", DbType="VarChar(50)")]
	public string RoomTemp
	{
		get
		{
			return this._RoomTemp;
		}
		set
		{
			if ((this._RoomTemp != value))
			{
				this.OnRoomTempChanging(value);
				this.SendPropertyChanging();
				this._RoomTemp = value;
				this.SendPropertyChanged("RoomTemp");
				this.OnRoomTempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDay", DbType="VarChar(50)")]
	public string StartDay
	{
		get
		{
			return this._StartDay;
		}
		set
		{
			if ((this._StartDay != value))
			{
				this.OnStartDayChanging(value);
				this.SendPropertyChanging();
				this._StartDay = value;
				this.SendPropertyChanged("StartDay");
				this.OnStartDayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopTime", DbType="VarChar(50)")]
	public string StopTime
	{
		get
		{
			return this._StopTime;
		}
		set
		{
			if ((this._StopTime != value))
			{
				this.OnStopTimeChanging(value);
				this.SendPropertyChanging();
				this._StopTime = value;
				this.SendPropertyChanged("StopTime");
				this.OnStopTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopDay", DbType="VarChar(50)")]
	public string StopDay
	{
		get
		{
			return this._StopDay;
		}
		set
		{
			if ((this._StopDay != value))
			{
				this.OnStopDayChanging(value);
				this.SendPropertyChanging();
				this._StopDay = value;
				this.SendPropertyChanged("StopDay");
				this.OnStopDayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CycleTime", DbType="VarChar(50)")]
	public string CycleTime
	{
		get
		{
			return this._CycleTime;
		}
		set
		{
			if ((this._CycleTime != value))
			{
				this.OnCycleTimeChanging(value);
				this.SendPropertyChanging();
				this._CycleTime = value;
				this.SendPropertyChanged("CycleTime");
				this.OnCycleTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeforeChemical", DbType="VarChar(50)")]
	public string BeforeChemical
	{
		get
		{
			return this._BeforeChemical;
		}
		set
		{
			if ((this._BeforeChemical != value))
			{
				this.OnBeforeChemicalChanging(value);
				this.SendPropertyChanging();
				this._BeforeChemical = value;
				this.SendPropertyChanged("BeforeChemical");
				this.OnBeforeChemicalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterChemical", DbType="VarChar(50)")]
	public string AfterChemical
	{
		get
		{
			return this._AfterChemical;
		}
		set
		{
			if ((this._AfterChemical != value))
			{
				this.OnAfterChemicalChanging(value);
				this.SendPropertyChanging();
				this._AfterChemical = value;
				this.SendPropertyChanged("AfterChemical");
				this.OnAfterChemicalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultChemical", DbType="VarChar(50)")]
	public string ResultChemical
	{
		get
		{
			return this._ResultChemical;
		}
		set
		{
			if ((this._ResultChemical != value))
			{
				this.OnResultChemicalChanging(value);
				this.SendPropertyChanging();
				this._ResultChemical = value;
				this.SendPropertyChanged("ResultChemical");
				this.OnResultChemicalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedByChemical", DbType="VarChar(50)")]
	public string CheckedByChemical
	{
		get
		{
			return this._CheckedByChemical;
		}
		set
		{
			if ((this._CheckedByChemical != value))
			{
				this.OnCheckedByChemicalChanging(value);
				this.SendPropertyChanging();
				this._CheckedByChemical = value;
				this.SendPropertyChanged("CheckedByChemical");
				this.OnCheckedByChemicalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeforeBio", DbType="VarChar(50)")]
	public string BeforeBio
	{
		get
		{
			return this._BeforeBio;
		}
		set
		{
			if ((this._BeforeBio != value))
			{
				this.OnBeforeBioChanging(value);
				this.SendPropertyChanging();
				this._BeforeBio = value;
				this.SendPropertyChanged("BeforeBio");
				this.OnBeforeBioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterBio", DbType="VarChar(50)")]
	public string AfterBio
	{
		get
		{
			return this._AfterBio;
		}
		set
		{
			if ((this._AfterBio != value))
			{
				this.OnAfterBioChanging(value);
				this.SendPropertyChanging();
				this._AfterBio = value;
				this.SendPropertyChanged("AfterBio");
				this.OnAfterBioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedByBio", DbType="VarChar(50)")]
	public string CheckedByBio
	{
		get
		{
			return this._CheckedByBio;
		}
		set
		{
			if ((this._CheckedByBio != value))
			{
				this.OnCheckedByBioChanging(value);
				this.SendPropertyChanging();
				this._CheckedByBio = value;
				this.SendPropertyChanged("CheckedByBio");
				this.OnCheckedByBioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultBio", DbType="VarChar(50)")]
	public string ResultBio
	{
		get
		{
			return this._ResultBio;
		}
		set
		{
			if ((this._ResultBio != value))
			{
				this.OnResultBioChanging(value);
				this.SendPropertyChanging();
				this._ResultBio = value;
				this.SendPropertyChanged("ResultBio");
				this.OnResultBioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateMHSR", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateMHSR
	{
		get
		{
			return this._DateMHSR;
		}
		set
		{
			if ((this._DateMHSR != value))
			{
				this.OnDateMHSRChanging(value);
				this.SendPropertyChanging();
				this._DateMHSR = value;
				this.SendPropertyChanged("DateMHSR");
				this.OnDateMHSRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BNoMHSR", DbType="VarChar(50)")]
	public string BNoMHSR
	{
		get
		{
			return this._BNoMHSR;
		}
		set
		{
			if ((this._BNoMHSR != value))
			{
				this.OnBNoMHSRChanging(value);
				this.SendPropertyChanging();
				this._BNoMHSR = value;
				this.SendPropertyChanged("BNoMHSR");
				this.OnBNoMHSRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NChar(10)")]
	public string Particulars
	{
		get
		{
			return this._Particulars;
		}
		set
		{
			if ((this._Particulars != value))
			{
				this.OnParticularsChanging(value);
				this.SendPropertyChanging();
				this._Particulars = value;
				this.SendPropertyChanged("Particulars");
				this.OnParticularsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorClosedTime", DbType="NChar(10)")]
	public string DoorClosedTime
	{
		get
		{
			return this._DoorClosedTime;
		}
		set
		{
			if ((this._DoorClosedTime != value))
			{
				this.OnDoorClosedTimeChanging(value);
				this.SendPropertyChanging();
				this._DoorClosedTime = value;
				this.SendPropertyChanged("DoorClosedTime");
				this.OnDoorClosedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteamOpenedTime", DbType="NChar(10)")]
	public string SteamOpenedTime
	{
		get
		{
			return this._SteamOpenedTime;
		}
		set
		{
			if ((this._SteamOpenedTime != value))
			{
				this.OnSteamOpenedTimeChanging(value);
				this.SendPropertyChanging();
				this._SteamOpenedTime = value;
				this.SendPropertyChanged("SteamOpenedTime");
				this.OnSteamOpenedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VentClosedTime", DbType="NChar(10)")]
	public string VentClosedTime
	{
		get
		{
			return this._VentClosedTime;
		}
		set
		{
			if ((this._VentClosedTime != value))
			{
				this.OnVentClosedTimeChanging(value);
				this.SendPropertyChanging();
				this._VentClosedTime = value;
				this.SendPropertyChanged("VentClosedTime");
				this.OnVentClosedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressAttainedTime", DbType="NChar(10)")]
	public string PressAttainedTime
	{
		get
		{
			return this._PressAttainedTime;
		}
		set
		{
			if ((this._PressAttainedTime != value))
			{
				this.OnPressAttainedTimeChanging(value);
				this.SendPropertyChanging();
				this._PressAttainedTime = value;
				this.SendPropertyChanged("PressAttainedTime");
				this.OnPressAttainedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Press", DbType="VarChar(50)")]
	public string Press
	{
		get
		{
			return this._Press;
		}
		set
		{
			if ((this._Press != value))
			{
				this.OnPressChanging(value);
				this.SendPropertyChanging();
				this._Press = value;
				this.SendPropertyChanged("Press");
				this.OnPressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temp", DbType="VarChar(50)")]
	public string Temp
	{
		get
		{
			return this._Temp;
		}
		set
		{
			if ((this._Temp != value))
			{
				this.OnTempChanging(value);
				this.SendPropertyChanging();
				this._Temp = value;
				this.SendPropertyChanged("Temp");
				this.OnTempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintainedUpto", DbType="VarChar(50)")]
	public string MaintainedUpto
	{
		get
		{
			return this._MaintainedUpto;
		}
		set
		{
			if ((this._MaintainedUpto != value))
			{
				this.OnMaintainedUptoChanging(value);
				this.SendPropertyChanging();
				this._MaintainedUpto = value;
				this.SendPropertyChanged("MaintainedUpto");
				this.OnMaintainedUptoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VentOpenedTime", DbType="VarChar(50)")]
	public string VentOpenedTime
	{
		get
		{
			return this._VentOpenedTime;
		}
		set
		{
			if ((this._VentOpenedTime != value))
			{
				this.OnVentOpenedTimeChanging(value);
				this.SendPropertyChanging();
				this._VentOpenedTime = value;
				this.SendPropertyChanged("VentOpenedTime");
				this.OnVentOpenedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorOpenedTime", DbType="VarChar(50)")]
	public string DoorOpenedTime
	{
		get
		{
			return this._DoorOpenedTime;
		}
		set
		{
			if ((this._DoorOpenedTime != value))
			{
				this.OnDoorOpenedTimeChanging(value);
				this.SendPropertyChanging();
				this._DoorOpenedTime = value;
				this.SendPropertyChanged("DoorOpenedTime");
				this.OnDoorOpenedTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="VarChar(50)")]
	public string Operator
	{
		get
		{
			return this._Operator;
		}
		set
		{
			if ((this._Operator != value))
			{
				this.OnOperatorChanging(value);
				this.SendPropertyChanging();
				this._Operator = value;
				this.SendPropertyChanged("Operator");
				this.OnOperatorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chemist", DbType="VarChar(50)")]
	public string Chemist
	{
		get
		{
			return this._Chemist;
		}
		set
		{
			if ((this._Chemist != value))
			{
				this.OnChemistChanging(value);
				this.SendPropertyChanging();
				this._Chemist = value;
				this.SendPropertyChanged("Chemist");
				this.OnChemistChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SterilityTest", DbType="VarChar(50)")]
	public string SterilityTest
	{
		get
		{
			return this._SterilityTest;
		}
		set
		{
			if ((this._SterilityTest != value))
			{
				this.OnSterilityTestChanging(value);
				this.SendPropertyChanging();
				this._SterilityTest = value;
				this.SendPropertyChanged("SterilityTest");
				this.OnSterilityTestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LalTest", DbType="VarChar(50)")]
	public string LalTest
	{
		get
		{
			return this._LalTest;
		}
		set
		{
			if ((this._LalTest != value))
			{
				this.OnLalTestChanging(value);
				this.SendPropertyChanging();
				this._LalTest = value;
				this.SendPropertyChanged("LalTest");
				this.OnLalTestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTest", DbType="VarChar(50)")]
	public string OtherTest
	{
		get
		{
			return this._OtherTest;
		}
		set
		{
			if ((this._OtherTest != value))
			{
				this.OnOtherTestChanging(value);
				this.SendPropertyChanging();
				this._OtherTest = value;
				this.SendPropertyChanged("OtherTest");
				this.OnOtherTestChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultSterility", DbType="VarChar(50)")]
	public string ResultSterility
	{
		get
		{
			return this._ResultSterility;
		}
		set
		{
			if ((this._ResultSterility != value))
			{
				this.OnResultSterilityChanging(value);
				this.SendPropertyChanging();
				this._ResultSterility = value;
				this.SendPropertyChanged("ResultSterility");
				this.OnResultSterilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordRef", DbType="VarChar(50)")]
	public string RecordRef
	{
		get
		{
			return this._RecordRef;
		}
		set
		{
			if ((this._RecordRef != value))
			{
				this.OnRecordRefChanging(value);
				this.SendPropertyChanging();
				this._RecordRef = value;
				this.SendPropertyChanged("RecordRef");
				this.OnRecordRefChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBySterility", DbType="VarChar(50)")]
	public string CheckedBySterility
	{
		get
		{
			return this._CheckedBySterility;
		}
		set
		{
			if ((this._CheckedBySterility != value))
			{
				this.OnCheckedBySterilityChanging(value);
				this.SendPropertyChanging();
				this._CheckedBySterility = value;
				this.SendPropertyChanged("CheckedBySterility");
				this.OnCheckedBySterilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultCycle", DbType="VarChar(50)")]
	public string ResultCycle
	{
		get
		{
			return this._ResultCycle;
		}
		set
		{
			if ((this._ResultCycle != value))
			{
				this.OnResultCycleChanging(value);
				this.SendPropertyChanging();
				this._ResultCycle = value;
				this.SendPropertyChanged("ResultCycle");
				this.OnResultCycleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuqlityControlCycle", DbType="VarChar(50)")]
	public string QuqlityControlCycle
	{
		get
		{
			return this._QuqlityControlCycle;
		}
		set
		{
			if ((this._QuqlityControlCycle != value))
			{
				this.OnQuqlityControlCycleChanging(value);
				this.SendPropertyChanging();
				this._QuqlityControlCycle = value;
				this.SendPropertyChanged("QuqlityControlCycle");
				this.OnQuqlityControlCycleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductRelease", DbType="VarChar(50)")]
	public string ProductRelease
	{
		get
		{
			return this._ProductRelease;
		}
		set
		{
			if ((this._ProductRelease != value))
			{
				this.OnProductReleaseChanging(value);
				this.SendPropertyChanging();
				this._ProductRelease = value;
				this.SendPropertyChanged("ProductRelease");
				this.OnProductReleaseChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MillingLatheNoMaster")]
public partial class MillingLatheNoMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _MillingLatheNo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMillingLatheNoChanging(string value);
    partial void OnMillingLatheNoChanged();
    #endregion
	
	public MillingLatheNoMaster()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MillingLatheNo", DbType="VarChar(50)")]
	public string MillingLatheNo
	{
		get
		{
			return this._MillingLatheNo;
		}
		set
		{
			if ((this._MillingLatheNo != value))
			{
				this.OnMillingLatheNoChanging(value);
				this.SendPropertyChanging();
				this._MillingLatheNo = value;
				this.SendPropertyChanged("MillingLatheNo");
				this.OnMillingLatheNoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SI_Tumbling")]
public partial class SI_Tumbling : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingNo;
	
	private string _ModelNo;
	
	private string _JarNo;
	
	private string _Location;
	
	private System.Nullable<decimal> _Power;
	
	private string _InspectedBy;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _Time;
	
	private string _Day;
	
	private string _SampleNo;
	
	private string _Status;
	
	private string _Remarks;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnJarNoChanging(string value);
    partial void OnJarNoChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnInspectedByChanging(string value);
    partial void OnInspectedByChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnSampleNoChanging(string value);
    partial void OnSampleNoChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
	
	public SI_Tumbling()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(50)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JarNo", DbType="VarChar(50)")]
	public string JarNo
	{
		get
		{
			return this._JarNo;
		}
		set
		{
			if ((this._JarNo != value))
			{
				this.OnJarNoChanging(value);
				this.SendPropertyChanging();
				this._JarNo = value;
				this.SendPropertyChanged("JarNo");
				this.OnJarNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this.OnLocationChanging(value);
				this.SendPropertyChanging();
				this._Location = value;
				this.SendPropertyChanged("Location");
				this.OnLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy", DbType="VarChar(50)")]
	public string InspectedBy
	{
		get
		{
			return this._InspectedBy;
		}
		set
		{
			if ((this._InspectedBy != value))
			{
				this.OnInspectedByChanging(value);
				this.SendPropertyChanging();
				this._InspectedBy = value;
				this.SendPropertyChanged("InspectedBy");
				this.OnInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(50)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(50)")]
	public string Day
	{
		get
		{
			return this._Day;
		}
		set
		{
			if ((this._Day != value))
			{
				this.OnDayChanging(value);
				this.SendPropertyChanging();
				this._Day = value;
				this.SendPropertyChanged("Day");
				this.OnDayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo", DbType="VarChar(50)")]
	public string SampleNo
	{
		get
		{
			return this._SampleNo;
		}
		set
		{
			if ((this._SampleNo != value))
			{
				this.OnSampleNoChanging(value);
				this.SendPropertyChanging();
				this._SampleNo = value;
				this.SendPropertyChanged("SampleNo");
				this.OnSampleNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SealingCupandPouch")]
public partial class SealingCupandPouch : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _SealingProcess;
	
	private string _TumblingLotNo;
	
	private System.Nullable<int> _TotalQuantity;
	
	private string _ModelNo;
	
	private System.Nullable<int> _TotCompletedQuantity;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _ReceivedQuantity;
	
	private System.Nullable<int> _BalanceQty;
	
	private System.Nullable<int> _ProgQuantity;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _RejectedQuantity;
	
	private string _SealingDoneBy1;
	
	private string _SealingDoneBy2;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<System.DateTime> _PrevDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSealingProcessChanging(string value);
    partial void OnSealingProcessChanged();
    partial void OnTumblingLotNoChanging(string value);
    partial void OnTumblingLotNoChanged();
    partial void OnTotalQuantityChanging(System.Nullable<int> value);
    partial void OnTotalQuantityChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnTotCompletedQuantityChanging(System.Nullable<int> value);
    partial void OnTotCompletedQuantityChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnReceivedQuantityChanging(System.Nullable<int> value);
    partial void OnReceivedQuantityChanged();
    partial void OnBalanceQtyChanging(System.Nullable<int> value);
    partial void OnBalanceQtyChanged();
    partial void OnProgQuantityChanging(System.Nullable<int> value);
    partial void OnProgQuantityChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnRejectedQuantityChanging(System.Nullable<int> value);
    partial void OnRejectedQuantityChanged();
    partial void OnSealingDoneBy1Changing(string value);
    partial void OnSealingDoneBy1Changed();
    partial void OnSealingDoneBy2Changing(string value);
    partial void OnSealingDoneBy2Changed();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPrevDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrevDateChanged();
    #endregion
	
	public SealingCupandPouch()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealingProcess", DbType="VarChar(50)")]
	public string SealingProcess
	{
		get
		{
			return this._SealingProcess;
		}
		set
		{
			if ((this._SealingProcess != value))
			{
				this.OnSealingProcessChanging(value);
				this.SendPropertyChanging();
				this._SealingProcess = value;
				this.SendPropertyChanged("SealingProcess");
				this.OnSealingProcessChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingLotNo", DbType="VarChar(50)")]
	public string TumblingLotNo
	{
		get
		{
			return this._TumblingLotNo;
		}
		set
		{
			if ((this._TumblingLotNo != value))
			{
				this.OnTumblingLotNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingLotNo = value;
				this.SendPropertyChanged("TumblingLotNo");
				this.OnTumblingLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int")]
	public System.Nullable<int> TotalQuantity
	{
		get
		{
			return this._TotalQuantity;
		}
		set
		{
			if ((this._TotalQuantity != value))
			{
				this.OnTotalQuantityChanging(value);
				this.SendPropertyChanging();
				this._TotalQuantity = value;
				this.SendPropertyChanged("TotalQuantity");
				this.OnTotalQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(50)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotCompletedQuantity", DbType="Int")]
	public System.Nullable<int> TotCompletedQuantity
	{
		get
		{
			return this._TotCompletedQuantity;
		}
		set
		{
			if ((this._TotCompletedQuantity != value))
			{
				this.OnTotCompletedQuantityChanging(value);
				this.SendPropertyChanging();
				this._TotCompletedQuantity = value;
				this.SendPropertyChanged("TotCompletedQuantity");
				this.OnTotCompletedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQuantity", DbType="Int")]
	public System.Nullable<int> ReceivedQuantity
	{
		get
		{
			return this._ReceivedQuantity;
		}
		set
		{
			if ((this._ReceivedQuantity != value))
			{
				this.OnReceivedQuantityChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQuantity = value;
				this.SendPropertyChanged("ReceivedQuantity");
				this.OnReceivedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQty", DbType="Int")]
	public System.Nullable<int> BalanceQty
	{
		get
		{
			return this._BalanceQty;
		}
		set
		{
			if ((this._BalanceQty != value))
			{
				this.OnBalanceQtyChanging(value);
				this.SendPropertyChanging();
				this._BalanceQty = value;
				this.SendPropertyChanged("BalanceQty");
				this.OnBalanceQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgQuantity", DbType="Int")]
	public System.Nullable<int> ProgQuantity
	{
		get
		{
			return this._ProgQuantity;
		}
		set
		{
			if ((this._ProgQuantity != value))
			{
				this.OnProgQuantityChanging(value);
				this.SendPropertyChanging();
				this._ProgQuantity = value;
				this.SendPropertyChanged("ProgQuantity");
				this.OnProgQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQuantity", DbType="Int")]
	public System.Nullable<int> RejectedQuantity
	{
		get
		{
			return this._RejectedQuantity;
		}
		set
		{
			if ((this._RejectedQuantity != value))
			{
				this.OnRejectedQuantityChanging(value);
				this.SendPropertyChanging();
				this._RejectedQuantity = value;
				this.SendPropertyChanged("RejectedQuantity");
				this.OnRejectedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealingDoneBy1", DbType="NVarChar(50)")]
	public string SealingDoneBy1
	{
		get
		{
			return this._SealingDoneBy1;
		}
		set
		{
			if ((this._SealingDoneBy1 != value))
			{
				this.OnSealingDoneBy1Changing(value);
				this.SendPropertyChanging();
				this._SealingDoneBy1 = value;
				this.SendPropertyChanged("SealingDoneBy1");
				this.OnSealingDoneBy1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealingDoneBy2", DbType="NVarChar(50)")]
	public string SealingDoneBy2
	{
		get
		{
			return this._SealingDoneBy2;
		}
		set
		{
			if ((this._SealingDoneBy2 != value))
			{
				this.OnSealingDoneBy2Changing(value);
				this.SendPropertyChanging();
				this._SealingDoneBy2 = value;
				this.SendPropertyChanged("SealingDoneBy2");
				this.OnSealingDoneBy2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> PrevDate
	{
		get
		{
			return this._PrevDate;
		}
		set
		{
			if ((this._PrevDate != value))
			{
				this.OnPrevDateChanging(value);
				this.SendPropertyChanging();
				this._PrevDate = value;
				this.SendPropertyChanged("PrevDate");
				this.OnPrevDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModelMaster")]
public partial class ModelMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Model;
	
	private string _SubModel;
	
	private string _BrandName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnSubModelChanging(string value);
    partial void OnSubModelChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    #endregion
	
	public ModelMaster()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubModel", DbType="VarChar(50)")]
	public string SubModel
	{
		get
		{
			return this._SubModel;
		}
		set
		{
			if ((this._SubModel != value))
			{
				this.OnSubModelChanging(value);
				this.SendPropertyChanging();
				this._SubModel = value;
				this.SendPropertyChanged("SubModel");
				this.OnSubModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(50)")]
	public string BrandName
	{
		get
		{
			return this._BrandName;
		}
		set
		{
			if ((this._BrandName != value))
			{
				this.OnBrandNameChanging(value);
				this.SendPropertyChanging();
				this._BrandName = value;
				this.SendPropertyChanged("BrandName");
				this.OnBrandNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Inprocess Power Inspection]")]
public partial class Inprocess_Power_Inspection : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingLotNo1;
	
	private System.Nullable<decimal> _Tumbling1Power1;
	
	private System.Nullable<decimal> _Tumbling11Sample1;
	
	private System.Nullable<decimal> _Tumbling21Sample1;
	
	private System.Nullable<decimal> _Tumbling31Sample1;
	
	private System.Nullable<decimal> _Tumbling41Sample1;
	
	private System.Nullable<decimal> _Tumbling51Sample1;
	
	private string _Tumbling1Remarks1;
	
	private string _Tumbling1InspectedBy;
	
	private System.Nullable<System.DateTime> _Tumbling1Date1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingLotNo1Changing(string value);
    partial void OnTumblingLotNo1Changed();
    partial void OnTumbling1Power1Changing(System.Nullable<decimal> value);
    partial void OnTumbling1Power1Changed();
    partial void OnTumbling11Sample1Changing(System.Nullable<decimal> value);
    partial void OnTumbling11Sample1Changed();
    partial void OnTumbling21Sample1Changing(System.Nullable<decimal> value);
    partial void OnTumbling21Sample1Changed();
    partial void OnTumbling31Sample1Changing(System.Nullable<decimal> value);
    partial void OnTumbling31Sample1Changed();
    partial void OnTumbling41Sample1Changing(System.Nullable<decimal> value);
    partial void OnTumbling41Sample1Changed();
    partial void OnTumbling51Sample1Changing(System.Nullable<decimal> value);
    partial void OnTumbling51Sample1Changed();
    partial void OnTumbling1Remarks1Changing(string value);
    partial void OnTumbling1Remarks1Changed();
    partial void OnTumbling1InspectedByChanging(string value);
    partial void OnTumbling1InspectedByChanged();
    partial void OnTumbling1Date1Changing(System.Nullable<System.DateTime> value);
    partial void OnTumbling1Date1Changed();
    #endregion
	
	public Inprocess_Power_Inspection()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingLotNo1", DbType="VarChar(50)")]
	public string TumblingLotNo1
	{
		get
		{
			return this._TumblingLotNo1;
		}
		set
		{
			if ((this._TumblingLotNo1 != value))
			{
				this.OnTumblingLotNo1Changing(value);
				this.SendPropertyChanging();
				this._TumblingLotNo1 = value;
				this.SendPropertyChanged("TumblingLotNo1");
				this.OnTumblingLotNo1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbling1Power1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Tumbling1Power1
	{
		get
		{
			return this._Tumbling1Power1;
		}
		set
		{
			if ((this._Tumbling1Power1 != value))
			{
				this.OnTumbling1Power1Changing(value);
				this.SendPropertyChanging();
				this._Tumbling1Power1 = value;
				this.SendPropertyChanged("Tumbling1Power1");
				this.OnTumbling1Power1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbling11Sample1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Tumbling11Sample1
	{
		get
		{
			return this._Tumbling11Sample1;
		}
		set
		{
			if ((this._Tumbling11Sample1 != value))
			{
				this.OnTumbling11Sample1Changing(value);
				this.SendPropertyChanging();
				this._Tumbling11Sample1 = value;
				this.SendPropertyChanged("Tumbling11Sample1");
				this.OnTumbling11Sample1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbling21Sample1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Tumbling21Sample1
	{
		get
		{
			return this._Tumbling21Sample1;
		}
		set
		{
			if ((this._Tumbling21Sample1 != value))
			{
				this.OnTumbling21Sample1Changing(value);
				this.SendPropertyChanging();
				this._Tumbling21Sample1 = value;
				this.SendPropertyChanged("Tumbling21Sample1");
				this.OnTumbling21Sample1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbling31Sample1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Tumbling31Sample1
	{
		get
		{
			return this._Tumbling31Sample1;
		}
		set
		{
			if ((this._Tumbling31Sample1 != value))
			{
				this.OnTumbling31Sample1Changing(value);
				this.SendPropertyChanging();
				this._Tumbling31Sample1 = value;
				this.SendPropertyChanged("Tumbling31Sample1");
				this.OnTumbling31Sample1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbling41Sample1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Tumbling41Sample1
	{
		get
		{
			return this._Tumbling41Sample1;
		}
		set
		{
			if ((this._Tumbling41Sample1 != value))
			{
				this.OnTumbling41Sample1Changing(value);
				this.SendPropertyChanging();
				this._Tumbling41Sample1 = value;
				this.SendPropertyChanged("Tumbling41Sample1");
				this.OnTumbling41Sample1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbling51Sample1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Tumbling51Sample1
	{
		get
		{
			return this._Tumbling51Sample1;
		}
		set
		{
			if ((this._Tumbling51Sample1 != value))
			{
				this.OnTumbling51Sample1Changing(value);
				this.SendPropertyChanging();
				this._Tumbling51Sample1 = value;
				this.SendPropertyChanged("Tumbling51Sample1");
				this.OnTumbling51Sample1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbling1Remarks1", DbType="VarChar(50)")]
	public string Tumbling1Remarks1
	{
		get
		{
			return this._Tumbling1Remarks1;
		}
		set
		{
			if ((this._Tumbling1Remarks1 != value))
			{
				this.OnTumbling1Remarks1Changing(value);
				this.SendPropertyChanging();
				this._Tumbling1Remarks1 = value;
				this.SendPropertyChanged("Tumbling1Remarks1");
				this.OnTumbling1Remarks1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbling1InspectedBy", DbType="VarChar(50)")]
	public string Tumbling1InspectedBy
	{
		get
		{
			return this._Tumbling1InspectedBy;
		}
		set
		{
			if ((this._Tumbling1InspectedBy != value))
			{
				this.OnTumbling1InspectedByChanging(value);
				this.SendPropertyChanging();
				this._Tumbling1InspectedBy = value;
				this.SendPropertyChanged("Tumbling1InspectedBy");
				this.OnTumbling1InspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbling1Date1", DbType="DateTime")]
	public System.Nullable<System.DateTime> Tumbling1Date1
	{
		get
		{
			return this._Tumbling1Date1;
		}
		set
		{
			if ((this._Tumbling1Date1 != value))
			{
				this.OnTumbling1Date1Changing(value);
				this.SendPropertyChanging();
				this._Tumbling1Date1 = value;
				this.SendPropertyChanged("Tumbling1Date1");
				this.OnTumbling1Date1Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InspectionsDoc")]
public partial class InspectionsDoc : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _LotNo;
	
	private System.Nullable<int> _SerialNo;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(System.Nullable<int> value);
    partial void OnLotNoChanged();
    partial void OnSerialNoChanging(System.Nullable<int> value);
    partial void OnSerialNoChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public InspectionsDoc()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="Int")]
	public System.Nullable<int> LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNo", DbType="Int")]
	public System.Nullable<int> SerialNo
	{
		get
		{
			return this._SerialNo;
		}
		set
		{
			if ((this._SerialNo != value))
			{
				this.OnSerialNoChanging(value);
				this.SendPropertyChanging();
				this._SerialNo = value;
				this.SendPropertyChanged("SerialNo");
				this.OnSerialNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InspectionDocData")]
public partial class InspectionDocData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LotNo;
	
	private string _Model;
	
	private string _SubModel;
	
	private string _Brand;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _SerialFrom;
	
	private System.Nullable<int> _SerialTo;
	
	private System.Nullable<int> _Qty;
	
	private System.Nullable<int> _RemainingQty;
	
	private string _SterileBatchno;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<System.DateTime> _ManufactureDate;
	
	private System.Nullable<System.DateTime> _ExpiryDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnSubModelChanging(string value);
    partial void OnSubModelChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnSerialFromChanging(System.Nullable<int> value);
    partial void OnSerialFromChanged();
    partial void OnSerialToChanging(System.Nullable<int> value);
    partial void OnSerialToChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnRemainingQtyChanging(System.Nullable<int> value);
    partial void OnRemainingQtyChanged();
    partial void OnSterileBatchnoChanging(string value);
    partial void OnSterileBatchnoChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnManufactureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnManufactureDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    #endregion
	
	public InspectionDocData()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubModel", DbType="VarChar(50)")]
	public string SubModel
	{
		get
		{
			return this._SubModel;
		}
		set
		{
			if ((this._SubModel != value))
			{
				this.OnSubModelChanging(value);
				this.SendPropertyChanging();
				this._SubModel = value;
				this.SendPropertyChanged("SubModel");
				this.OnSubModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
	public string Brand
	{
		get
		{
			return this._Brand;
		}
		set
		{
			if ((this._Brand != value))
			{
				this.OnBrandChanging(value);
				this.SendPropertyChanging();
				this._Brand = value;
				this.SendPropertyChanged("Brand");
				this.OnBrandChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialFrom", DbType="Int")]
	public System.Nullable<int> SerialFrom
	{
		get
		{
			return this._SerialFrom;
		}
		set
		{
			if ((this._SerialFrom != value))
			{
				this.OnSerialFromChanging(value);
				this.SendPropertyChanging();
				this._SerialFrom = value;
				this.SendPropertyChanged("SerialFrom");
				this.OnSerialFromChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialTo", DbType="Int")]
	public System.Nullable<int> SerialTo
	{
		get
		{
			return this._SerialTo;
		}
		set
		{
			if ((this._SerialTo != value))
			{
				this.OnSerialToChanging(value);
				this.SendPropertyChanging();
				this._SerialTo = value;
				this.SendPropertyChanged("SerialTo");
				this.OnSerialToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
	public System.Nullable<int> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingQty", DbType="Int")]
	public System.Nullable<int> RemainingQty
	{
		get
		{
			return this._RemainingQty;
		}
		set
		{
			if ((this._RemainingQty != value))
			{
				this.OnRemainingQtyChanging(value);
				this.SendPropertyChanging();
				this._RemainingQty = value;
				this.SendPropertyChanged("RemainingQty");
				this.OnRemainingQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SterileBatchno", DbType="VarChar(50)")]
	public string SterileBatchno
	{
		get
		{
			return this._SterileBatchno;
		}
		set
		{
			if ((this._SterileBatchno != value))
			{
				this.OnSterileBatchnoChanging(value);
				this.SendPropertyChanging();
				this._SterileBatchno = value;
				this.SendPropertyChanged("SterileBatchno");
				this.OnSterileBatchnoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ManufactureDate
	{
		get
		{
			return this._ManufactureDate;
		}
		set
		{
			if ((this._ManufactureDate != value))
			{
				this.OnManufactureDateChanging(value);
				this.SendPropertyChanging();
				this._ManufactureDate = value;
				this.SendPropertyChanged("ManufactureDate");
				this.OnManufactureDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this.OnExpiryDateChanging(value);
				this.SendPropertyChanging();
				this._ExpiryDate = value;
				this.SendPropertyChanged("ExpiryDate");
				this.OnExpiryDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TumblingChild")]
public partial class TumblingChild : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingNo;
	
	private string _ModelNo;
	
	private System.Nullable<int> _LotNo;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _Quantity;
	
	private System.Nullable<int> _Flag;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnLotNoChanging(System.Nullable<int> value);
    partial void OnLotNoChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnFlagChanging(System.Nullable<int> value);
    partial void OnFlagChanged();
    #endregion
	
	public TumblingChild()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(50)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="Int")]
	public System.Nullable<int> LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Int")]
	public System.Nullable<int> Flag
	{
		get
		{
			return this._Flag;
		}
		set
		{
			if ((this._Flag != value))
			{
				this.OnFlagChanging(value);
				this.SendPropertyChanging();
				this._Flag = value;
				this.SendPropertyChanged("Flag");
				this.OnFlagChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tumbling")]
public partial class Tumbling : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _ModelNo;
	
	private string _TumblingLotNo;
	
	private System.Nullable<int> _TotalQuantity;
	
	private string _JarNo;
	
	private string _Location;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private string _StartTime;
	
	private System.Nullable<System.DateTime> _StopDate;
	
	private string _StopTime;
	
	private string _StartTimeCal;
	
	private string _Duration;
	
	private string _Remarks;
	
	private string _Tumbledby;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnTumblingLotNoChanging(string value);
    partial void OnTumblingLotNoChanged();
    partial void OnTotalQuantityChanging(System.Nullable<int> value);
    partial void OnTotalQuantityChanged();
    partial void OnJarNoChanging(string value);
    partial void OnJarNoChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnStopDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStopDateChanged();
    partial void OnStopTimeChanging(string value);
    partial void OnStopTimeChanged();
    partial void OnStartTimeCalChanging(string value);
    partial void OnStartTimeCalChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnTumbledbyChanging(string value);
    partial void OnTumbledbyChanged();
    #endregion
	
	public Tumbling()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(50)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingLotNo", DbType="VarChar(50)")]
	public string TumblingLotNo
	{
		get
		{
			return this._TumblingLotNo;
		}
		set
		{
			if ((this._TumblingLotNo != value))
			{
				this.OnTumblingLotNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingLotNo = value;
				this.SendPropertyChanged("TumblingLotNo");
				this.OnTumblingLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int")]
	public System.Nullable<int> TotalQuantity
	{
		get
		{
			return this._TotalQuantity;
		}
		set
		{
			if ((this._TotalQuantity != value))
			{
				this.OnTotalQuantityChanging(value);
				this.SendPropertyChanging();
				this._TotalQuantity = value;
				this.SendPropertyChanged("TotalQuantity");
				this.OnTotalQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JarNo", DbType="VarChar(50)")]
	public string JarNo
	{
		get
		{
			return this._JarNo;
		}
		set
		{
			if ((this._JarNo != value))
			{
				this.OnJarNoChanging(value);
				this.SendPropertyChanging();
				this._JarNo = value;
				this.SendPropertyChanged("JarNo");
				this.OnJarNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this.OnLocationChanging(value);
				this.SendPropertyChanging();
				this._Location = value;
				this.SendPropertyChanged("Location");
				this.OnLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StopDate
	{
		get
		{
			return this._StopDate;
		}
		set
		{
			if ((this._StopDate != value))
			{
				this.OnStopDateChanging(value);
				this.SendPropertyChanging();
				this._StopDate = value;
				this.SendPropertyChanged("StopDate");
				this.OnStopDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopTime", DbType="VarChar(50)")]
	public string StopTime
	{
		get
		{
			return this._StopTime;
		}
		set
		{
			if ((this._StopTime != value))
			{
				this.OnStopTimeChanging(value);
				this.SendPropertyChanging();
				this._StopTime = value;
				this.SendPropertyChanged("StopTime");
				this.OnStopTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimeCal", DbType="VarChar(50)")]
	public string StartTimeCal
	{
		get
		{
			return this._StartTimeCal;
		}
		set
		{
			if ((this._StartTimeCal != value))
			{
				this.OnStartTimeCalChanging(value);
				this.SendPropertyChanging();
				this._StartTimeCal = value;
				this.SendPropertyChanged("StartTimeCal");
				this.OnStartTimeCalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="VarChar(50)")]
	public string Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbledby", DbType="VarChar(50)")]
	public string Tumbledby
	{
		get
		{
			return this._Tumbledby;
		}
		set
		{
			if ((this._Tumbledby != value))
			{
				this.OnTumbledbyChanging(value);
				this.SendPropertyChanging();
				this._Tumbledby = value;
				this.SendPropertyChanged("Tumbledby");
				this.OnTumbledbyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BatchAllot")]
public partial class BatchAllot : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LotNo;
	
	private string _BatchNo;
	
	private string _WaxId;
	
	private System.Nullable<int> _AllotedQuantity;
	
	private string _ModelNo;
	
	private string _Shift;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<decimal> _Radius;
	
	private string _ApprovedBy;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnWaxIdChanging(string value);
    partial void OnWaxIdChanged();
    partial void OnAllotedQuantityChanging(System.Nullable<int> value);
    partial void OnAllotedQuantityChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnRadiusChanging(System.Nullable<decimal> value);
    partial void OnRadiusChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public BatchAllot()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="NVarChar(50)")]
	public string BatchNo
	{
		get
		{
			return this._BatchNo;
		}
		set
		{
			if ((this._BatchNo != value))
			{
				this.OnBatchNoChanging(value);
				this.SendPropertyChanging();
				this._BatchNo = value;
				this.SendPropertyChanged("BatchNo");
				this.OnBatchNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaxId", DbType="NVarChar(50)")]
	public string WaxId
	{
		get
		{
			return this._WaxId;
		}
		set
		{
			if ((this._WaxId != value))
			{
				this.OnWaxIdChanging(value);
				this.SendPropertyChanging();
				this._WaxId = value;
				this.SendPropertyChanged("WaxId");
				this.OnWaxIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllotedQuantity", DbType="Int")]
	public System.Nullable<int> AllotedQuantity
	{
		get
		{
			return this._AllotedQuantity;
		}
		set
		{
			if ((this._AllotedQuantity != value))
			{
				this.OnAllotedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AllotedQuantity = value;
				this.SendPropertyChanged("AllotedQuantity");
				this.OnAllotedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(50)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="NVarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Radius
	{
		get
		{
			return this._Radius;
		}
		set
		{
			if ((this._Radius != value))
			{
				this.OnRadiusChanging(value);
				this.SendPropertyChanging();
				this._Radius = value;
				this.SendPropertyChanged("Radius");
				this.OnRadiusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="VarChar(50)")]
	public string ApprovedBy
	{
		get
		{
			return this._ApprovedBy;
		}
		set
		{
			if ((this._ApprovedBy != value))
			{
				this.OnApprovedByChanging(value);
				this.SendPropertyChanging();
				this._ApprovedBy = value;
				this.SendPropertyChanged("ApprovedBy");
				this.OnApprovedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blocking")]
public partial class Blocking : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _LotNo;
	
	private string _BlockingType;
	
	private System.Nullable<int> _ReceivedQuantity;
	
	private System.Nullable<int> _FinishedQuantity;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _BalanceQuantity;
	
	private System.Nullable<int> _RejectedQuantity;
	
	private System.Nullable<int> _Waxtemp;
	
	private string _Remarks;
	
	private string _Blockedby;
	
	private string _shift;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBlockingTypeChanging(string value);
    partial void OnBlockingTypeChanged();
    partial void OnReceivedQuantityChanging(System.Nullable<int> value);
    partial void OnReceivedQuantityChanged();
    partial void OnFinishedQuantityChanging(System.Nullable<int> value);
    partial void OnFinishedQuantityChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnBalanceQuantityChanging(System.Nullable<int> value);
    partial void OnBalanceQuantityChanged();
    partial void OnRejectedQuantityChanging(System.Nullable<int> value);
    partial void OnRejectedQuantityChanged();
    partial void OnWaxtempChanging(System.Nullable<int> value);
    partial void OnWaxtempChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnBlockedbyChanging(string value);
    partial void OnBlockedbyChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public Blocking()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockingType", DbType="VarChar(50)")]
	public string BlockingType
	{
		get
		{
			return this._BlockingType;
		}
		set
		{
			if ((this._BlockingType != value))
			{
				this.OnBlockingTypeChanging(value);
				this.SendPropertyChanging();
				this._BlockingType = value;
				this.SendPropertyChanged("BlockingType");
				this.OnBlockingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQuantity", DbType="Int")]
	public System.Nullable<int> ReceivedQuantity
	{
		get
		{
			return this._ReceivedQuantity;
		}
		set
		{
			if ((this._ReceivedQuantity != value))
			{
				this.OnReceivedQuantityChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQuantity = value;
				this.SendPropertyChanged("ReceivedQuantity");
				this.OnReceivedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedQuantity", DbType="Int")]
	public System.Nullable<int> FinishedQuantity
	{
		get
		{
			return this._FinishedQuantity;
		}
		set
		{
			if ((this._FinishedQuantity != value))
			{
				this.OnFinishedQuantityChanging(value);
				this.SendPropertyChanging();
				this._FinishedQuantity = value;
				this.SendPropertyChanged("FinishedQuantity");
				this.OnFinishedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQuantity", DbType="Int")]
	public System.Nullable<int> BalanceQuantity
	{
		get
		{
			return this._BalanceQuantity;
		}
		set
		{
			if ((this._BalanceQuantity != value))
			{
				this.OnBalanceQuantityChanging(value);
				this.SendPropertyChanging();
				this._BalanceQuantity = value;
				this.SendPropertyChanged("BalanceQuantity");
				this.OnBalanceQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQuantity", DbType="Int")]
	public System.Nullable<int> RejectedQuantity
	{
		get
		{
			return this._RejectedQuantity;
		}
		set
		{
			if ((this._RejectedQuantity != value))
			{
				this.OnRejectedQuantityChanging(value);
				this.SendPropertyChanging();
				this._RejectedQuantity = value;
				this.SendPropertyChanged("RejectedQuantity");
				this.OnRejectedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Waxtemp", DbType="Int")]
	public System.Nullable<int> Waxtemp
	{
		get
		{
			return this._Waxtemp;
		}
		set
		{
			if ((this._Waxtemp != value))
			{
				this.OnWaxtempChanging(value);
				this.SendPropertyChanging();
				this._Waxtemp = value;
				this.SendPropertyChanged("Waxtemp");
				this.OnWaxtempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blockedby", DbType="VarChar(50)")]
	public string Blockedby
	{
		get
		{
			return this._Blockedby;
		}
		set
		{
			if ((this._Blockedby != value))
			{
				this.OnBlockedbyChanging(value);
				this.SendPropertyChanging();
				this._Blockedby = value;
				this.SendPropertyChanged("Blockedby");
				this.OnBlockedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._shift;
		}
		set
		{
			if ((this._shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeBlocking")]
public partial class DeBlocking : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _LotNo;
	
	private string _BlockingType;
	
	private System.Nullable<int> _FinishedQuantity;
	
	private System.Nullable<int> _ReceivedQuantity;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _BalanceQuantity;
	
	private System.Nullable<int> _RejectedQuantity;
	
	private System.Nullable<int> _WaxTemp;
	
	private string _Remarks;
	
	private string _Deblockedby;
	
	private string _Shift;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBlockingTypeChanging(string value);
    partial void OnBlockingTypeChanged();
    partial void OnFinishedQuantityChanging(System.Nullable<int> value);
    partial void OnFinishedQuantityChanged();
    partial void OnReceivedQuantityChanging(System.Nullable<int> value);
    partial void OnReceivedQuantityChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnBalanceQuantityChanging(System.Nullable<int> value);
    partial void OnBalanceQuantityChanged();
    partial void OnRejectedQuantityChanging(System.Nullable<int> value);
    partial void OnRejectedQuantityChanged();
    partial void OnWaxTempChanging(System.Nullable<int> value);
    partial void OnWaxTempChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnDeblockedbyChanging(string value);
    partial void OnDeblockedbyChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public DeBlocking()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockingType", DbType="VarChar(50)")]
	public string BlockingType
	{
		get
		{
			return this._BlockingType;
		}
		set
		{
			if ((this._BlockingType != value))
			{
				this.OnBlockingTypeChanging(value);
				this.SendPropertyChanging();
				this._BlockingType = value;
				this.SendPropertyChanged("BlockingType");
				this.OnBlockingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedQuantity", DbType="Int")]
	public System.Nullable<int> FinishedQuantity
	{
		get
		{
			return this._FinishedQuantity;
		}
		set
		{
			if ((this._FinishedQuantity != value))
			{
				this.OnFinishedQuantityChanging(value);
				this.SendPropertyChanging();
				this._FinishedQuantity = value;
				this.SendPropertyChanged("FinishedQuantity");
				this.OnFinishedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQuantity", DbType="Int")]
	public System.Nullable<int> ReceivedQuantity
	{
		get
		{
			return this._ReceivedQuantity;
		}
		set
		{
			if ((this._ReceivedQuantity != value))
			{
				this.OnReceivedQuantityChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQuantity = value;
				this.SendPropertyChanged("ReceivedQuantity");
				this.OnReceivedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQuantity", DbType="Int")]
	public System.Nullable<int> BalanceQuantity
	{
		get
		{
			return this._BalanceQuantity;
		}
		set
		{
			if ((this._BalanceQuantity != value))
			{
				this.OnBalanceQuantityChanging(value);
				this.SendPropertyChanging();
				this._BalanceQuantity = value;
				this.SendPropertyChanged("BalanceQuantity");
				this.OnBalanceQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQuantity", DbType="Int")]
	public System.Nullable<int> RejectedQuantity
	{
		get
		{
			return this._RejectedQuantity;
		}
		set
		{
			if ((this._RejectedQuantity != value))
			{
				this.OnRejectedQuantityChanging(value);
				this.SendPropertyChanging();
				this._RejectedQuantity = value;
				this.SendPropertyChanged("RejectedQuantity");
				this.OnRejectedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaxTemp", DbType="Int")]
	public System.Nullable<int> WaxTemp
	{
		get
		{
			return this._WaxTemp;
		}
		set
		{
			if ((this._WaxTemp != value))
			{
				this.OnWaxTempChanging(value);
				this.SendPropertyChanging();
				this._WaxTemp = value;
				this.SendPropertyChanged("WaxTemp");
				this.OnWaxTempChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deblockedby", DbType="VarChar(50)")]
	public string Deblockedby
	{
		get
		{
			return this._Deblockedby;
		}
		set
		{
			if ((this._Deblockedby != value))
			{
				this.OnDeblockedbyChanging(value);
				this.SendPropertyChanging();
				this._Deblockedby = value;
				this.SendPropertyChanged("Deblockedby");
				this.OnDeblockedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lathecut")]
public partial class Lathecut : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _LotNo;
	
	private string _LatheType;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _ReceivedQuantity;
	
	private System.Nullable<int> _FinishedQuantity;
	
	private System.Nullable<int> _RejectedQuantity;
	
	private System.Nullable<int> _BalanceQuantity;
	
	private string _LatheNo;
	
	private string _ToolId;
	
	private string _StartTime;
	
	private string _EndTime;
	
	private string _Duration;
	
	private string _Remarks;
	
	private string _OperatorName;
	
	private string _Shift;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnLatheTypeChanging(string value);
    partial void OnLatheTypeChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnReceivedQuantityChanging(System.Nullable<int> value);
    partial void OnReceivedQuantityChanged();
    partial void OnFinishedQuantityChanging(System.Nullable<int> value);
    partial void OnFinishedQuantityChanged();
    partial void OnRejectedQuantityChanging(System.Nullable<int> value);
    partial void OnRejectedQuantityChanged();
    partial void OnBalanceQuantityChanging(System.Nullable<int> value);
    partial void OnBalanceQuantityChanged();
    partial void OnLatheNoChanging(string value);
    partial void OnLatheNoChanged();
    partial void OnToolIdChanging(string value);
    partial void OnToolIdChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public Lathecut()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatheType", DbType="VarChar(50)")]
	public string LatheType
	{
		get
		{
			return this._LatheType;
		}
		set
		{
			if ((this._LatheType != value))
			{
				this.OnLatheTypeChanging(value);
				this.SendPropertyChanging();
				this._LatheType = value;
				this.SendPropertyChanged("LatheType");
				this.OnLatheTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQuantity", DbType="Int")]
	public System.Nullable<int> ReceivedQuantity
	{
		get
		{
			return this._ReceivedQuantity;
		}
		set
		{
			if ((this._ReceivedQuantity != value))
			{
				this.OnReceivedQuantityChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQuantity = value;
				this.SendPropertyChanged("ReceivedQuantity");
				this.OnReceivedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedQuantity", DbType="Int")]
	public System.Nullable<int> FinishedQuantity
	{
		get
		{
			return this._FinishedQuantity;
		}
		set
		{
			if ((this._FinishedQuantity != value))
			{
				this.OnFinishedQuantityChanging(value);
				this.SendPropertyChanging();
				this._FinishedQuantity = value;
				this.SendPropertyChanged("FinishedQuantity");
				this.OnFinishedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQuantity", DbType="Int")]
	public System.Nullable<int> RejectedQuantity
	{
		get
		{
			return this._RejectedQuantity;
		}
		set
		{
			if ((this._RejectedQuantity != value))
			{
				this.OnRejectedQuantityChanging(value);
				this.SendPropertyChanging();
				this._RejectedQuantity = value;
				this.SendPropertyChanged("RejectedQuantity");
				this.OnRejectedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQuantity", DbType="Int")]
	public System.Nullable<int> BalanceQuantity
	{
		get
		{
			return this._BalanceQuantity;
		}
		set
		{
			if ((this._BalanceQuantity != value))
			{
				this.OnBalanceQuantityChanging(value);
				this.SendPropertyChanging();
				this._BalanceQuantity = value;
				this.SendPropertyChanged("BalanceQuantity");
				this.OnBalanceQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatheNo", DbType="VarChar(50)")]
	public string LatheNo
	{
		get
		{
			return this._LatheNo;
		}
		set
		{
			if ((this._LatheNo != value))
			{
				this.OnLatheNoChanging(value);
				this.SendPropertyChanging();
				this._LatheNo = value;
				this.SendPropertyChanged("LatheNo");
				this.OnLatheNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolId", DbType="VarChar(50)")]
	public string ToolId
	{
		get
		{
			return this._ToolId;
		}
		set
		{
			if ((this._ToolId != value))
			{
				this.OnToolIdChanging(value);
				this.SendPropertyChanging();
				this._ToolId = value;
				this.SendPropertyChanged("ToolId");
				this.OnToolIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="VarChar(50)")]
	public string EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this.OnEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EndTime = value;
				this.SendPropertyChanged("EndTime");
				this.OnEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="VarChar(50)")]
	public string Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorName", DbType="VarChar(50)")]
	public string OperatorName
	{
		get
		{
			return this._OperatorName;
		}
		set
		{
			if ((this._OperatorName != value))
			{
				this.OnOperatorNameChanging(value);
				this.SendPropertyChanging();
				this._OperatorName = value;
				this.SendPropertyChanged("OperatorName");
				this.OnOperatorNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HapticSample")]
public partial class HapticSample : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LotNo;
	
	private string _BlockingType;
	
	private string _SampleNo1;
	
	private string _SampleNo2;
	
	private string _SampleNo3;
	
	private string _Sample1MiStatus;
	
	private string _Sample2MiStatus;
	
	private string _Sample3MiStatus;
	
	private string _Sample1ProfileStatus;
	
	private string _Sample2ProfileStatus;
	
	private string _Sample3ProfileStatus;
	
	private System.Nullable<decimal> _Sample1Haptic;
	
	private System.Nullable<decimal> _Sample2Haptic;
	
	private System.Nullable<decimal> _Sample3Haptic;
	
	private string _Sample1Remarks;
	
	private string _Sample1InspectedBy;
	
	private string _Sample1Shift;
	
	private System.Nullable<System.DateTime> _Sample1Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBlockingTypeChanging(string value);
    partial void OnBlockingTypeChanged();
    partial void OnSampleNo1Changing(string value);
    partial void OnSampleNo1Changed();
    partial void OnSampleNo2Changing(string value);
    partial void OnSampleNo2Changed();
    partial void OnSampleNo3Changing(string value);
    partial void OnSampleNo3Changed();
    partial void OnSample1MiStatusChanging(string value);
    partial void OnSample1MiStatusChanged();
    partial void OnSample2MiStatusChanging(string value);
    partial void OnSample2MiStatusChanged();
    partial void OnSample3MiStatusChanging(string value);
    partial void OnSample3MiStatusChanged();
    partial void OnSample1ProfileStatusChanging(string value);
    partial void OnSample1ProfileStatusChanged();
    partial void OnSample2ProfileStatusChanging(string value);
    partial void OnSample2ProfileStatusChanged();
    partial void OnSample3ProfileStatusChanging(string value);
    partial void OnSample3ProfileStatusChanged();
    partial void OnSample1HapticChanging(System.Nullable<decimal> value);
    partial void OnSample1HapticChanged();
    partial void OnSample2HapticChanging(System.Nullable<decimal> value);
    partial void OnSample2HapticChanged();
    partial void OnSample3HapticChanging(System.Nullable<decimal> value);
    partial void OnSample3HapticChanged();
    partial void OnSample1RemarksChanging(string value);
    partial void OnSample1RemarksChanged();
    partial void OnSample1InspectedByChanging(string value);
    partial void OnSample1InspectedByChanged();
    partial void OnSample1ShiftChanging(string value);
    partial void OnSample1ShiftChanged();
    partial void OnSample1DateChanging(System.Nullable<System.DateTime> value);
    partial void OnSample1DateChanged();
    #endregion
	
	public HapticSample()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockingType", DbType="NVarChar(50)")]
	public string BlockingType
	{
		get
		{
			return this._BlockingType;
		}
		set
		{
			if ((this._BlockingType != value))
			{
				this.OnBlockingTypeChanging(value);
				this.SendPropertyChanging();
				this._BlockingType = value;
				this.SendPropertyChanged("BlockingType");
				this.OnBlockingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo1", DbType="NVarChar(50)")]
	public string SampleNo1
	{
		get
		{
			return this._SampleNo1;
		}
		set
		{
			if ((this._SampleNo1 != value))
			{
				this.OnSampleNo1Changing(value);
				this.SendPropertyChanging();
				this._SampleNo1 = value;
				this.SendPropertyChanged("SampleNo1");
				this.OnSampleNo1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo2", DbType="NVarChar(50)")]
	public string SampleNo2
	{
		get
		{
			return this._SampleNo2;
		}
		set
		{
			if ((this._SampleNo2 != value))
			{
				this.OnSampleNo2Changing(value);
				this.SendPropertyChanging();
				this._SampleNo2 = value;
				this.SendPropertyChanged("SampleNo2");
				this.OnSampleNo2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo3", DbType="NVarChar(50)")]
	public string SampleNo3
	{
		get
		{
			return this._SampleNo3;
		}
		set
		{
			if ((this._SampleNo3 != value))
			{
				this.OnSampleNo3Changing(value);
				this.SendPropertyChanging();
				this._SampleNo3 = value;
				this.SendPropertyChanged("SampleNo3");
				this.OnSampleNo3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1MiStatus", DbType="NVarChar(50)")]
	public string Sample1MiStatus
	{
		get
		{
			return this._Sample1MiStatus;
		}
		set
		{
			if ((this._Sample1MiStatus != value))
			{
				this.OnSample1MiStatusChanging(value);
				this.SendPropertyChanging();
				this._Sample1MiStatus = value;
				this.SendPropertyChanged("Sample1MiStatus");
				this.OnSample1MiStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample2MiStatus", DbType="NVarChar(50)")]
	public string Sample2MiStatus
	{
		get
		{
			return this._Sample2MiStatus;
		}
		set
		{
			if ((this._Sample2MiStatus != value))
			{
				this.OnSample2MiStatusChanging(value);
				this.SendPropertyChanging();
				this._Sample2MiStatus = value;
				this.SendPropertyChanged("Sample2MiStatus");
				this.OnSample2MiStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample3MiStatus", DbType="NVarChar(50)")]
	public string Sample3MiStatus
	{
		get
		{
			return this._Sample3MiStatus;
		}
		set
		{
			if ((this._Sample3MiStatus != value))
			{
				this.OnSample3MiStatusChanging(value);
				this.SendPropertyChanging();
				this._Sample3MiStatus = value;
				this.SendPropertyChanged("Sample3MiStatus");
				this.OnSample3MiStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1ProfileStatus", DbType="NVarChar(50)")]
	public string Sample1ProfileStatus
	{
		get
		{
			return this._Sample1ProfileStatus;
		}
		set
		{
			if ((this._Sample1ProfileStatus != value))
			{
				this.OnSample1ProfileStatusChanging(value);
				this.SendPropertyChanging();
				this._Sample1ProfileStatus = value;
				this.SendPropertyChanged("Sample1ProfileStatus");
				this.OnSample1ProfileStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample2ProfileStatus", DbType="NVarChar(50)")]
	public string Sample2ProfileStatus
	{
		get
		{
			return this._Sample2ProfileStatus;
		}
		set
		{
			if ((this._Sample2ProfileStatus != value))
			{
				this.OnSample2ProfileStatusChanging(value);
				this.SendPropertyChanging();
				this._Sample2ProfileStatus = value;
				this.SendPropertyChanged("Sample2ProfileStatus");
				this.OnSample2ProfileStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample3ProfileStatus", DbType="NVarChar(50)")]
	public string Sample3ProfileStatus
	{
		get
		{
			return this._Sample3ProfileStatus;
		}
		set
		{
			if ((this._Sample3ProfileStatus != value))
			{
				this.OnSample3ProfileStatusChanging(value);
				this.SendPropertyChanging();
				this._Sample3ProfileStatus = value;
				this.SendPropertyChanged("Sample3ProfileStatus");
				this.OnSample3ProfileStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Haptic", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample1Haptic
	{
		get
		{
			return this._Sample1Haptic;
		}
		set
		{
			if ((this._Sample1Haptic != value))
			{
				this.OnSample1HapticChanging(value);
				this.SendPropertyChanging();
				this._Sample1Haptic = value;
				this.SendPropertyChanged("Sample1Haptic");
				this.OnSample1HapticChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample2Haptic", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample2Haptic
	{
		get
		{
			return this._Sample2Haptic;
		}
		set
		{
			if ((this._Sample2Haptic != value))
			{
				this.OnSample2HapticChanging(value);
				this.SendPropertyChanging();
				this._Sample2Haptic = value;
				this.SendPropertyChanged("Sample2Haptic");
				this.OnSample2HapticChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample3Haptic", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample3Haptic
	{
		get
		{
			return this._Sample3Haptic;
		}
		set
		{
			if ((this._Sample3Haptic != value))
			{
				this.OnSample3HapticChanging(value);
				this.SendPropertyChanging();
				this._Sample3Haptic = value;
				this.SendPropertyChanged("Sample3Haptic");
				this.OnSample3HapticChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Remarks", DbType="VarChar(50)")]
	public string Sample1Remarks
	{
		get
		{
			return this._Sample1Remarks;
		}
		set
		{
			if ((this._Sample1Remarks != value))
			{
				this.OnSample1RemarksChanging(value);
				this.SendPropertyChanging();
				this._Sample1Remarks = value;
				this.SendPropertyChanged("Sample1Remarks");
				this.OnSample1RemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1InspectedBy", DbType="VarChar(50)")]
	public string Sample1InspectedBy
	{
		get
		{
			return this._Sample1InspectedBy;
		}
		set
		{
			if ((this._Sample1InspectedBy != value))
			{
				this.OnSample1InspectedByChanging(value);
				this.SendPropertyChanging();
				this._Sample1InspectedBy = value;
				this.SendPropertyChanged("Sample1InspectedBy");
				this.OnSample1InspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Shift", DbType="NVarChar(50)")]
	public string Sample1Shift
	{
		get
		{
			return this._Sample1Shift;
		}
		set
		{
			if ((this._Sample1Shift != value))
			{
				this.OnSample1ShiftChanging(value);
				this.SendPropertyChanging();
				this._Sample1Shift = value;
				this.SendPropertyChanged("Sample1Shift");
				this.OnSample1ShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Sample1Date
	{
		get
		{
			return this._Sample1Date;
		}
		set
		{
			if ((this._Sample1Date != value))
			{
				this.OnSample1DateChanging(value);
				this.SendPropertyChanging();
				this._Sample1Date = value;
				this.SendPropertyChanged("Sample1Date");
				this.OnSample1DateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hydration")]
public partial class Hydration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _LotNo;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _StartTimeCal;
	
	private System.Nullable<System.DateTime> _StopTimeCal;
	
	private string _StartTime;
	
	private System.Nullable<System.DateTime> _StopDate;
	
	private string _StopTime;
	
	private System.Nullable<int> _StartQty;
	
	private System.Nullable<int> _Acceptedqty;
	
	private System.Nullable<int> _Rejectedqty;
	
	private string _Duration;
	
	private string _RejectedReason;
	
	private string _RejMTSNo;
	
	private string _Shift;
	
	private string _Hydratedby;
	
	private string _TumblingRefNo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStartTimeCalChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeCalChanged();
    partial void OnStopTimeCalChanging(System.Nullable<System.DateTime> value);
    partial void OnStopTimeCalChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnStopDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStopDateChanged();
    partial void OnStopTimeChanging(string value);
    partial void OnStopTimeChanged();
    partial void OnStartQtyChanging(System.Nullable<int> value);
    partial void OnStartQtyChanged();
    partial void OnAcceptedqtyChanging(System.Nullable<int> value);
    partial void OnAcceptedqtyChanged();
    partial void OnRejectedqtyChanging(System.Nullable<int> value);
    partial void OnRejectedqtyChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnRejectedReasonChanging(string value);
    partial void OnRejectedReasonChanged();
    partial void OnRejMTSNoChanging(string value);
    partial void OnRejMTSNoChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnHydratedbyChanging(string value);
    partial void OnHydratedbyChanged();
    partial void OnTumblingRefNoChanging(string value);
    partial void OnTumblingRefNoChanged();
    #endregion
	
	public Hydration()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTimeCal", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartTimeCal
	{
		get
		{
			return this._StartTimeCal;
		}
		set
		{
			if ((this._StartTimeCal != value))
			{
				this.OnStartTimeCalChanging(value);
				this.SendPropertyChanging();
				this._StartTimeCal = value;
				this.SendPropertyChanged("StartTimeCal");
				this.OnStartTimeCalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopTimeCal", DbType="DateTime")]
	public System.Nullable<System.DateTime> StopTimeCal
	{
		get
		{
			return this._StopTimeCal;
		}
		set
		{
			if ((this._StopTimeCal != value))
			{
				this.OnStopTimeCalChanging(value);
				this.SendPropertyChanging();
				this._StopTimeCal = value;
				this.SendPropertyChanged("StopTimeCal");
				this.OnStopTimeCalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StopDate
	{
		get
		{
			return this._StopDate;
		}
		set
		{
			if ((this._StopDate != value))
			{
				this.OnStopDateChanging(value);
				this.SendPropertyChanging();
				this._StopDate = value;
				this.SendPropertyChanged("StopDate");
				this.OnStopDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopTime", DbType="VarChar(50)")]
	public string StopTime
	{
		get
		{
			return this._StopTime;
		}
		set
		{
			if ((this._StopTime != value))
			{
				this.OnStopTimeChanging(value);
				this.SendPropertyChanging();
				this._StopTime = value;
				this.SendPropertyChanged("StopTime");
				this.OnStopTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartQty", DbType="Int")]
	public System.Nullable<int> StartQty
	{
		get
		{
			return this._StartQty;
		}
		set
		{
			if ((this._StartQty != value))
			{
				this.OnStartQtyChanging(value);
				this.SendPropertyChanging();
				this._StartQty = value;
				this.SendPropertyChanged("StartQty");
				this.OnStartQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acceptedqty", DbType="Int")]
	public System.Nullable<int> Acceptedqty
	{
		get
		{
			return this._Acceptedqty;
		}
		set
		{
			if ((this._Acceptedqty != value))
			{
				this.OnAcceptedqtyChanging(value);
				this.SendPropertyChanging();
				this._Acceptedqty = value;
				this.SendPropertyChanged("Acceptedqty");
				this.OnAcceptedqtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rejectedqty", DbType="Int")]
	public System.Nullable<int> Rejectedqty
	{
		get
		{
			return this._Rejectedqty;
		}
		set
		{
			if ((this._Rejectedqty != value))
			{
				this.OnRejectedqtyChanging(value);
				this.SendPropertyChanging();
				this._Rejectedqty = value;
				this.SendPropertyChanged("Rejectedqty");
				this.OnRejectedqtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="VarChar(50)")]
	public string Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedReason", DbType="VarChar(50)")]
	public string RejectedReason
	{
		get
		{
			return this._RejectedReason;
		}
		set
		{
			if ((this._RejectedReason != value))
			{
				this.OnRejectedReasonChanging(value);
				this.SendPropertyChanging();
				this._RejectedReason = value;
				this.SendPropertyChanged("RejectedReason");
				this.OnRejectedReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejMTSNo", DbType="VarChar(50)")]
	public string RejMTSNo
	{
		get
		{
			return this._RejMTSNo;
		}
		set
		{
			if ((this._RejMTSNo != value))
			{
				this.OnRejMTSNoChanging(value);
				this.SendPropertyChanging();
				this._RejMTSNo = value;
				this.SendPropertyChanged("RejMTSNo");
				this.OnRejMTSNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hydratedby", DbType="VarChar(50)")]
	public string Hydratedby
	{
		get
		{
			return this._Hydratedby;
		}
		set
		{
			if ((this._Hydratedby != value))
			{
				this.OnHydratedbyChanging(value);
				this.SendPropertyChanging();
				this._Hydratedby = value;
				this.SendPropertyChanged("Hydratedby");
				this.OnHydratedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingRefNo", DbType="VarChar(50)")]
	public string TumblingRefNo
	{
		get
		{
			return this._TumblingRefNo;
		}
		set
		{
			if ((this._TumblingRefNo != value))
			{
				this.OnTumblingRefNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingRefNo = value;
				this.SendPropertyChanged("TumblingRefNo");
				this.OnTumblingRefNoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LensMeasurement")]
public partial class LensMeasurement : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _LotNo;
	
	private string _BlockingType;
	
	private string _SampleNo1Status;
	
	private string _SampleNo2Status;
	
	private string _SampleNo3Status;
	
	private System.Nullable<decimal> _SampleNo1LensDiameter;
	
	private System.Nullable<decimal> _SampleNo2LensDiameter2;
	
	private System.Nullable<decimal> _SampleNo3LensDiameter3;
	
	private System.Nullable<decimal> _SampleNo1LensThickness;
	
	private System.Nullable<decimal> _SampleNo2LensThickness2;
	
	private System.Nullable<decimal> _SampleNo3LensThickness3;
	
	private string _Remarks1;
	
	private string _Inspectedby1;
	
	private string _StatusShift;
	
	private System.Nullable<System.DateTime> _SampleNo1Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBlockingTypeChanging(string value);
    partial void OnBlockingTypeChanged();
    partial void OnSampleNo1StatusChanging(string value);
    partial void OnSampleNo1StatusChanged();
    partial void OnSampleNo2StatusChanging(string value);
    partial void OnSampleNo2StatusChanged();
    partial void OnSampleNo3StatusChanging(string value);
    partial void OnSampleNo3StatusChanged();
    partial void OnSampleNo1LensDiameterChanging(System.Nullable<decimal> value);
    partial void OnSampleNo1LensDiameterChanged();
    partial void OnSampleNo2LensDiameter2Changing(System.Nullable<decimal> value);
    partial void OnSampleNo2LensDiameter2Changed();
    partial void OnSampleNo3LensDiameter3Changing(System.Nullable<decimal> value);
    partial void OnSampleNo3LensDiameter3Changed();
    partial void OnSampleNo1LensThicknessChanging(System.Nullable<decimal> value);
    partial void OnSampleNo1LensThicknessChanged();
    partial void OnSampleNo2LensThickness2Changing(System.Nullable<decimal> value);
    partial void OnSampleNo2LensThickness2Changed();
    partial void OnSampleNo3LensThickness3Changing(System.Nullable<decimal> value);
    partial void OnSampleNo3LensThickness3Changed();
    partial void OnRemarks1Changing(string value);
    partial void OnRemarks1Changed();
    partial void OnInspectedby1Changing(string value);
    partial void OnInspectedby1Changed();
    partial void OnStatusShiftChanging(string value);
    partial void OnStatusShiftChanged();
    partial void OnSampleNo1DateChanging(System.Nullable<System.DateTime> value);
    partial void OnSampleNo1DateChanged();
    #endregion
	
	public LensMeasurement()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockingType", DbType="VarChar(50)")]
	public string BlockingType
	{
		get
		{
			return this._BlockingType;
		}
		set
		{
			if ((this._BlockingType != value))
			{
				this.OnBlockingTypeChanging(value);
				this.SendPropertyChanging();
				this._BlockingType = value;
				this.SendPropertyChanged("BlockingType");
				this.OnBlockingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo1Status", DbType="VarChar(50)")]
	public string SampleNo1Status
	{
		get
		{
			return this._SampleNo1Status;
		}
		set
		{
			if ((this._SampleNo1Status != value))
			{
				this.OnSampleNo1StatusChanging(value);
				this.SendPropertyChanging();
				this._SampleNo1Status = value;
				this.SendPropertyChanged("SampleNo1Status");
				this.OnSampleNo1StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo2Status", DbType="VarChar(50)")]
	public string SampleNo2Status
	{
		get
		{
			return this._SampleNo2Status;
		}
		set
		{
			if ((this._SampleNo2Status != value))
			{
				this.OnSampleNo2StatusChanging(value);
				this.SendPropertyChanging();
				this._SampleNo2Status = value;
				this.SendPropertyChanged("SampleNo2Status");
				this.OnSampleNo2StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo3Status", DbType="VarChar(50)")]
	public string SampleNo3Status
	{
		get
		{
			return this._SampleNo3Status;
		}
		set
		{
			if ((this._SampleNo3Status != value))
			{
				this.OnSampleNo3StatusChanging(value);
				this.SendPropertyChanging();
				this._SampleNo3Status = value;
				this.SendPropertyChanged("SampleNo3Status");
				this.OnSampleNo3StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo1LensDiameter", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> SampleNo1LensDiameter
	{
		get
		{
			return this._SampleNo1LensDiameter;
		}
		set
		{
			if ((this._SampleNo1LensDiameter != value))
			{
				this.OnSampleNo1LensDiameterChanging(value);
				this.SendPropertyChanging();
				this._SampleNo1LensDiameter = value;
				this.SendPropertyChanged("SampleNo1LensDiameter");
				this.OnSampleNo1LensDiameterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo2LensDiameter2", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> SampleNo2LensDiameter2
	{
		get
		{
			return this._SampleNo2LensDiameter2;
		}
		set
		{
			if ((this._SampleNo2LensDiameter2 != value))
			{
				this.OnSampleNo2LensDiameter2Changing(value);
				this.SendPropertyChanging();
				this._SampleNo2LensDiameter2 = value;
				this.SendPropertyChanged("SampleNo2LensDiameter2");
				this.OnSampleNo2LensDiameter2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo3LensDiameter3", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> SampleNo3LensDiameter3
	{
		get
		{
			return this._SampleNo3LensDiameter3;
		}
		set
		{
			if ((this._SampleNo3LensDiameter3 != value))
			{
				this.OnSampleNo3LensDiameter3Changing(value);
				this.SendPropertyChanging();
				this._SampleNo3LensDiameter3 = value;
				this.SendPropertyChanged("SampleNo3LensDiameter3");
				this.OnSampleNo3LensDiameter3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo1LensThickness", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> SampleNo1LensThickness
	{
		get
		{
			return this._SampleNo1LensThickness;
		}
		set
		{
			if ((this._SampleNo1LensThickness != value))
			{
				this.OnSampleNo1LensThicknessChanging(value);
				this.SendPropertyChanging();
				this._SampleNo1LensThickness = value;
				this.SendPropertyChanged("SampleNo1LensThickness");
				this.OnSampleNo1LensThicknessChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo2LensThickness2", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> SampleNo2LensThickness2
	{
		get
		{
			return this._SampleNo2LensThickness2;
		}
		set
		{
			if ((this._SampleNo2LensThickness2 != value))
			{
				this.OnSampleNo2LensThickness2Changing(value);
				this.SendPropertyChanging();
				this._SampleNo2LensThickness2 = value;
				this.SendPropertyChanged("SampleNo2LensThickness2");
				this.OnSampleNo2LensThickness2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo3LensThickness3", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> SampleNo3LensThickness3
	{
		get
		{
			return this._SampleNo3LensThickness3;
		}
		set
		{
			if ((this._SampleNo3LensThickness3 != value))
			{
				this.OnSampleNo3LensThickness3Changing(value);
				this.SendPropertyChanging();
				this._SampleNo3LensThickness3 = value;
				this.SendPropertyChanged("SampleNo3LensThickness3");
				this.OnSampleNo3LensThickness3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks1", DbType="VarChar(50)")]
	public string Remarks1
	{
		get
		{
			return this._Remarks1;
		}
		set
		{
			if ((this._Remarks1 != value))
			{
				this.OnRemarks1Changing(value);
				this.SendPropertyChanging();
				this._Remarks1 = value;
				this.SendPropertyChanged("Remarks1");
				this.OnRemarks1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inspectedby1", DbType="VarChar(50)")]
	public string Inspectedby1
	{
		get
		{
			return this._Inspectedby1;
		}
		set
		{
			if ((this._Inspectedby1 != value))
			{
				this.OnInspectedby1Changing(value);
				this.SendPropertyChanging();
				this._Inspectedby1 = value;
				this.SendPropertyChanged("Inspectedby1");
				this.OnInspectedby1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusShift", DbType="VarChar(50)")]
	public string StatusShift
	{
		get
		{
			return this._StatusShift;
		}
		set
		{
			if ((this._StatusShift != value))
			{
				this.OnStatusShiftChanging(value);
				this.SendPropertyChanging();
				this._StatusShift = value;
				this.SendPropertyChanged("StatusShift");
				this.OnStatusShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo1Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> SampleNo1Date
	{
		get
		{
			return this._SampleNo1Date;
		}
		set
		{
			if ((this._SampleNo1Date != value))
			{
				this.OnSampleNo1DateChanging(value);
				this.SendPropertyChanging();
				this._SampleNo1Date = value;
				this.SendPropertyChanged("SampleNo1Date");
				this.OnSampleNo1DateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LotResult")]
public partial class LotResult : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _LotNo;
	
	private System.Nullable<int> _FinishedQuantity;
	
	private System.Nullable<int> _ReceivedQuantity;
	
	private System.Nullable<int> _BalanceQuantity;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _RejectedQuantity;
	
	private string _Remarks;
	
	private string _InspectedBy;
	
	private string _Shift;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnFinishedQuantityChanging(System.Nullable<int> value);
    partial void OnFinishedQuantityChanged();
    partial void OnReceivedQuantityChanging(System.Nullable<int> value);
    partial void OnReceivedQuantityChanged();
    partial void OnBalanceQuantityChanging(System.Nullable<int> value);
    partial void OnBalanceQuantityChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnRejectedQuantityChanging(System.Nullable<int> value);
    partial void OnRejectedQuantityChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnInspectedByChanging(string value);
    partial void OnInspectedByChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public LotResult()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedQuantity", DbType="Int")]
	public System.Nullable<int> FinishedQuantity
	{
		get
		{
			return this._FinishedQuantity;
		}
		set
		{
			if ((this._FinishedQuantity != value))
			{
				this.OnFinishedQuantityChanging(value);
				this.SendPropertyChanging();
				this._FinishedQuantity = value;
				this.SendPropertyChanged("FinishedQuantity");
				this.OnFinishedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQuantity", DbType="Int")]
	public System.Nullable<int> ReceivedQuantity
	{
		get
		{
			return this._ReceivedQuantity;
		}
		set
		{
			if ((this._ReceivedQuantity != value))
			{
				this.OnReceivedQuantityChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQuantity = value;
				this.SendPropertyChanged("ReceivedQuantity");
				this.OnReceivedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQuantity", DbType="Int")]
	public System.Nullable<int> BalanceQuantity
	{
		get
		{
			return this._BalanceQuantity;
		}
		set
		{
			if ((this._BalanceQuantity != value))
			{
				this.OnBalanceQuantityChanging(value);
				this.SendPropertyChanging();
				this._BalanceQuantity = value;
				this.SendPropertyChanged("BalanceQuantity");
				this.OnBalanceQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQuantity", DbType="Int")]
	public System.Nullable<int> RejectedQuantity
	{
		get
		{
			return this._RejectedQuantity;
		}
		set
		{
			if ((this._RejectedQuantity != value))
			{
				this.OnRejectedQuantityChanging(value);
				this.SendPropertyChanging();
				this._RejectedQuantity = value;
				this.SendPropertyChanged("RejectedQuantity");
				this.OnRejectedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy", DbType="VarChar(50)")]
	public string InspectedBy
	{
		get
		{
			return this._InspectedBy;
		}
		set
		{
			if ((this._InspectedBy != value))
			{
				this.OnInspectedByChanging(value);
				this.SendPropertyChanging();
				this._InspectedBy = value;
				this.SendPropertyChanged("InspectedBy");
				this.OnInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MicroscopicInspection")]
public partial class MicroscopicInspection : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LotNo;
	
	private string _BlockingType;
	
	private string _Sample1Status;
	
	private string _Sample2Status;
	
	private string _Sample3Status;
	
	private string _Sample1Remarks;
	
	private string _Sample1InspectedBy;
	
	private string _Sample1Shift;
	
	private System.Nullable<System.DateTime> _Sample1Date;
	
	private string _RejMTSNo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBlockingTypeChanging(string value);
    partial void OnBlockingTypeChanged();
    partial void OnSample1StatusChanging(string value);
    partial void OnSample1StatusChanged();
    partial void OnSample2StatusChanging(string value);
    partial void OnSample2StatusChanged();
    partial void OnSample3StatusChanging(string value);
    partial void OnSample3StatusChanged();
    partial void OnSample1RemarksChanging(string value);
    partial void OnSample1RemarksChanged();
    partial void OnSample1InspectedByChanging(string value);
    partial void OnSample1InspectedByChanged();
    partial void OnSample1ShiftChanging(string value);
    partial void OnSample1ShiftChanged();
    partial void OnSample1DateChanging(System.Nullable<System.DateTime> value);
    partial void OnSample1DateChanged();
    partial void OnRejMTSNoChanging(string value);
    partial void OnRejMTSNoChanged();
    #endregion
	
	public MicroscopicInspection()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockingType", DbType="VarChar(50)")]
	public string BlockingType
	{
		get
		{
			return this._BlockingType;
		}
		set
		{
			if ((this._BlockingType != value))
			{
				this.OnBlockingTypeChanging(value);
				this.SendPropertyChanging();
				this._BlockingType = value;
				this.SendPropertyChanged("BlockingType");
				this.OnBlockingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Status", DbType="NVarChar(50)")]
	public string Sample1Status
	{
		get
		{
			return this._Sample1Status;
		}
		set
		{
			if ((this._Sample1Status != value))
			{
				this.OnSample1StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample1Status = value;
				this.SendPropertyChanged("Sample1Status");
				this.OnSample1StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample2Status", DbType="NVarChar(50)")]
	public string Sample2Status
	{
		get
		{
			return this._Sample2Status;
		}
		set
		{
			if ((this._Sample2Status != value))
			{
				this.OnSample2StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample2Status = value;
				this.SendPropertyChanged("Sample2Status");
				this.OnSample2StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample3Status", DbType="VarChar(50)")]
	public string Sample3Status
	{
		get
		{
			return this._Sample3Status;
		}
		set
		{
			if ((this._Sample3Status != value))
			{
				this.OnSample3StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample3Status = value;
				this.SendPropertyChanged("Sample3Status");
				this.OnSample3StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Remarks", DbType="VarChar(50)")]
	public string Sample1Remarks
	{
		get
		{
			return this._Sample1Remarks;
		}
		set
		{
			if ((this._Sample1Remarks != value))
			{
				this.OnSample1RemarksChanging(value);
				this.SendPropertyChanging();
				this._Sample1Remarks = value;
				this.SendPropertyChanged("Sample1Remarks");
				this.OnSample1RemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1InspectedBy", DbType="VarChar(50)")]
	public string Sample1InspectedBy
	{
		get
		{
			return this._Sample1InspectedBy;
		}
		set
		{
			if ((this._Sample1InspectedBy != value))
			{
				this.OnSample1InspectedByChanging(value);
				this.SendPropertyChanging();
				this._Sample1InspectedBy = value;
				this.SendPropertyChanged("Sample1InspectedBy");
				this.OnSample1InspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Shift", DbType="NVarChar(50)")]
	public string Sample1Shift
	{
		get
		{
			return this._Sample1Shift;
		}
		set
		{
			if ((this._Sample1Shift != value))
			{
				this.OnSample1ShiftChanging(value);
				this.SendPropertyChanging();
				this._Sample1Shift = value;
				this.SendPropertyChanged("Sample1Shift");
				this.OnSample1ShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Sample1Date
	{
		get
		{
			return this._Sample1Date;
		}
		set
		{
			if ((this._Sample1Date != value))
			{
				this.OnSample1DateChanging(value);
				this.SendPropertyChanging();
				this._Sample1Date = value;
				this.SendPropertyChanged("Sample1Date");
				this.OnSample1DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejMTSNo", DbType="VarChar(50)")]
	public string RejMTSNo
	{
		get
		{
			return this._RejMTSNo;
		}
		set
		{
			if ((this._RejMTSNo != value))
			{
				this.OnRejMTSNoChanging(value);
				this.SendPropertyChanging();
				this._RejMTSNo = value;
				this.SendPropertyChanged("RejMTSNo");
				this.OnRejMTSNoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Milling")]
public partial class Milling : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _LotNo;
	
	private System.Nullable<int> _FinishedQuantity;
	
	private System.Nullable<int> _ReceivedQuantity;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _BalanceQuantity;
	
	private System.Nullable<int> _RejectedQuantity;
	
	private string _MillingLatheNo;
	
	private string _StartTime;
	
	private string _EndTime;
	
	private string _Duration;
	
	private string _Remarks;
	
	private string _OperatorName;
	
	private string _Shift;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnFinishedQuantityChanging(System.Nullable<int> value);
    partial void OnFinishedQuantityChanged();
    partial void OnReceivedQuantityChanging(System.Nullable<int> value);
    partial void OnReceivedQuantityChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnBalanceQuantityChanging(System.Nullable<int> value);
    partial void OnBalanceQuantityChanged();
    partial void OnRejectedQuantityChanging(System.Nullable<int> value);
    partial void OnRejectedQuantityChanged();
    partial void OnMillingLatheNoChanging(string value);
    partial void OnMillingLatheNoChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnOperatorNameChanging(string value);
    partial void OnOperatorNameChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public Milling()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedQuantity", DbType="Int")]
	public System.Nullable<int> FinishedQuantity
	{
		get
		{
			return this._FinishedQuantity;
		}
		set
		{
			if ((this._FinishedQuantity != value))
			{
				this.OnFinishedQuantityChanging(value);
				this.SendPropertyChanging();
				this._FinishedQuantity = value;
				this.SendPropertyChanged("FinishedQuantity");
				this.OnFinishedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQuantity", DbType="Int")]
	public System.Nullable<int> ReceivedQuantity
	{
		get
		{
			return this._ReceivedQuantity;
		}
		set
		{
			if ((this._ReceivedQuantity != value))
			{
				this.OnReceivedQuantityChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQuantity = value;
				this.SendPropertyChanged("ReceivedQuantity");
				this.OnReceivedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQuantity", DbType="Int")]
	public System.Nullable<int> BalanceQuantity
	{
		get
		{
			return this._BalanceQuantity;
		}
		set
		{
			if ((this._BalanceQuantity != value))
			{
				this.OnBalanceQuantityChanging(value);
				this.SendPropertyChanging();
				this._BalanceQuantity = value;
				this.SendPropertyChanged("BalanceQuantity");
				this.OnBalanceQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQuantity", DbType="Int")]
	public System.Nullable<int> RejectedQuantity
	{
		get
		{
			return this._RejectedQuantity;
		}
		set
		{
			if ((this._RejectedQuantity != value))
			{
				this.OnRejectedQuantityChanging(value);
				this.SendPropertyChanging();
				this._RejectedQuantity = value;
				this.SendPropertyChanged("RejectedQuantity");
				this.OnRejectedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MillingLatheNo", DbType="VarChar(50)")]
	public string MillingLatheNo
	{
		get
		{
			return this._MillingLatheNo;
		}
		set
		{
			if ((this._MillingLatheNo != value))
			{
				this.OnMillingLatheNoChanging(value);
				this.SendPropertyChanging();
				this._MillingLatheNo = value;
				this.SendPropertyChanged("MillingLatheNo");
				this.OnMillingLatheNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="VarChar(50)")]
	public string EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this.OnEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EndTime = value;
				this.SendPropertyChanged("EndTime");
				this.OnEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="VarChar(50)")]
	public string Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorName", DbType="VarChar(50)")]
	public string OperatorName
	{
		get
		{
			return this._OperatorName;
		}
		set
		{
			if ((this._OperatorName != value))
			{
				this.OnOperatorNameChanging(value);
				this.SendPropertyChanging();
				this._OperatorName = value;
				this.SendPropertyChanged("OperatorName");
				this.OnOperatorNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Powerinspection")]
public partial class Powerinspection : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LotNo;
	
	private string _BlockingType;
	
	private string _SampleNo1;
	
	private string _SampleNo2;
	
	private string _SampleNo3;
	
	private string _PowerStatus1;
	
	private string _PowerStatus2;
	
	private string _PowerStatus3;
	
	private System.Nullable<decimal> _BeforeHydSample1;
	
	private System.Nullable<decimal> _BeforeHydSample2;
	
	private System.Nullable<decimal> _BeforeHydSample3;
	
	private System.Nullable<decimal> _AfterHydSample1;
	
	private System.Nullable<decimal> _AfterHydSample2;
	
	private System.Nullable<decimal> _AfterHydSample3;
	
	private string _Sample1Remarks;
	
	private string _Sample1InspectedBy;
	
	private string _Sample1Shift;
	
	private System.Nullable<System.DateTime> _Sample1Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBlockingTypeChanging(string value);
    partial void OnBlockingTypeChanged();
    partial void OnSampleNo1Changing(string value);
    partial void OnSampleNo1Changed();
    partial void OnSampleNo2Changing(string value);
    partial void OnSampleNo2Changed();
    partial void OnSampleNo3Changing(string value);
    partial void OnSampleNo3Changed();
    partial void OnPowerStatus1Changing(string value);
    partial void OnPowerStatus1Changed();
    partial void OnPowerStatus2Changing(string value);
    partial void OnPowerStatus2Changed();
    partial void OnPowerStatus3Changing(string value);
    partial void OnPowerStatus3Changed();
    partial void OnBeforeHydSample1Changing(System.Nullable<decimal> value);
    partial void OnBeforeHydSample1Changed();
    partial void OnBeforeHydSample2Changing(System.Nullable<decimal> value);
    partial void OnBeforeHydSample2Changed();
    partial void OnBeforeHydSample3Changing(System.Nullable<decimal> value);
    partial void OnBeforeHydSample3Changed();
    partial void OnAfterHydSample1Changing(System.Nullable<decimal> value);
    partial void OnAfterHydSample1Changed();
    partial void OnAfterHydSample2Changing(System.Nullable<decimal> value);
    partial void OnAfterHydSample2Changed();
    partial void OnAfterHydSample3Changing(System.Nullable<decimal> value);
    partial void OnAfterHydSample3Changed();
    partial void OnSample1RemarksChanging(string value);
    partial void OnSample1RemarksChanged();
    partial void OnSample1InspectedByChanging(string value);
    partial void OnSample1InspectedByChanged();
    partial void OnSample1ShiftChanging(string value);
    partial void OnSample1ShiftChanged();
    partial void OnSample1DateChanging(System.Nullable<System.DateTime> value);
    partial void OnSample1DateChanged();
    #endregion
	
	public Powerinspection()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockingType", DbType="NVarChar(50)")]
	public string BlockingType
	{
		get
		{
			return this._BlockingType;
		}
		set
		{
			if ((this._BlockingType != value))
			{
				this.OnBlockingTypeChanging(value);
				this.SendPropertyChanging();
				this._BlockingType = value;
				this.SendPropertyChanged("BlockingType");
				this.OnBlockingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo1", DbType="NVarChar(50)")]
	public string SampleNo1
	{
		get
		{
			return this._SampleNo1;
		}
		set
		{
			if ((this._SampleNo1 != value))
			{
				this.OnSampleNo1Changing(value);
				this.SendPropertyChanging();
				this._SampleNo1 = value;
				this.SendPropertyChanged("SampleNo1");
				this.OnSampleNo1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo2", DbType="NVarChar(50)")]
	public string SampleNo2
	{
		get
		{
			return this._SampleNo2;
		}
		set
		{
			if ((this._SampleNo2 != value))
			{
				this.OnSampleNo2Changing(value);
				this.SendPropertyChanging();
				this._SampleNo2 = value;
				this.SendPropertyChanged("SampleNo2");
				this.OnSampleNo2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo3", DbType="NVarChar(50)")]
	public string SampleNo3
	{
		get
		{
			return this._SampleNo3;
		}
		set
		{
			if ((this._SampleNo3 != value))
			{
				this.OnSampleNo3Changing(value);
				this.SendPropertyChanging();
				this._SampleNo3 = value;
				this.SendPropertyChanged("SampleNo3");
				this.OnSampleNo3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerStatus1", DbType="NVarChar(50)")]
	public string PowerStatus1
	{
		get
		{
			return this._PowerStatus1;
		}
		set
		{
			if ((this._PowerStatus1 != value))
			{
				this.OnPowerStatus1Changing(value);
				this.SendPropertyChanging();
				this._PowerStatus1 = value;
				this.SendPropertyChanged("PowerStatus1");
				this.OnPowerStatus1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerStatus2", DbType="NVarChar(50)")]
	public string PowerStatus2
	{
		get
		{
			return this._PowerStatus2;
		}
		set
		{
			if ((this._PowerStatus2 != value))
			{
				this.OnPowerStatus2Changing(value);
				this.SendPropertyChanging();
				this._PowerStatus2 = value;
				this.SendPropertyChanged("PowerStatus2");
				this.OnPowerStatus2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerStatus3", DbType="NVarChar(50)")]
	public string PowerStatus3
	{
		get
		{
			return this._PowerStatus3;
		}
		set
		{
			if ((this._PowerStatus3 != value))
			{
				this.OnPowerStatus3Changing(value);
				this.SendPropertyChanging();
				this._PowerStatus3 = value;
				this.SendPropertyChanged("PowerStatus3");
				this.OnPowerStatus3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeforeHydSample1", DbType="Decimal(18,1)")]
	public System.Nullable<decimal> BeforeHydSample1
	{
		get
		{
			return this._BeforeHydSample1;
		}
		set
		{
			if ((this._BeforeHydSample1 != value))
			{
				this.OnBeforeHydSample1Changing(value);
				this.SendPropertyChanging();
				this._BeforeHydSample1 = value;
				this.SendPropertyChanged("BeforeHydSample1");
				this.OnBeforeHydSample1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeforeHydSample2", DbType="Decimal(18,1)")]
	public System.Nullable<decimal> BeforeHydSample2
	{
		get
		{
			return this._BeforeHydSample2;
		}
		set
		{
			if ((this._BeforeHydSample2 != value))
			{
				this.OnBeforeHydSample2Changing(value);
				this.SendPropertyChanging();
				this._BeforeHydSample2 = value;
				this.SendPropertyChanged("BeforeHydSample2");
				this.OnBeforeHydSample2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeforeHydSample3", DbType="Decimal(18,1)")]
	public System.Nullable<decimal> BeforeHydSample3
	{
		get
		{
			return this._BeforeHydSample3;
		}
		set
		{
			if ((this._BeforeHydSample3 != value))
			{
				this.OnBeforeHydSample3Changing(value);
				this.SendPropertyChanging();
				this._BeforeHydSample3 = value;
				this.SendPropertyChanged("BeforeHydSample3");
				this.OnBeforeHydSample3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterHydSample1", DbType="Decimal(18,1)")]
	public System.Nullable<decimal> AfterHydSample1
	{
		get
		{
			return this._AfterHydSample1;
		}
		set
		{
			if ((this._AfterHydSample1 != value))
			{
				this.OnAfterHydSample1Changing(value);
				this.SendPropertyChanging();
				this._AfterHydSample1 = value;
				this.SendPropertyChanged("AfterHydSample1");
				this.OnAfterHydSample1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterHydSample2", DbType="Decimal(18,1)")]
	public System.Nullable<decimal> AfterHydSample2
	{
		get
		{
			return this._AfterHydSample2;
		}
		set
		{
			if ((this._AfterHydSample2 != value))
			{
				this.OnAfterHydSample2Changing(value);
				this.SendPropertyChanging();
				this._AfterHydSample2 = value;
				this.SendPropertyChanged("AfterHydSample2");
				this.OnAfterHydSample2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterHydSample3", DbType="Decimal(18,1)")]
	public System.Nullable<decimal> AfterHydSample3
	{
		get
		{
			return this._AfterHydSample3;
		}
		set
		{
			if ((this._AfterHydSample3 != value))
			{
				this.OnAfterHydSample3Changing(value);
				this.SendPropertyChanging();
				this._AfterHydSample3 = value;
				this.SendPropertyChanged("AfterHydSample3");
				this.OnAfterHydSample3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Remarks", DbType="VarChar(50)")]
	public string Sample1Remarks
	{
		get
		{
			return this._Sample1Remarks;
		}
		set
		{
			if ((this._Sample1Remarks != value))
			{
				this.OnSample1RemarksChanging(value);
				this.SendPropertyChanging();
				this._Sample1Remarks = value;
				this.SendPropertyChanged("Sample1Remarks");
				this.OnSample1RemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1InspectedBy", DbType="VarChar(50)")]
	public string Sample1InspectedBy
	{
		get
		{
			return this._Sample1InspectedBy;
		}
		set
		{
			if ((this._Sample1InspectedBy != value))
			{
				this.OnSample1InspectedByChanging(value);
				this.SendPropertyChanging();
				this._Sample1InspectedBy = value;
				this.SendPropertyChanged("Sample1InspectedBy");
				this.OnSample1InspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Shift", DbType="NVarChar(50)")]
	public string Sample1Shift
	{
		get
		{
			return this._Sample1Shift;
		}
		set
		{
			if ((this._Sample1Shift != value))
			{
				this.OnSample1ShiftChanging(value);
				this.SendPropertyChanging();
				this._Sample1Shift = value;
				this.SendPropertyChanged("Sample1Shift");
				this.OnSample1ShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Sample1Date
	{
		get
		{
			return this._Sample1Date;
		}
		set
		{
			if ((this._Sample1Date != value))
			{
				this.OnSample1DateChanging(value);
				this.SendPropertyChanging();
				this._Sample1Date = value;
				this.SendPropertyChanged("Sample1Date");
				this.OnSample1DateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MicroScopicInspCollet")]
public partial class MicroScopicInspCollet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LotNo;
	
	private string _BlockingType;
	
	private System.Nullable<int> _ReceivedQuantity;
	
	private System.Nullable<int> _FinishedQuantity;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _RejectedQuantity;
	
	private System.Nullable<int> _BalanceQuantity;
	
	private string _RejMts;
	
	private string _Remarks;
	
	private string _InspectedBy;
	
	private string _Shift;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBlockingTypeChanging(string value);
    partial void OnBlockingTypeChanged();
    partial void OnReceivedQuantityChanging(System.Nullable<int> value);
    partial void OnReceivedQuantityChanged();
    partial void OnFinishedQuantityChanging(System.Nullable<int> value);
    partial void OnFinishedQuantityChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnRejectedQuantityChanging(System.Nullable<int> value);
    partial void OnRejectedQuantityChanged();
    partial void OnBalanceQuantityChanging(System.Nullable<int> value);
    partial void OnBalanceQuantityChanged();
    partial void OnRejMtsChanging(string value);
    partial void OnRejMtsChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnInspectedByChanging(string value);
    partial void OnInspectedByChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public MicroScopicInspCollet()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockingType", DbType="NVarChar(50)")]
	public string BlockingType
	{
		get
		{
			return this._BlockingType;
		}
		set
		{
			if ((this._BlockingType != value))
			{
				this.OnBlockingTypeChanging(value);
				this.SendPropertyChanging();
				this._BlockingType = value;
				this.SendPropertyChanged("BlockingType");
				this.OnBlockingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQuantity", DbType="Int")]
	public System.Nullable<int> ReceivedQuantity
	{
		get
		{
			return this._ReceivedQuantity;
		}
		set
		{
			if ((this._ReceivedQuantity != value))
			{
				this.OnReceivedQuantityChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQuantity = value;
				this.SendPropertyChanged("ReceivedQuantity");
				this.OnReceivedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedQuantity", DbType="Int")]
	public System.Nullable<int> FinishedQuantity
	{
		get
		{
			return this._FinishedQuantity;
		}
		set
		{
			if ((this._FinishedQuantity != value))
			{
				this.OnFinishedQuantityChanging(value);
				this.SendPropertyChanging();
				this._FinishedQuantity = value;
				this.SendPropertyChanged("FinishedQuantity");
				this.OnFinishedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQuantity", DbType="Int")]
	public System.Nullable<int> RejectedQuantity
	{
		get
		{
			return this._RejectedQuantity;
		}
		set
		{
			if ((this._RejectedQuantity != value))
			{
				this.OnRejectedQuantityChanging(value);
				this.SendPropertyChanging();
				this._RejectedQuantity = value;
				this.SendPropertyChanged("RejectedQuantity");
				this.OnRejectedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQuantity", DbType="Int")]
	public System.Nullable<int> BalanceQuantity
	{
		get
		{
			return this._BalanceQuantity;
		}
		set
		{
			if ((this._BalanceQuantity != value))
			{
				this.OnBalanceQuantityChanging(value);
				this.SendPropertyChanging();
				this._BalanceQuantity = value;
				this.SendPropertyChanged("BalanceQuantity");
				this.OnBalanceQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejMts", DbType="VarChar(50)")]
	public string RejMts
	{
		get
		{
			return this._RejMts;
		}
		set
		{
			if ((this._RejMts != value))
			{
				this.OnRejMtsChanging(value);
				this.SendPropertyChanging();
				this._RejMts = value;
				this.SendPropertyChanged("RejMts");
				this.OnRejMtsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy", DbType="VarChar(50)")]
	public string InspectedBy
	{
		get
		{
			return this._InspectedBy;
		}
		set
		{
			if ((this._InspectedBy != value))
			{
				this.OnInspectedByChanging(value);
				this.SendPropertyChanging();
				this._InspectedBy = value;
				this.SendPropertyChanged("InspectedBy");
				this.OnInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InspectionResolution")]
public partial class InspectionResolution : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LotNo;
	
	private string _BlockingType;
	
	private System.Nullable<int> _ReceivedQuantity;
	
	private System.Nullable<int> _FinishedQuantity;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _RejectedQuantity;
	
	private System.Nullable<int> _BalanceQuantity;
	
	private string _RejMts;
	
	private string _Remarks;
	
	private string _InspectedBy;
	
	private string _Shift;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBlockingTypeChanging(string value);
    partial void OnBlockingTypeChanged();
    partial void OnReceivedQuantityChanging(System.Nullable<int> value);
    partial void OnReceivedQuantityChanged();
    partial void OnFinishedQuantityChanging(System.Nullable<int> value);
    partial void OnFinishedQuantityChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnRejectedQuantityChanging(System.Nullable<int> value);
    partial void OnRejectedQuantityChanged();
    partial void OnBalanceQuantityChanging(System.Nullable<int> value);
    partial void OnBalanceQuantityChanged();
    partial void OnRejMtsChanging(string value);
    partial void OnRejMtsChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnInspectedByChanging(string value);
    partial void OnInspectedByChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public InspectionResolution()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockingType", DbType="NVarChar(50)")]
	public string BlockingType
	{
		get
		{
			return this._BlockingType;
		}
		set
		{
			if ((this._BlockingType != value))
			{
				this.OnBlockingTypeChanging(value);
				this.SendPropertyChanging();
				this._BlockingType = value;
				this.SendPropertyChanged("BlockingType");
				this.OnBlockingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQuantity", DbType="Int")]
	public System.Nullable<int> ReceivedQuantity
	{
		get
		{
			return this._ReceivedQuantity;
		}
		set
		{
			if ((this._ReceivedQuantity != value))
			{
				this.OnReceivedQuantityChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQuantity = value;
				this.SendPropertyChanged("ReceivedQuantity");
				this.OnReceivedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedQuantity", DbType="Int")]
	public System.Nullable<int> FinishedQuantity
	{
		get
		{
			return this._FinishedQuantity;
		}
		set
		{
			if ((this._FinishedQuantity != value))
			{
				this.OnFinishedQuantityChanging(value);
				this.SendPropertyChanging();
				this._FinishedQuantity = value;
				this.SendPropertyChanged("FinishedQuantity");
				this.OnFinishedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQuantity", DbType="Int")]
	public System.Nullable<int> RejectedQuantity
	{
		get
		{
			return this._RejectedQuantity;
		}
		set
		{
			if ((this._RejectedQuantity != value))
			{
				this.OnRejectedQuantityChanging(value);
				this.SendPropertyChanging();
				this._RejectedQuantity = value;
				this.SendPropertyChanged("RejectedQuantity");
				this.OnRejectedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQuantity", DbType="Int")]
	public System.Nullable<int> BalanceQuantity
	{
		get
		{
			return this._BalanceQuantity;
		}
		set
		{
			if ((this._BalanceQuantity != value))
			{
				this.OnBalanceQuantityChanging(value);
				this.SendPropertyChanging();
				this._BalanceQuantity = value;
				this.SendPropertyChanged("BalanceQuantity");
				this.OnBalanceQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejMts", DbType="VarChar(50)")]
	public string RejMts
	{
		get
		{
			return this._RejMts;
		}
		set
		{
			if ((this._RejMts != value))
			{
				this.OnRejMtsChanging(value);
				this.SendPropertyChanging();
				this._RejMts = value;
				this.SendPropertyChanged("RejMts");
				this.OnRejMtsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy", DbType="VarChar(50)")]
	public string InspectedBy
	{
		get
		{
			return this._InspectedBy;
		}
		set
		{
			if ((this._InspectedBy != value))
			{
				this.OnInspectedByChanging(value);
				this.SendPropertyChanging();
				this._InspectedBy = value;
				this.SendPropertyChanged("InspectedBy");
				this.OnInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MattTumblingLens")]
public partial class MattTumblingLen : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _TumblingLotNo;
	
	private string _PhobicID;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _ModelNo;
	
	private System.Nullable<decimal> _Power;
	
	private string _LensCutLot;
	
	private System.Nullable<int> _TotalQuantity;
	
	private string _Tumbledby;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnTumblingLotNoChanging(string value);
    partial void OnTumblingLotNoChanged();
    partial void OnPhobicIDChanging(string value);
    partial void OnPhobicIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnLensCutLotChanging(string value);
    partial void OnLensCutLotChanged();
    partial void OnTotalQuantityChanging(System.Nullable<int> value);
    partial void OnTotalQuantityChanged();
    partial void OnTumbledbyChanging(string value);
    partial void OnTumbledbyChanged();
    #endregion
	
	public MattTumblingLen()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingLotNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TumblingLotNo
	{
		get
		{
			return this._TumblingLotNo;
		}
		set
		{
			if ((this._TumblingLotNo != value))
			{
				this.OnTumblingLotNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingLotNo = value;
				this.SendPropertyChanged("TumblingLotNo");
				this.OnTumblingLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhobicID", DbType="VarChar(50)")]
	public string PhobicID
	{
		get
		{
			return this._PhobicID;
		}
		set
		{
			if ((this._PhobicID != value))
			{
				this.OnPhobicIDChanging(value);
				this.SendPropertyChanging();
				this._PhobicID = value;
				this.SendPropertyChanged("PhobicID");
				this.OnPhobicIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(50)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LensCutLot", DbType="VarChar(50)")]
	public string LensCutLot
	{
		get
		{
			return this._LensCutLot;
		}
		set
		{
			if ((this._LensCutLot != value))
			{
				this.OnLensCutLotChanging(value);
				this.SendPropertyChanging();
				this._LensCutLot = value;
				this.SendPropertyChanged("LensCutLot");
				this.OnLensCutLotChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int")]
	public System.Nullable<int> TotalQuantity
	{
		get
		{
			return this._TotalQuantity;
		}
		set
		{
			if ((this._TotalQuantity != value))
			{
				this.OnTotalQuantityChanging(value);
				this.SendPropertyChanging();
				this._TotalQuantity = value;
				this.SendPropertyChanged("TotalQuantity");
				this.OnTotalQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tumbledby", DbType="VarChar(50)")]
	public string Tumbledby
	{
		get
		{
			return this._Tumbledby;
		}
		set
		{
			if ((this._Tumbledby != value))
			{
				this.OnTumbledbyChanging(value);
				this.SendPropertyChanging();
				this._Tumbledby = value;
				this.SendPropertyChanged("Tumbledby");
				this.OnTumbledbyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SO_MattTumbling")]
public partial class SO_MattTumbling : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingNo;
	
	private string _ModelNo;
	
	private string _JarNo;
	
	private string _Duration;
	
	private System.Nullable<decimal> _Power;
	
	private string _InspectedBy;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _Time;
	
	private string _Day;
	
	private string _SampleNo;
	
	private string _Status;
	
	private string _Remarks;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnJarNoChanging(string value);
    partial void OnJarNoChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnInspectedByChanging(string value);
    partial void OnInspectedByChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnSampleNoChanging(string value);
    partial void OnSampleNoChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
	
	public SO_MattTumbling()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(50)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JarNo", DbType="VarChar(50)")]
	public string JarNo
	{
		get
		{
			return this._JarNo;
		}
		set
		{
			if ((this._JarNo != value))
			{
				this.OnJarNoChanging(value);
				this.SendPropertyChanging();
				this._JarNo = value;
				this.SendPropertyChanged("JarNo");
				this.OnJarNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="VarChar(50)")]
	public string Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy", DbType="VarChar(50)")]
	public string InspectedBy
	{
		get
		{
			return this._InspectedBy;
		}
		set
		{
			if ((this._InspectedBy != value))
			{
				this.OnInspectedByChanging(value);
				this.SendPropertyChanging();
				this._InspectedBy = value;
				this.SendPropertyChanged("InspectedBy");
				this.OnInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(50)")]
	public string Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(50)")]
	public string Day
	{
		get
		{
			return this._Day;
		}
		set
		{
			if ((this._Day != value))
			{
				this.OnDayChanging(value);
				this.SendPropertyChanging();
				this._Day = value;
				this.SendPropertyChanged("Day");
				this.OnDayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo", DbType="VarChar(50)")]
	public string SampleNo
	{
		get
		{
			return this._SampleNo;
		}
		set
		{
			if ((this._SampleNo != value))
			{
				this.OnSampleNoChanging(value);
				this.SendPropertyChanging();
				this._SampleNo = value;
				this.SendPropertyChanged("SampleNo");
				this.OnSampleNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModelPower")]
public partial class ModelPower : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _GRFLotno;
	
	private string _TumblingLotno;
	
	private string _ModelNo;
	
	private System.Nullable<decimal> _Power;
	
	private string _JarNo;
	
	private string _Sample1Status;
	
	private string _Sample2Status;
	
	private string _Sample3Status;
	
	private string _Sample4Status;
	
	private string _Sample5Status;
	
	private string _Sample6Status;
	
	private string _Sample7Status;
	
	private string _Sample8Status;
	
	private string _Sample9Status;
	
	private string _Sample10Status;
	
	private System.Nullable<decimal> _Sample1Power;
	
	private System.Nullable<decimal> _Sample2Power;
	
	private System.Nullable<decimal> _Sample3Power;
	
	private System.Nullable<decimal> _Sample4Power;
	
	private System.Nullable<decimal> _Sample5Power;
	
	private System.Nullable<decimal> _Sample6Power;
	
	private System.Nullable<decimal> _Sample7Power;
	
	private System.Nullable<decimal> _Sample8Power;
	
	private System.Nullable<decimal> _Sample9Power;
	
	private System.Nullable<decimal> _Sample10Power;
	
	private string _ModelStatus;
	
	private string _PowerStatus;
	
	private string _ModelIns;
	
	private string _PowerIns;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGRFLotnoChanging(string value);
    partial void OnGRFLotnoChanged();
    partial void OnTumblingLotnoChanging(string value);
    partial void OnTumblingLotnoChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnJarNoChanging(string value);
    partial void OnJarNoChanged();
    partial void OnSample1StatusChanging(string value);
    partial void OnSample1StatusChanged();
    partial void OnSample2StatusChanging(string value);
    partial void OnSample2StatusChanged();
    partial void OnSample3StatusChanging(string value);
    partial void OnSample3StatusChanged();
    partial void OnSample4StatusChanging(string value);
    partial void OnSample4StatusChanged();
    partial void OnSample5StatusChanging(string value);
    partial void OnSample5StatusChanged();
    partial void OnSample6StatusChanging(string value);
    partial void OnSample6StatusChanged();
    partial void OnSample7StatusChanging(string value);
    partial void OnSample7StatusChanged();
    partial void OnSample8StatusChanging(string value);
    partial void OnSample8StatusChanged();
    partial void OnSample9StatusChanging(string value);
    partial void OnSample9StatusChanged();
    partial void OnSample10StatusChanging(string value);
    partial void OnSample10StatusChanged();
    partial void OnSample1PowerChanging(System.Nullable<decimal> value);
    partial void OnSample1PowerChanged();
    partial void OnSample2PowerChanging(System.Nullable<decimal> value);
    partial void OnSample2PowerChanged();
    partial void OnSample3PowerChanging(System.Nullable<decimal> value);
    partial void OnSample3PowerChanged();
    partial void OnSample4PowerChanging(System.Nullable<decimal> value);
    partial void OnSample4PowerChanged();
    partial void OnSample5PowerChanging(System.Nullable<decimal> value);
    partial void OnSample5PowerChanged();
    partial void OnSample6PowerChanging(System.Nullable<decimal> value);
    partial void OnSample6PowerChanged();
    partial void OnSample7PowerChanging(System.Nullable<decimal> value);
    partial void OnSample7PowerChanged();
    partial void OnSample8PowerChanging(System.Nullable<decimal> value);
    partial void OnSample8PowerChanged();
    partial void OnSample9PowerChanging(System.Nullable<decimal> value);
    partial void OnSample9PowerChanged();
    partial void OnSample10PowerChanging(System.Nullable<decimal> value);
    partial void OnSample10PowerChanged();
    partial void OnModelStatusChanging(string value);
    partial void OnModelStatusChanged();
    partial void OnPowerStatusChanging(string value);
    partial void OnPowerStatusChanged();
    partial void OnModelInsChanging(string value);
    partial void OnModelInsChanged();
    partial void OnPowerInsChanging(string value);
    partial void OnPowerInsChanged();
    #endregion
	
	public ModelPower()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRFLotno", DbType="VarChar(50)")]
	public string GRFLotno
	{
		get
		{
			return this._GRFLotno;
		}
		set
		{
			if ((this._GRFLotno != value))
			{
				this.OnGRFLotnoChanging(value);
				this.SendPropertyChanging();
				this._GRFLotno = value;
				this.SendPropertyChanged("GRFLotno");
				this.OnGRFLotnoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingLotno", DbType="VarChar(50)")]
	public string TumblingLotno
	{
		get
		{
			return this._TumblingLotno;
		}
		set
		{
			if ((this._TumblingLotno != value))
			{
				this.OnTumblingLotnoChanging(value);
				this.SendPropertyChanging();
				this._TumblingLotno = value;
				this.SendPropertyChanged("TumblingLotno");
				this.OnTumblingLotnoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(50)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JarNo", DbType="VarChar(50)")]
	public string JarNo
	{
		get
		{
			return this._JarNo;
		}
		set
		{
			if ((this._JarNo != value))
			{
				this.OnJarNoChanging(value);
				this.SendPropertyChanging();
				this._JarNo = value;
				this.SendPropertyChanged("JarNo");
				this.OnJarNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Status", DbType="NVarChar(50)")]
	public string Sample1Status
	{
		get
		{
			return this._Sample1Status;
		}
		set
		{
			if ((this._Sample1Status != value))
			{
				this.OnSample1StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample1Status = value;
				this.SendPropertyChanged("Sample1Status");
				this.OnSample1StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample2Status", DbType="NVarChar(50)")]
	public string Sample2Status
	{
		get
		{
			return this._Sample2Status;
		}
		set
		{
			if ((this._Sample2Status != value))
			{
				this.OnSample2StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample2Status = value;
				this.SendPropertyChanged("Sample2Status");
				this.OnSample2StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample3Status", DbType="NVarChar(50)")]
	public string Sample3Status
	{
		get
		{
			return this._Sample3Status;
		}
		set
		{
			if ((this._Sample3Status != value))
			{
				this.OnSample3StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample3Status = value;
				this.SendPropertyChanged("Sample3Status");
				this.OnSample3StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample4Status", DbType="NVarChar(50)")]
	public string Sample4Status
	{
		get
		{
			return this._Sample4Status;
		}
		set
		{
			if ((this._Sample4Status != value))
			{
				this.OnSample4StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample4Status = value;
				this.SendPropertyChanged("Sample4Status");
				this.OnSample4StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample5Status", DbType="NVarChar(50)")]
	public string Sample5Status
	{
		get
		{
			return this._Sample5Status;
		}
		set
		{
			if ((this._Sample5Status != value))
			{
				this.OnSample5StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample5Status = value;
				this.SendPropertyChanged("Sample5Status");
				this.OnSample5StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample6Status", DbType="NVarChar(50)")]
	public string Sample6Status
	{
		get
		{
			return this._Sample6Status;
		}
		set
		{
			if ((this._Sample6Status != value))
			{
				this.OnSample6StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample6Status = value;
				this.SendPropertyChanged("Sample6Status");
				this.OnSample6StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample7Status", DbType="NVarChar(50)")]
	public string Sample7Status
	{
		get
		{
			return this._Sample7Status;
		}
		set
		{
			if ((this._Sample7Status != value))
			{
				this.OnSample7StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample7Status = value;
				this.SendPropertyChanged("Sample7Status");
				this.OnSample7StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample8Status", DbType="NVarChar(50)")]
	public string Sample8Status
	{
		get
		{
			return this._Sample8Status;
		}
		set
		{
			if ((this._Sample8Status != value))
			{
				this.OnSample8StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample8Status = value;
				this.SendPropertyChanged("Sample8Status");
				this.OnSample8StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample9Status", DbType="NVarChar(50)")]
	public string Sample9Status
	{
		get
		{
			return this._Sample9Status;
		}
		set
		{
			if ((this._Sample9Status != value))
			{
				this.OnSample9StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample9Status = value;
				this.SendPropertyChanged("Sample9Status");
				this.OnSample9StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample10Status", DbType="NVarChar(50)")]
	public string Sample10Status
	{
		get
		{
			return this._Sample10Status;
		}
		set
		{
			if ((this._Sample10Status != value))
			{
				this.OnSample10StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample10Status = value;
				this.SendPropertyChanged("Sample10Status");
				this.OnSample10StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample1Power
	{
		get
		{
			return this._Sample1Power;
		}
		set
		{
			if ((this._Sample1Power != value))
			{
				this.OnSample1PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample1Power = value;
				this.SendPropertyChanged("Sample1Power");
				this.OnSample1PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample2Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample2Power
	{
		get
		{
			return this._Sample2Power;
		}
		set
		{
			if ((this._Sample2Power != value))
			{
				this.OnSample2PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample2Power = value;
				this.SendPropertyChanged("Sample2Power");
				this.OnSample2PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample3Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample3Power
	{
		get
		{
			return this._Sample3Power;
		}
		set
		{
			if ((this._Sample3Power != value))
			{
				this.OnSample3PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample3Power = value;
				this.SendPropertyChanged("Sample3Power");
				this.OnSample3PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample4Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample4Power
	{
		get
		{
			return this._Sample4Power;
		}
		set
		{
			if ((this._Sample4Power != value))
			{
				this.OnSample4PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample4Power = value;
				this.SendPropertyChanged("Sample4Power");
				this.OnSample4PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample5Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample5Power
	{
		get
		{
			return this._Sample5Power;
		}
		set
		{
			if ((this._Sample5Power != value))
			{
				this.OnSample5PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample5Power = value;
				this.SendPropertyChanged("Sample5Power");
				this.OnSample5PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample6Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample6Power
	{
		get
		{
			return this._Sample6Power;
		}
		set
		{
			if ((this._Sample6Power != value))
			{
				this.OnSample6PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample6Power = value;
				this.SendPropertyChanged("Sample6Power");
				this.OnSample6PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample7Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample7Power
	{
		get
		{
			return this._Sample7Power;
		}
		set
		{
			if ((this._Sample7Power != value))
			{
				this.OnSample7PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample7Power = value;
				this.SendPropertyChanged("Sample7Power");
				this.OnSample7PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample8Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample8Power
	{
		get
		{
			return this._Sample8Power;
		}
		set
		{
			if ((this._Sample8Power != value))
			{
				this.OnSample8PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample8Power = value;
				this.SendPropertyChanged("Sample8Power");
				this.OnSample8PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample9Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample9Power
	{
		get
		{
			return this._Sample9Power;
		}
		set
		{
			if ((this._Sample9Power != value))
			{
				this.OnSample9PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample9Power = value;
				this.SendPropertyChanged("Sample9Power");
				this.OnSample9PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample10Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Sample10Power
	{
		get
		{
			return this._Sample10Power;
		}
		set
		{
			if ((this._Sample10Power != value))
			{
				this.OnSample10PowerChanging(value);
				this.SendPropertyChanging();
				this._Sample10Power = value;
				this.SendPropertyChanged("Sample10Power");
				this.OnSample10PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelStatus", DbType="NVarChar(50)")]
	public string ModelStatus
	{
		get
		{
			return this._ModelStatus;
		}
		set
		{
			if ((this._ModelStatus != value))
			{
				this.OnModelStatusChanging(value);
				this.SendPropertyChanging();
				this._ModelStatus = value;
				this.SendPropertyChanged("ModelStatus");
				this.OnModelStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerStatus", DbType="NVarChar(50)")]
	public string PowerStatus
	{
		get
		{
			return this._PowerStatus;
		}
		set
		{
			if ((this._PowerStatus != value))
			{
				this.OnPowerStatusChanging(value);
				this.SendPropertyChanging();
				this._PowerStatus = value;
				this.SendPropertyChanged("PowerStatus");
				this.OnPowerStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelIns", DbType="VarChar(50)")]
	public string ModelIns
	{
		get
		{
			return this._ModelIns;
		}
		set
		{
			if ((this._ModelIns != value))
			{
				this.OnModelInsChanging(value);
				this.SendPropertyChanging();
				this._ModelIns = value;
				this.SendPropertyChanged("ModelIns");
				this.OnModelInsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerIns", DbType="VarChar(50)")]
	public string PowerIns
	{
		get
		{
			return this._PowerIns;
		}
		set
		{
			if ((this._PowerIns != value))
			{
				this.OnPowerInsChanging(value);
				this.SendPropertyChanging();
				this._PowerIns = value;
				this.SendPropertyChanged("PowerIns");
				this.OnPowerInsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TumblingQuantityDetails")]
public partial class TumblingQuantityDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingNo;
	
	private string _GlassyRecordRef;
	
	private System.Nullable<int> _RetumblingQty;
	
	private string _RetumblingNo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnGlassyRecordRefChanging(string value);
    partial void OnGlassyRecordRefChanged();
    partial void OnRetumblingQtyChanging(System.Nullable<int> value);
    partial void OnRetumblingQtyChanged();
    partial void OnRetumblingNoChanging(string value);
    partial void OnRetumblingNoChanged();
    #endregion
	
	public TumblingQuantityDetail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyRecordRef", DbType="VarChar(50)")]
	public string GlassyRecordRef
	{
		get
		{
			return this._GlassyRecordRef;
		}
		set
		{
			if ((this._GlassyRecordRef != value))
			{
				this.OnGlassyRecordRefChanging(value);
				this.SendPropertyChanging();
				this._GlassyRecordRef = value;
				this.SendPropertyChanged("GlassyRecordRef");
				this.OnGlassyRecordRefChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingQty", DbType="Int")]
	public System.Nullable<int> RetumblingQty
	{
		get
		{
			return this._RetumblingQty;
		}
		set
		{
			if ((this._RetumblingQty != value))
			{
				this.OnRetumblingQtyChanging(value);
				this.SendPropertyChanging();
				this._RetumblingQty = value;
				this.SendPropertyChanged("RetumblingQty");
				this.OnRetumblingQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingNo", DbType="VarChar(50)")]
	public string RetumblingNo
	{
		get
		{
			return this._RetumblingNo;
		}
		set
		{
			if ((this._RetumblingNo != value))
			{
				this.OnRetumblingNoChanging(value);
				this.SendPropertyChanging();
				this._RetumblingNo = value;
				this.SendPropertyChanged("RetumblingNo");
				this.OnRetumblingNoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MillingCleanedLens")]
public partial class MillingCleanedLen : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdNo;
	
	private string _LotNo;
	
	private System.Nullable<int> _InspectedQuantity;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _RejectedQty;
	
	private System.Nullable<int> _ESC;
	
	private System.Nullable<int> _SCR;
	
	private System.Nullable<int> _LB;
	
	private System.Nullable<int> _CHIP;
	
	private System.Nullable<int> _BURR;
	
	private System.Nullable<int> _THICK;
	
	private System.Nullable<int> _OTHERS;
	
	private System.Nullable<int> _OFFSET;
	
	private System.Nullable<int> _CUTTING;
	
	private System.Nullable<int> _TotalRejQty;
	
	private string _RejectionMTSNo;
	
	private string _Inspectedby;
	
	private string _Approvedby;
	
	private string _Shift;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _TumblingNo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNoChanging(int value);
    partial void OnIdNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnInspectedQuantityChanging(System.Nullable<int> value);
    partial void OnInspectedQuantityChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    partial void OnESCChanging(System.Nullable<int> value);
    partial void OnESCChanged();
    partial void OnSCRChanging(System.Nullable<int> value);
    partial void OnSCRChanged();
    partial void OnLBChanging(System.Nullable<int> value);
    partial void OnLBChanged();
    partial void OnCHIPChanging(System.Nullable<int> value);
    partial void OnCHIPChanged();
    partial void OnBURRChanging(System.Nullable<int> value);
    partial void OnBURRChanged();
    partial void OnTHICKChanging(System.Nullable<int> value);
    partial void OnTHICKChanged();
    partial void OnOTHERSChanging(System.Nullable<int> value);
    partial void OnOTHERSChanged();
    partial void OnOFFSETChanging(System.Nullable<int> value);
    partial void OnOFFSETChanged();
    partial void OnCUTTINGChanging(System.Nullable<int> value);
    partial void OnCUTTINGChanged();
    partial void OnTotalRejQtyChanging(System.Nullable<int> value);
    partial void OnTotalRejQtyChanged();
    partial void OnRejectionMTSNoChanging(string value);
    partial void OnRejectionMTSNoChanged();
    partial void OnInspectedbyChanging(string value);
    partial void OnInspectedbyChanged();
    partial void OnApprovedbyChanging(string value);
    partial void OnApprovedbyChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    #endregion
	
	public MillingCleanedLen()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
		set
		{
			if ((this._IdNo != value))
			{
				this.OnIdNoChanging(value);
				this.SendPropertyChanging();
				this._IdNo = value;
				this.SendPropertyChanged("IdNo");
				this.OnIdNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedQuantity", DbType="Int")]
	public System.Nullable<int> InspectedQuantity
	{
		get
		{
			return this._InspectedQuantity;
		}
		set
		{
			if ((this._InspectedQuantity != value))
			{
				this.OnInspectedQuantityChanging(value);
				this.SendPropertyChanging();
				this._InspectedQuantity = value;
				this.SendPropertyChanged("InspectedQuantity");
				this.OnInspectedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESC", DbType="Int")]
	public System.Nullable<int> ESC
	{
		get
		{
			return this._ESC;
		}
		set
		{
			if ((this._ESC != value))
			{
				this.OnESCChanging(value);
				this.SendPropertyChanging();
				this._ESC = value;
				this.SendPropertyChanged("ESC");
				this.OnESCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCR", DbType="Int")]
	public System.Nullable<int> SCR
	{
		get
		{
			return this._SCR;
		}
		set
		{
			if ((this._SCR != value))
			{
				this.OnSCRChanging(value);
				this.SendPropertyChanging();
				this._SCR = value;
				this.SendPropertyChanged("SCR");
				this.OnSCRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LB", DbType="Int")]
	public System.Nullable<int> LB
	{
		get
		{
			return this._LB;
		}
		set
		{
			if ((this._LB != value))
			{
				this.OnLBChanging(value);
				this.SendPropertyChanging();
				this._LB = value;
				this.SendPropertyChanged("LB");
				this.OnLBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHIP", DbType="Int")]
	public System.Nullable<int> CHIP
	{
		get
		{
			return this._CHIP;
		}
		set
		{
			if ((this._CHIP != value))
			{
				this.OnCHIPChanging(value);
				this.SendPropertyChanging();
				this._CHIP = value;
				this.SendPropertyChanged("CHIP");
				this.OnCHIPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BURR", DbType="Int")]
	public System.Nullable<int> BURR
	{
		get
		{
			return this._BURR;
		}
		set
		{
			if ((this._BURR != value))
			{
				this.OnBURRChanging(value);
				this.SendPropertyChanging();
				this._BURR = value;
				this.SendPropertyChanged("BURR");
				this.OnBURRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THICK", DbType="Int")]
	public System.Nullable<int> THICK
	{
		get
		{
			return this._THICK;
		}
		set
		{
			if ((this._THICK != value))
			{
				this.OnTHICKChanging(value);
				this.SendPropertyChanging();
				this._THICK = value;
				this.SendPropertyChanged("THICK");
				this.OnTHICKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTHERS", DbType="Int")]
	public System.Nullable<int> OTHERS
	{
		get
		{
			return this._OTHERS;
		}
		set
		{
			if ((this._OTHERS != value))
			{
				this.OnOTHERSChanging(value);
				this.SendPropertyChanging();
				this._OTHERS = value;
				this.SendPropertyChanged("OTHERS");
				this.OnOTHERSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFSET", DbType="Int")]
	public System.Nullable<int> OFFSET
	{
		get
		{
			return this._OFFSET;
		}
		set
		{
			if ((this._OFFSET != value))
			{
				this.OnOFFSETChanging(value);
				this.SendPropertyChanging();
				this._OFFSET = value;
				this.SendPropertyChanged("OFFSET");
				this.OnOFFSETChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUTTING", DbType="Int")]
	public System.Nullable<int> CUTTING
	{
		get
		{
			return this._CUTTING;
		}
		set
		{
			if ((this._CUTTING != value))
			{
				this.OnCUTTINGChanging(value);
				this.SendPropertyChanging();
				this._CUTTING = value;
				this.SendPropertyChanged("CUTTING");
				this.OnCUTTINGChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRejQty", DbType="Int")]
	public System.Nullable<int> TotalRejQty
	{
		get
		{
			return this._TotalRejQty;
		}
		set
		{
			if ((this._TotalRejQty != value))
			{
				this.OnTotalRejQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalRejQty = value;
				this.SendPropertyChanged("TotalRejQty");
				this.OnTotalRejQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectionMTSNo", DbType="VarChar(50)")]
	public string RejectionMTSNo
	{
		get
		{
			return this._RejectionMTSNo;
		}
		set
		{
			if ((this._RejectionMTSNo != value))
			{
				this.OnRejectionMTSNoChanging(value);
				this.SendPropertyChanging();
				this._RejectionMTSNo = value;
				this.SendPropertyChanged("RejectionMTSNo");
				this.OnRejectionMTSNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inspectedby", DbType="VarChar(50)")]
	public string Inspectedby
	{
		get
		{
			return this._Inspectedby;
		}
		set
		{
			if ((this._Inspectedby != value))
			{
				this.OnInspectedbyChanging(value);
				this.SendPropertyChanging();
				this._Inspectedby = value;
				this.SendPropertyChanged("Inspectedby");
				this.OnInspectedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approvedby", DbType="VarChar(50)")]
	public string Approvedby
	{
		get
		{
			return this._Approvedby;
		}
		set
		{
			if ((this._Approvedby != value))
			{
				this.OnApprovedbyChanging(value);
				this.SendPropertyChanging();
				this._Approvedby = value;
				this.SendPropertyChanged("Approvedby");
				this.OnApprovedbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FirstRetumblingReport")]
public partial class FirstRetumblingReport : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _GlassyNo;
	
	private string _TumblingNo;
	
	private string _Model;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _TotalQty;
	
	private System.Nullable<int> _AcceptedQty;
	
	private System.Nullable<int> _RetumblingQty;
	
	private System.Nullable<int> _RejectedQty;
	
	private string _Shift;
	
	private string _JarNo;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _Remarks;
	
	private string _ApprovedBy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlassyNoChanging(string value);
    partial void OnGlassyNoChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnAcceptedQtyChanging(System.Nullable<int> value);
    partial void OnAcceptedQtyChanged();
    partial void OnRetumblingQtyChanging(System.Nullable<int> value);
    partial void OnRetumblingQtyChanged();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnJarNoChanging(string value);
    partial void OnJarNoChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    #endregion
	
	public FirstRetumblingReport()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyNo", DbType="VarChar(50)")]
	public string GlassyNo
	{
		get
		{
			return this._GlassyNo;
		}
		set
		{
			if ((this._GlassyNo != value))
			{
				this.OnGlassyNoChanging(value);
				this.SendPropertyChanging();
				this._GlassyNo = value;
				this.SendPropertyChanged("GlassyNo");
				this.OnGlassyNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
	public System.Nullable<int> TotalQty
	{
		get
		{
			return this._TotalQty;
		}
		set
		{
			if ((this._TotalQty != value))
			{
				this.OnTotalQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalQty = value;
				this.SendPropertyChanged("TotalQty");
				this.OnTotalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty", DbType="Int")]
	public System.Nullable<int> AcceptedQty
	{
		get
		{
			return this._AcceptedQty;
		}
		set
		{
			if ((this._AcceptedQty != value))
			{
				this.OnAcceptedQtyChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQty = value;
				this.SendPropertyChanged("AcceptedQty");
				this.OnAcceptedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingQty", DbType="Int")]
	public System.Nullable<int> RetumblingQty
	{
		get
		{
			return this._RetumblingQty;
		}
		set
		{
			if ((this._RetumblingQty != value))
			{
				this.OnRetumblingQtyChanging(value);
				this.SendPropertyChanging();
				this._RetumblingQty = value;
				this.SendPropertyChanged("RetumblingQty");
				this.OnRetumblingQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="NVarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JarNo", DbType="VarChar(50)")]
	public string JarNo
	{
		get
		{
			return this._JarNo;
		}
		set
		{
			if ((this._JarNo != value))
			{
				this.OnJarNoChanging(value);
				this.SendPropertyChanging();
				this._JarNo = value;
				this.SendPropertyChanged("JarNo");
				this.OnJarNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="VarChar(50)")]
	public string ApprovedBy
	{
		get
		{
			return this._ApprovedBy;
		}
		set
		{
			if ((this._ApprovedBy != value))
			{
				this.OnApprovedByChanging(value);
				this.SendPropertyChanging();
				this._ApprovedBy = value;
				this.SendPropertyChanged("ApprovedBy");
				this.OnApprovedByChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackingReport")]
public partial class PackingReport : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _GlassyRefNo;
	
	private string _TumblingLotNo;
	
	private string _Model;
	
	private System.Nullable<decimal> _Power;
	
	private string _JarNo;
	
	private System.Nullable<int> _TotalQty;
	
	private System.Nullable<int> _AcceptedQuantity;
	
	private System.Nullable<int> _RetumblingQty;
	
	private System.Nullable<int> _RejectedQty;
	
	private string _Remarks;
	
	private string _PackedBy;
	
	private string _ApprovedBy;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlassyRefNoChanging(string value);
    partial void OnGlassyRefNoChanged();
    partial void OnTumblingLotNoChanging(string value);
    partial void OnTumblingLotNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnJarNoChanging(string value);
    partial void OnJarNoChanged();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnAcceptedQuantityChanging(System.Nullable<int> value);
    partial void OnAcceptedQuantityChanged();
    partial void OnRetumblingQtyChanging(System.Nullable<int> value);
    partial void OnRetumblingQtyChanged();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPackedByChanging(string value);
    partial void OnPackedByChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public PackingReport()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyRefNo", DbType="VarChar(50)")]
	public string GlassyRefNo
	{
		get
		{
			return this._GlassyRefNo;
		}
		set
		{
			if ((this._GlassyRefNo != value))
			{
				this.OnGlassyRefNoChanging(value);
				this.SendPropertyChanging();
				this._GlassyRefNo = value;
				this.SendPropertyChanged("GlassyRefNo");
				this.OnGlassyRefNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingLotNo", DbType="VarChar(50)")]
	public string TumblingLotNo
	{
		get
		{
			return this._TumblingLotNo;
		}
		set
		{
			if ((this._TumblingLotNo != value))
			{
				this.OnTumblingLotNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingLotNo = value;
				this.SendPropertyChanged("TumblingLotNo");
				this.OnTumblingLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JarNo", DbType="VarChar(50)")]
	public string JarNo
	{
		get
		{
			return this._JarNo;
		}
		set
		{
			if ((this._JarNo != value))
			{
				this.OnJarNoChanging(value);
				this.SendPropertyChanging();
				this._JarNo = value;
				this.SendPropertyChanged("JarNo");
				this.OnJarNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
	public System.Nullable<int> TotalQty
	{
		get
		{
			return this._TotalQty;
		}
		set
		{
			if ((this._TotalQty != value))
			{
				this.OnTotalQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalQty = value;
				this.SendPropertyChanged("TotalQty");
				this.OnTotalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQuantity", DbType="Int")]
	public System.Nullable<int> AcceptedQuantity
	{
		get
		{
			return this._AcceptedQuantity;
		}
		set
		{
			if ((this._AcceptedQuantity != value))
			{
				this.OnAcceptedQuantityChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQuantity = value;
				this.SendPropertyChanged("AcceptedQuantity");
				this.OnAcceptedQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingQty", DbType="Int")]
	public System.Nullable<int> RetumblingQty
	{
		get
		{
			return this._RetumblingQty;
		}
		set
		{
			if ((this._RetumblingQty != value))
			{
				this.OnRetumblingQtyChanging(value);
				this.SendPropertyChanging();
				this._RetumblingQty = value;
				this.SendPropertyChanged("RetumblingQty");
				this.OnRetumblingQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackedBy", DbType="VarChar(50)")]
	public string PackedBy
	{
		get
		{
			return this._PackedBy;
		}
		set
		{
			if ((this._PackedBy != value))
			{
				this.OnPackedByChanging(value);
				this.SendPropertyChanging();
				this._PackedBy = value;
				this.SendPropertyChanged("PackedBy");
				this.OnPackedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="VarChar(50)")]
	public string ApprovedBy
	{
		get
		{
			return this._ApprovedBy;
		}
		set
		{
			if ((this._ApprovedBy != value))
			{
				this.OnApprovedByChanging(value);
				this.SendPropertyChanging();
				this._ApprovedBy = value;
				this.SendPropertyChanged("ApprovedBy");
				this.OnApprovedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PowerSegregationTable")]
public partial class PowerSegregationTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingNo;
	
	private string _RetumblingNo1;
	
	private string _RetumblingNo2;
	
	private string _RetumblingNo3;
	
	private System.Nullable<int> _RecievedQty;
	
	private System.Nullable<int> _ReceivedQty1;
	
	private System.Nullable<int> _ReceivedQty2;
	
	private System.Nullable<int> _ReceivedQty3;
	
	private System.Nullable<int> _AcceptedQty;
	
	private System.Nullable<int> _AcceptedQty1;
	
	private System.Nullable<int> _AcceptedQty2;
	
	private System.Nullable<int> _AcceptedQty3;
	
	private System.Nullable<int> _RejectedQty;
	
	private System.Nullable<int> _RejectedQty1;
	
	private System.Nullable<int> _RejectedQty2;
	
	private System.Nullable<int> _RejectedQty3;
	
	private string _Resolution;
	
	private string _Resolution1;
	
	private string _Resolution2;
	
	private string _Resolution3;
	
	private System.Nullable<int> _TotalQty;
	
	private System.Nullable<int> _TotalQty1;
	
	private System.Nullable<int> _TotalQty2;
	
	private System.Nullable<int> _TotalQty3;
	
	private string _Remarks;
	
	private string _Remarks1;
	
	private string _Remarks2;
	
	private string _Remarks3;
	
	private string _InspectedBy;
	
	private string _InspectedBy1;
	
	private string _InspectedBy2;
	
	private string _InspectedBy3;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<System.DateTime> _Date1;
	
	private System.Nullable<System.DateTime> _Date2;
	
	private System.Nullable<System.DateTime> _Date3;
	
	private System.Nullable<int> _Flag;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnRetumblingNo1Changing(string value);
    partial void OnRetumblingNo1Changed();
    partial void OnRetumblingNo2Changing(string value);
    partial void OnRetumblingNo2Changed();
    partial void OnRetumblingNo3Changing(string value);
    partial void OnRetumblingNo3Changed();
    partial void OnRecievedQtyChanging(System.Nullable<int> value);
    partial void OnRecievedQtyChanged();
    partial void OnReceivedQty1Changing(System.Nullable<int> value);
    partial void OnReceivedQty1Changed();
    partial void OnReceivedQty2Changing(System.Nullable<int> value);
    partial void OnReceivedQty2Changed();
    partial void OnReceivedQty3Changing(System.Nullable<int> value);
    partial void OnReceivedQty3Changed();
    partial void OnAcceptedQtyChanging(System.Nullable<int> value);
    partial void OnAcceptedQtyChanged();
    partial void OnAcceptedQty1Changing(System.Nullable<int> value);
    partial void OnAcceptedQty1Changed();
    partial void OnAcceptedQty2Changing(System.Nullable<int> value);
    partial void OnAcceptedQty2Changed();
    partial void OnAcceptedQty3Changing(System.Nullable<int> value);
    partial void OnAcceptedQty3Changed();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    partial void OnRejectedQty1Changing(System.Nullable<int> value);
    partial void OnRejectedQty1Changed();
    partial void OnRejectedQty2Changing(System.Nullable<int> value);
    partial void OnRejectedQty2Changed();
    partial void OnRejectedQty3Changing(System.Nullable<int> value);
    partial void OnRejectedQty3Changed();
    partial void OnResolutionChanging(string value);
    partial void OnResolutionChanged();
    partial void OnResolution1Changing(string value);
    partial void OnResolution1Changed();
    partial void OnResolution2Changing(string value);
    partial void OnResolution2Changed();
    partial void OnResolution3Changing(string value);
    partial void OnResolution3Changed();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnTotalQty1Changing(System.Nullable<int> value);
    partial void OnTotalQty1Changed();
    partial void OnTotalQty2Changing(System.Nullable<int> value);
    partial void OnTotalQty2Changed();
    partial void OnTotalQty3Changing(System.Nullable<int> value);
    partial void OnTotalQty3Changed();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnRemarks1Changing(string value);
    partial void OnRemarks1Changed();
    partial void OnRemarks2Changing(string value);
    partial void OnRemarks2Changed();
    partial void OnRemarks3Changing(string value);
    partial void OnRemarks3Changed();
    partial void OnInspectedByChanging(string value);
    partial void OnInspectedByChanged();
    partial void OnInspectedBy1Changing(string value);
    partial void OnInspectedBy1Changed();
    partial void OnInspectedBy2Changing(string value);
    partial void OnInspectedBy2Changed();
    partial void OnInspectedBy3Changing(string value);
    partial void OnInspectedBy3Changed();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnDate1Changed();
    partial void OnDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnDate2Changed();
    partial void OnDate3Changing(System.Nullable<System.DateTime> value);
    partial void OnDate3Changed();
    partial void OnFlagChanging(System.Nullable<int> value);
    partial void OnFlagChanged();
    #endregion
	
	public PowerSegregationTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingNo1", DbType="VarChar(50)")]
	public string RetumblingNo1
	{
		get
		{
			return this._RetumblingNo1;
		}
		set
		{
			if ((this._RetumblingNo1 != value))
			{
				this.OnRetumblingNo1Changing(value);
				this.SendPropertyChanging();
				this._RetumblingNo1 = value;
				this.SendPropertyChanged("RetumblingNo1");
				this.OnRetumblingNo1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingNo2", DbType="VarChar(50)")]
	public string RetumblingNo2
	{
		get
		{
			return this._RetumblingNo2;
		}
		set
		{
			if ((this._RetumblingNo2 != value))
			{
				this.OnRetumblingNo2Changing(value);
				this.SendPropertyChanging();
				this._RetumblingNo2 = value;
				this.SendPropertyChanged("RetumblingNo2");
				this.OnRetumblingNo2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingNo3", DbType="VarChar(50)")]
	public string RetumblingNo3
	{
		get
		{
			return this._RetumblingNo3;
		}
		set
		{
			if ((this._RetumblingNo3 != value))
			{
				this.OnRetumblingNo3Changing(value);
				this.SendPropertyChanging();
				this._RetumblingNo3 = value;
				this.SendPropertyChanged("RetumblingNo3");
				this.OnRetumblingNo3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedQty", DbType="Int")]
	public System.Nullable<int> RecievedQty
	{
		get
		{
			return this._RecievedQty;
		}
		set
		{
			if ((this._RecievedQty != value))
			{
				this.OnRecievedQtyChanging(value);
				this.SendPropertyChanging();
				this._RecievedQty = value;
				this.SendPropertyChanged("RecievedQty");
				this.OnRecievedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty1", DbType="Int")]
	public System.Nullable<int> ReceivedQty1
	{
		get
		{
			return this._ReceivedQty1;
		}
		set
		{
			if ((this._ReceivedQty1 != value))
			{
				this.OnReceivedQty1Changing(value);
				this.SendPropertyChanging();
				this._ReceivedQty1 = value;
				this.SendPropertyChanged("ReceivedQty1");
				this.OnReceivedQty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty2", DbType="Int")]
	public System.Nullable<int> ReceivedQty2
	{
		get
		{
			return this._ReceivedQty2;
		}
		set
		{
			if ((this._ReceivedQty2 != value))
			{
				this.OnReceivedQty2Changing(value);
				this.SendPropertyChanging();
				this._ReceivedQty2 = value;
				this.SendPropertyChanged("ReceivedQty2");
				this.OnReceivedQty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty3", DbType="Int")]
	public System.Nullable<int> ReceivedQty3
	{
		get
		{
			return this._ReceivedQty3;
		}
		set
		{
			if ((this._ReceivedQty3 != value))
			{
				this.OnReceivedQty3Changing(value);
				this.SendPropertyChanging();
				this._ReceivedQty3 = value;
				this.SendPropertyChanged("ReceivedQty3");
				this.OnReceivedQty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty", DbType="Int")]
	public System.Nullable<int> AcceptedQty
	{
		get
		{
			return this._AcceptedQty;
		}
		set
		{
			if ((this._AcceptedQty != value))
			{
				this.OnAcceptedQtyChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQty = value;
				this.SendPropertyChanged("AcceptedQty");
				this.OnAcceptedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty1", DbType="Int")]
	public System.Nullable<int> AcceptedQty1
	{
		get
		{
			return this._AcceptedQty1;
		}
		set
		{
			if ((this._AcceptedQty1 != value))
			{
				this.OnAcceptedQty1Changing(value);
				this.SendPropertyChanging();
				this._AcceptedQty1 = value;
				this.SendPropertyChanged("AcceptedQty1");
				this.OnAcceptedQty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty2", DbType="Int")]
	public System.Nullable<int> AcceptedQty2
	{
		get
		{
			return this._AcceptedQty2;
		}
		set
		{
			if ((this._AcceptedQty2 != value))
			{
				this.OnAcceptedQty2Changing(value);
				this.SendPropertyChanging();
				this._AcceptedQty2 = value;
				this.SendPropertyChanged("AcceptedQty2");
				this.OnAcceptedQty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty3", DbType="Int")]
	public System.Nullable<int> AcceptedQty3
	{
		get
		{
			return this._AcceptedQty3;
		}
		set
		{
			if ((this._AcceptedQty3 != value))
			{
				this.OnAcceptedQty3Changing(value);
				this.SendPropertyChanging();
				this._AcceptedQty3 = value;
				this.SendPropertyChanged("AcceptedQty3");
				this.OnAcceptedQty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty1", DbType="Int")]
	public System.Nullable<int> RejectedQty1
	{
		get
		{
			return this._RejectedQty1;
		}
		set
		{
			if ((this._RejectedQty1 != value))
			{
				this.OnRejectedQty1Changing(value);
				this.SendPropertyChanging();
				this._RejectedQty1 = value;
				this.SendPropertyChanged("RejectedQty1");
				this.OnRejectedQty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty2", DbType="Int")]
	public System.Nullable<int> RejectedQty2
	{
		get
		{
			return this._RejectedQty2;
		}
		set
		{
			if ((this._RejectedQty2 != value))
			{
				this.OnRejectedQty2Changing(value);
				this.SendPropertyChanging();
				this._RejectedQty2 = value;
				this.SendPropertyChanged("RejectedQty2");
				this.OnRejectedQty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty3", DbType="Int")]
	public System.Nullable<int> RejectedQty3
	{
		get
		{
			return this._RejectedQty3;
		}
		set
		{
			if ((this._RejectedQty3 != value))
			{
				this.OnRejectedQty3Changing(value);
				this.SendPropertyChanging();
				this._RejectedQty3 = value;
				this.SendPropertyChanged("RejectedQty3");
				this.OnRejectedQty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution", DbType="VarChar(50)")]
	public string Resolution
	{
		get
		{
			return this._Resolution;
		}
		set
		{
			if ((this._Resolution != value))
			{
				this.OnResolutionChanging(value);
				this.SendPropertyChanging();
				this._Resolution = value;
				this.SendPropertyChanged("Resolution");
				this.OnResolutionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution1", DbType="VarChar(50)")]
	public string Resolution1
	{
		get
		{
			return this._Resolution1;
		}
		set
		{
			if ((this._Resolution1 != value))
			{
				this.OnResolution1Changing(value);
				this.SendPropertyChanging();
				this._Resolution1 = value;
				this.SendPropertyChanged("Resolution1");
				this.OnResolution1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution2", DbType="VarChar(50)")]
	public string Resolution2
	{
		get
		{
			return this._Resolution2;
		}
		set
		{
			if ((this._Resolution2 != value))
			{
				this.OnResolution2Changing(value);
				this.SendPropertyChanging();
				this._Resolution2 = value;
				this.SendPropertyChanged("Resolution2");
				this.OnResolution2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution3", DbType="VarChar(50)")]
	public string Resolution3
	{
		get
		{
			return this._Resolution3;
		}
		set
		{
			if ((this._Resolution3 != value))
			{
				this.OnResolution3Changing(value);
				this.SendPropertyChanging();
				this._Resolution3 = value;
				this.SendPropertyChanged("Resolution3");
				this.OnResolution3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
	public System.Nullable<int> TotalQty
	{
		get
		{
			return this._TotalQty;
		}
		set
		{
			if ((this._TotalQty != value))
			{
				this.OnTotalQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalQty = value;
				this.SendPropertyChanged("TotalQty");
				this.OnTotalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty1", DbType="Int")]
	public System.Nullable<int> TotalQty1
	{
		get
		{
			return this._TotalQty1;
		}
		set
		{
			if ((this._TotalQty1 != value))
			{
				this.OnTotalQty1Changing(value);
				this.SendPropertyChanging();
				this._TotalQty1 = value;
				this.SendPropertyChanged("TotalQty1");
				this.OnTotalQty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty2", DbType="Int")]
	public System.Nullable<int> TotalQty2
	{
		get
		{
			return this._TotalQty2;
		}
		set
		{
			if ((this._TotalQty2 != value))
			{
				this.OnTotalQty2Changing(value);
				this.SendPropertyChanging();
				this._TotalQty2 = value;
				this.SendPropertyChanged("TotalQty2");
				this.OnTotalQty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty3", DbType="Int")]
	public System.Nullable<int> TotalQty3
	{
		get
		{
			return this._TotalQty3;
		}
		set
		{
			if ((this._TotalQty3 != value))
			{
				this.OnTotalQty3Changing(value);
				this.SendPropertyChanging();
				this._TotalQty3 = value;
				this.SendPropertyChanged("TotalQty3");
				this.OnTotalQty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks1", DbType="VarChar(50)")]
	public string Remarks1
	{
		get
		{
			return this._Remarks1;
		}
		set
		{
			if ((this._Remarks1 != value))
			{
				this.OnRemarks1Changing(value);
				this.SendPropertyChanging();
				this._Remarks1 = value;
				this.SendPropertyChanged("Remarks1");
				this.OnRemarks1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks2", DbType="VarChar(50)")]
	public string Remarks2
	{
		get
		{
			return this._Remarks2;
		}
		set
		{
			if ((this._Remarks2 != value))
			{
				this.OnRemarks2Changing(value);
				this.SendPropertyChanging();
				this._Remarks2 = value;
				this.SendPropertyChanged("Remarks2");
				this.OnRemarks2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks3", DbType="VarChar(50)")]
	public string Remarks3
	{
		get
		{
			return this._Remarks3;
		}
		set
		{
			if ((this._Remarks3 != value))
			{
				this.OnRemarks3Changing(value);
				this.SendPropertyChanging();
				this._Remarks3 = value;
				this.SendPropertyChanged("Remarks3");
				this.OnRemarks3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy", DbType="VarChar(50)")]
	public string InspectedBy
	{
		get
		{
			return this._InspectedBy;
		}
		set
		{
			if ((this._InspectedBy != value))
			{
				this.OnInspectedByChanging(value);
				this.SendPropertyChanging();
				this._InspectedBy = value;
				this.SendPropertyChanged("InspectedBy");
				this.OnInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy1", DbType="VarChar(50)")]
	public string InspectedBy1
	{
		get
		{
			return this._InspectedBy1;
		}
		set
		{
			if ((this._InspectedBy1 != value))
			{
				this.OnInspectedBy1Changing(value);
				this.SendPropertyChanging();
				this._InspectedBy1 = value;
				this.SendPropertyChanged("InspectedBy1");
				this.OnInspectedBy1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy2", DbType="VarChar(50)")]
	public string InspectedBy2
	{
		get
		{
			return this._InspectedBy2;
		}
		set
		{
			if ((this._InspectedBy2 != value))
			{
				this.OnInspectedBy2Changing(value);
				this.SendPropertyChanging();
				this._InspectedBy2 = value;
				this.SendPropertyChanged("InspectedBy2");
				this.OnInspectedBy2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy3", DbType="VarChar(50)")]
	public string InspectedBy3
	{
		get
		{
			return this._InspectedBy3;
		}
		set
		{
			if ((this._InspectedBy3 != value))
			{
				this.OnInspectedBy3Changing(value);
				this.SendPropertyChanging();
				this._InspectedBy3 = value;
				this.SendPropertyChanged("InspectedBy3");
				this.OnInspectedBy3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date1", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date1
	{
		get
		{
			return this._Date1;
		}
		set
		{
			if ((this._Date1 != value))
			{
				this.OnDate1Changing(value);
				this.SendPropertyChanging();
				this._Date1 = value;
				this.SendPropertyChanged("Date1");
				this.OnDate1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date2", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date2
	{
		get
		{
			return this._Date2;
		}
		set
		{
			if ((this._Date2 != value))
			{
				this.OnDate2Changing(value);
				this.SendPropertyChanging();
				this._Date2 = value;
				this.SendPropertyChanged("Date2");
				this.OnDate2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date3", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date3
	{
		get
		{
			return this._Date3;
		}
		set
		{
			if ((this._Date3 != value))
			{
				this.OnDate3Changing(value);
				this.SendPropertyChanging();
				this._Date3 = value;
				this.SendPropertyChanged("Date3");
				this.OnDate3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Int")]
	public System.Nullable<int> Flag
	{
		get
		{
			return this._Flag;
		}
		set
		{
			if ((this._Flag != value))
			{
				this.OnFlagChanging(value);
				this.SendPropertyChanging();
				this._Flag = value;
				this.SendPropertyChanged("Flag");
				this.OnFlagChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PowerSegregationChild")]
public partial class PowerSegregationChild : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _TumblingNo;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _Qty;
	
	private string _GlassyRecordRef;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnGlassyRecordRefChanging(string value);
    partial void OnGlassyRecordRefChanged();
    #endregion
	
	public PowerSegregationChild()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
	public System.Nullable<int> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyRecordRef", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string GlassyRecordRef
	{
		get
		{
			return this._GlassyRecordRef;
		}
		set
		{
			if ((this._GlassyRecordRef != value))
			{
				this.OnGlassyRecordRefChanging(value);
				this.SendPropertyChanging();
				this._GlassyRecordRef = value;
				this.SendPropertyChanged("GlassyRecordRef");
				this.OnGlassyRecordRefChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LensWiping")]
public partial class LensWiping : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _GlassyNo;
	
	private string _Model;
	
	private System.Nullable<int> _TotalQuantity;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _ReceivedQty;
	
	private System.Nullable<int> _ProgressingQty;
	
	private System.Nullable<int> _BalanceQty;
	
	private System.Nullable<int> _AcceptedQty;
	
	private System.Nullable<int> _RejectedQty;
	
	private string _TumblingNo;
	
	private string _WipingBy;
	
	private string _Remarks;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlassyNoChanging(string value);
    partial void OnGlassyNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnTotalQuantityChanging(System.Nullable<int> value);
    partial void OnTotalQuantityChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnReceivedQtyChanging(System.Nullable<int> value);
    partial void OnReceivedQtyChanged();
    partial void OnProgressingQtyChanging(System.Nullable<int> value);
    partial void OnProgressingQtyChanged();
    partial void OnBalanceQtyChanging(System.Nullable<int> value);
    partial void OnBalanceQtyChanged();
    partial void OnAcceptedQtyChanging(System.Nullable<int> value);
    partial void OnAcceptedQtyChanged();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnWipingByChanging(string value);
    partial void OnWipingByChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public LensWiping()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyNo", DbType="VarChar(50)")]
	public string GlassyNo
	{
		get
		{
			return this._GlassyNo;
		}
		set
		{
			if ((this._GlassyNo != value))
			{
				this.OnGlassyNoChanging(value);
				this.SendPropertyChanging();
				this._GlassyNo = value;
				this.SendPropertyChanged("GlassyNo");
				this.OnGlassyNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int")]
	public System.Nullable<int> TotalQuantity
	{
		get
		{
			return this._TotalQuantity;
		}
		set
		{
			if ((this._TotalQuantity != value))
			{
				this.OnTotalQuantityChanging(value);
				this.SendPropertyChanging();
				this._TotalQuantity = value;
				this.SendPropertyChanged("TotalQuantity");
				this.OnTotalQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty", DbType="Int")]
	public System.Nullable<int> ReceivedQty
	{
		get
		{
			return this._ReceivedQty;
		}
		set
		{
			if ((this._ReceivedQty != value))
			{
				this.OnReceivedQtyChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQty = value;
				this.SendPropertyChanged("ReceivedQty");
				this.OnReceivedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressingQty", DbType="Int")]
	public System.Nullable<int> ProgressingQty
	{
		get
		{
			return this._ProgressingQty;
		}
		set
		{
			if ((this._ProgressingQty != value))
			{
				this.OnProgressingQtyChanging(value);
				this.SendPropertyChanging();
				this._ProgressingQty = value;
				this.SendPropertyChanged("ProgressingQty");
				this.OnProgressingQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQty", DbType="Int")]
	public System.Nullable<int> BalanceQty
	{
		get
		{
			return this._BalanceQty;
		}
		set
		{
			if ((this._BalanceQty != value))
			{
				this.OnBalanceQtyChanging(value);
				this.SendPropertyChanging();
				this._BalanceQty = value;
				this.SendPropertyChanged("BalanceQty");
				this.OnBalanceQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty", DbType="Int")]
	public System.Nullable<int> AcceptedQty
	{
		get
		{
			return this._AcceptedQty;
		}
		set
		{
			if ((this._AcceptedQty != value))
			{
				this.OnAcceptedQtyChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQty = value;
				this.SendPropertyChanged("AcceptedQty");
				this.OnAcceptedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WipingBy", DbType="VarChar(50)")]
	public string WipingBy
	{
		get
		{
			return this._WipingBy;
		}
		set
		{
			if ((this._WipingBy != value))
			{
				this.OnWipingByChanging(value);
				this.SendPropertyChanging();
				this._WipingBy = value;
				this.SendPropertyChanged("WipingBy");
				this.OnWipingByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pick_Packing")]
public partial class Pick_Packing : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _GlassyNo;
	
	private string _Model;
	
	private System.Nullable<int> _TotalQuantity;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _ReceivedQty;
	
	private System.Nullable<int> _ProgressingQty;
	
	private System.Nullable<int> _BalanceQty;
	
	private System.Nullable<int> _AcceptedQty;
	
	private System.Nullable<int> _RejectedQty;
	
	private string _TumblingNo;
	
	private string _PickpackingBy;
	
	private string _Remarks;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlassyNoChanging(string value);
    partial void OnGlassyNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnTotalQuantityChanging(System.Nullable<int> value);
    partial void OnTotalQuantityChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnReceivedQtyChanging(System.Nullable<int> value);
    partial void OnReceivedQtyChanged();
    partial void OnProgressingQtyChanging(System.Nullable<int> value);
    partial void OnProgressingQtyChanged();
    partial void OnBalanceQtyChanging(System.Nullable<int> value);
    partial void OnBalanceQtyChanged();
    partial void OnAcceptedQtyChanging(System.Nullable<int> value);
    partial void OnAcceptedQtyChanged();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnPickpackingByChanging(string value);
    partial void OnPickpackingByChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public Pick_Packing()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyNo", DbType="VarChar(50)")]
	public string GlassyNo
	{
		get
		{
			return this._GlassyNo;
		}
		set
		{
			if ((this._GlassyNo != value))
			{
				this.OnGlassyNoChanging(value);
				this.SendPropertyChanging();
				this._GlassyNo = value;
				this.SendPropertyChanged("GlassyNo");
				this.OnGlassyNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int")]
	public System.Nullable<int> TotalQuantity
	{
		get
		{
			return this._TotalQuantity;
		}
		set
		{
			if ((this._TotalQuantity != value))
			{
				this.OnTotalQuantityChanging(value);
				this.SendPropertyChanging();
				this._TotalQuantity = value;
				this.SendPropertyChanged("TotalQuantity");
				this.OnTotalQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty", DbType="Int")]
	public System.Nullable<int> ReceivedQty
	{
		get
		{
			return this._ReceivedQty;
		}
		set
		{
			if ((this._ReceivedQty != value))
			{
				this.OnReceivedQtyChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQty = value;
				this.SendPropertyChanged("ReceivedQty");
				this.OnReceivedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressingQty", DbType="Int")]
	public System.Nullable<int> ProgressingQty
	{
		get
		{
			return this._ProgressingQty;
		}
		set
		{
			if ((this._ProgressingQty != value))
			{
				this.OnProgressingQtyChanging(value);
				this.SendPropertyChanging();
				this._ProgressingQty = value;
				this.SendPropertyChanged("ProgressingQty");
				this.OnProgressingQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQty", DbType="Int")]
	public System.Nullable<int> BalanceQty
	{
		get
		{
			return this._BalanceQty;
		}
		set
		{
			if ((this._BalanceQty != value))
			{
				this.OnBalanceQtyChanging(value);
				this.SendPropertyChanging();
				this._BalanceQty = value;
				this.SendPropertyChanged("BalanceQty");
				this.OnBalanceQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty", DbType="Int")]
	public System.Nullable<int> AcceptedQty
	{
		get
		{
			return this._AcceptedQty;
		}
		set
		{
			if ((this._AcceptedQty != value))
			{
				this.OnAcceptedQtyChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQty = value;
				this.SendPropertyChanged("AcceptedQty");
				this.OnAcceptedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickpackingBy", DbType="VarChar(50)")]
	public string PickpackingBy
	{
		get
		{
			return this._PickpackingBy;
		}
		set
		{
			if ((this._PickpackingBy != value))
			{
				this.OnPickpackingByChanging(value);
				this.SendPropertyChanging();
				this._PickpackingBy = value;
				this.SendPropertyChanged("PickpackingBy");
				this.OnPickpackingByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlisterSealingTable")]
public partial class BlisterSealingTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _GlassyNo;
	
	private string _Model;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _TotalQty;
	
	private System.Nullable<int> _ReceivedQty;
	
	private System.Nullable<int> _BalanceQty;
	
	private System.Nullable<int> _ProgressQty;
	
	private System.Nullable<int> _AcceptedQty;
	
	private System.Nullable<int> _RejectedQty;
	
	private string _SealdoneBy;
	
	private string _MagnidoneBy;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlassyNoChanging(string value);
    partial void OnGlassyNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnReceivedQtyChanging(System.Nullable<int> value);
    partial void OnReceivedQtyChanged();
    partial void OnBalanceQtyChanging(System.Nullable<int> value);
    partial void OnBalanceQtyChanged();
    partial void OnProgressQtyChanging(System.Nullable<int> value);
    partial void OnProgressQtyChanged();
    partial void OnAcceptedQtyChanging(System.Nullable<int> value);
    partial void OnAcceptedQtyChanged();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    partial void OnSealdoneByChanging(string value);
    partial void OnSealdoneByChanged();
    partial void OnMagnidoneByChanging(string value);
    partial void OnMagnidoneByChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public BlisterSealingTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyNo", DbType="VarChar(50)")]
	public string GlassyNo
	{
		get
		{
			return this._GlassyNo;
		}
		set
		{
			if ((this._GlassyNo != value))
			{
				this.OnGlassyNoChanging(value);
				this.SendPropertyChanging();
				this._GlassyNo = value;
				this.SendPropertyChanged("GlassyNo");
				this.OnGlassyNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
	public System.Nullable<int> TotalQty
	{
		get
		{
			return this._TotalQty;
		}
		set
		{
			if ((this._TotalQty != value))
			{
				this.OnTotalQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalQty = value;
				this.SendPropertyChanged("TotalQty");
				this.OnTotalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty", DbType="Int")]
	public System.Nullable<int> ReceivedQty
	{
		get
		{
			return this._ReceivedQty;
		}
		set
		{
			if ((this._ReceivedQty != value))
			{
				this.OnReceivedQtyChanging(value);
				this.SendPropertyChanging();
				this._ReceivedQty = value;
				this.SendPropertyChanged("ReceivedQty");
				this.OnReceivedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQty", DbType="Int")]
	public System.Nullable<int> BalanceQty
	{
		get
		{
			return this._BalanceQty;
		}
		set
		{
			if ((this._BalanceQty != value))
			{
				this.OnBalanceQtyChanging(value);
				this.SendPropertyChanging();
				this._BalanceQty = value;
				this.SendPropertyChanged("BalanceQty");
				this.OnBalanceQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressQty", DbType="Int")]
	public System.Nullable<int> ProgressQty
	{
		get
		{
			return this._ProgressQty;
		}
		set
		{
			if ((this._ProgressQty != value))
			{
				this.OnProgressQtyChanging(value);
				this.SendPropertyChanging();
				this._ProgressQty = value;
				this.SendPropertyChanged("ProgressQty");
				this.OnProgressQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty", DbType="Int")]
	public System.Nullable<int> AcceptedQty
	{
		get
		{
			return this._AcceptedQty;
		}
		set
		{
			if ((this._AcceptedQty != value))
			{
				this.OnAcceptedQtyChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQty = value;
				this.SendPropertyChanged("AcceptedQty");
				this.OnAcceptedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealdoneBy", DbType="VarChar(50)")]
	public string SealdoneBy
	{
		get
		{
			return this._SealdoneBy;
		}
		set
		{
			if ((this._SealdoneBy != value))
			{
				this.OnSealdoneByChanging(value);
				this.SendPropertyChanging();
				this._SealdoneBy = value;
				this.SendPropertyChanged("SealdoneBy");
				this.OnSealdoneByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagnidoneBy", DbType="VarChar(50)")]
	public string MagnidoneBy
	{
		get
		{
			return this._MagnidoneBy;
		}
		set
		{
			if ((this._MagnidoneBy != value))
			{
				this.OnMagnidoneByChanging(value);
				this.SendPropertyChanging();
				this._MagnidoneBy = value;
				this.SendPropertyChanged("MagnidoneBy");
				this.OnMagnidoneByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlassyTumblingSO")]
public partial class GlassyTumblingSO : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _GRFLotNo;
	
	private string _TumblingLotNo;
	
	private string _ModelNo;
	
	private System.Nullable<decimal> _Power;
	
	private string _Sample1Status;
	
	private string _Sample2Status;
	
	private string _Sample3Status;
	
	private string _SampleRemarks;
	
	private string _SampleInspectedBy;
	
	private System.Nullable<System.DateTime> _SampleDate;
	
	private string _JarNo;
	
	private string _StartTime;
	
	private string _EndTime;
	
	private string _Duration;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGRFLotNoChanging(string value);
    partial void OnGRFLotNoChanged();
    partial void OnTumblingLotNoChanging(string value);
    partial void OnTumblingLotNoChanged();
    partial void OnModelNoChanging(string value);
    partial void OnModelNoChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnSample1StatusChanging(string value);
    partial void OnSample1StatusChanged();
    partial void OnSample2StatusChanging(string value);
    partial void OnSample2StatusChanged();
    partial void OnSample3StatusChanging(string value);
    partial void OnSample3StatusChanged();
    partial void OnSampleRemarksChanging(string value);
    partial void OnSampleRemarksChanged();
    partial void OnSampleInspectedByChanging(string value);
    partial void OnSampleInspectedByChanged();
    partial void OnSampleDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSampleDateChanged();
    partial void OnJarNoChanging(string value);
    partial void OnJarNoChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    #endregion
	
	public GlassyTumblingSO()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRFLotNo", DbType="VarChar(50)")]
	public string GRFLotNo
	{
		get
		{
			return this._GRFLotNo;
		}
		set
		{
			if ((this._GRFLotNo != value))
			{
				this.OnGRFLotNoChanging(value);
				this.SendPropertyChanging();
				this._GRFLotNo = value;
				this.SendPropertyChanged("GRFLotNo");
				this.OnGRFLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingLotNo", DbType="VarChar(50)")]
	public string TumblingLotNo
	{
		get
		{
			return this._TumblingLotNo;
		}
		set
		{
			if ((this._TumblingLotNo != value))
			{
				this.OnTumblingLotNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingLotNo = value;
				this.SendPropertyChanged("TumblingLotNo");
				this.OnTumblingLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelNo", DbType="VarChar(50)")]
	public string ModelNo
	{
		get
		{
			return this._ModelNo;
		}
		set
		{
			if ((this._ModelNo != value))
			{
				this.OnModelNoChanging(value);
				this.SendPropertyChanging();
				this._ModelNo = value;
				this.SendPropertyChanged("ModelNo");
				this.OnModelNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample1Status", DbType="NVarChar(50)")]
	public string Sample1Status
	{
		get
		{
			return this._Sample1Status;
		}
		set
		{
			if ((this._Sample1Status != value))
			{
				this.OnSample1StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample1Status = value;
				this.SendPropertyChanged("Sample1Status");
				this.OnSample1StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample2Status", DbType="NVarChar(50)")]
	public string Sample2Status
	{
		get
		{
			return this._Sample2Status;
		}
		set
		{
			if ((this._Sample2Status != value))
			{
				this.OnSample2StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample2Status = value;
				this.SendPropertyChanged("Sample2Status");
				this.OnSample2StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sample3Status", DbType="NVarChar(50)")]
	public string Sample3Status
	{
		get
		{
			return this._Sample3Status;
		}
		set
		{
			if ((this._Sample3Status != value))
			{
				this.OnSample3StatusChanging(value);
				this.SendPropertyChanging();
				this._Sample3Status = value;
				this.SendPropertyChanged("Sample3Status");
				this.OnSample3StatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleRemarks", DbType="VarChar(50)")]
	public string SampleRemarks
	{
		get
		{
			return this._SampleRemarks;
		}
		set
		{
			if ((this._SampleRemarks != value))
			{
				this.OnSampleRemarksChanging(value);
				this.SendPropertyChanging();
				this._SampleRemarks = value;
				this.SendPropertyChanged("SampleRemarks");
				this.OnSampleRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleInspectedBy", DbType="VarChar(50)")]
	public string SampleInspectedBy
	{
		get
		{
			return this._SampleInspectedBy;
		}
		set
		{
			if ((this._SampleInspectedBy != value))
			{
				this.OnSampleInspectedByChanging(value);
				this.SendPropertyChanging();
				this._SampleInspectedBy = value;
				this.SendPropertyChanged("SampleInspectedBy");
				this.OnSampleInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SampleDate
	{
		get
		{
			return this._SampleDate;
		}
		set
		{
			if ((this._SampleDate != value))
			{
				this.OnSampleDateChanging(value);
				this.SendPropertyChanging();
				this._SampleDate = value;
				this.SendPropertyChanged("SampleDate");
				this.OnSampleDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JarNo", DbType="VarChar(50)")]
	public string JarNo
	{
		get
		{
			return this._JarNo;
		}
		set
		{
			if ((this._JarNo != value))
			{
				this.OnJarNoChanging(value);
				this.SendPropertyChanging();
				this._JarNo = value;
				this.SendPropertyChanged("JarNo");
				this.OnJarNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="VarChar(50)")]
	public string EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this.OnEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EndTime = value;
				this.SendPropertyChanged("EndTime");
				this.OnEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="VarChar(50)")]
	public string Duration
	{
		get
		{
			return this._Duration;
		}
		set
		{
			if ((this._Duration != value))
			{
				this.OnDurationChanging(value);
				this.SendPropertyChanging();
				this._Duration = value;
				this.SendPropertyChanged("Duration");
				this.OnDurationChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MIinFQI")]
public partial class MIinFQI : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _GlassyNo;
	
	private string _Model;
	
	private System.Nullable<int> _TotalQty;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _RecievedQty;
	
	private System.Nullable<int> _ProgressQty;
	
	private System.Nullable<int> _BalanceQty;
	
	private System.Nullable<int> _AcceptedQty;
	
	private System.Nullable<int> _RetumblingQty;
	
	private System.Nullable<int> _RejectedQty;
	
	private string _TumblingRefNo;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<int> _Dots;
	
	private System.Nullable<int> _Islands;
	
	private System.Nullable<int> _LB;
	
	private System.Nullable<int> _SCR;
	
	private System.Nullable<int> _Cutting;
	
	private System.Nullable<int> _Other;
	
	private System.Nullable<int> _TotalRejQty;
	
	private string _Remarks;
	
	private string _RejMTSNo;
	
	private string _ApprovedBy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlassyNoChanging(string value);
    partial void OnGlassyNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnRecievedQtyChanging(System.Nullable<int> value);
    partial void OnRecievedQtyChanged();
    partial void OnProgressQtyChanging(System.Nullable<int> value);
    partial void OnProgressQtyChanged();
    partial void OnBalanceQtyChanging(System.Nullable<int> value);
    partial void OnBalanceQtyChanged();
    partial void OnAcceptedQtyChanging(System.Nullable<int> value);
    partial void OnAcceptedQtyChanged();
    partial void OnRetumblingQtyChanging(System.Nullable<int> value);
    partial void OnRetumblingQtyChanged();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    partial void OnTumblingRefNoChanging(string value);
    partial void OnTumblingRefNoChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDotsChanging(System.Nullable<int> value);
    partial void OnDotsChanged();
    partial void OnIslandsChanging(System.Nullable<int> value);
    partial void OnIslandsChanged();
    partial void OnLBChanging(System.Nullable<int> value);
    partial void OnLBChanged();
    partial void OnSCRChanging(System.Nullable<int> value);
    partial void OnSCRChanged();
    partial void OnCuttingChanging(System.Nullable<int> value);
    partial void OnCuttingChanged();
    partial void OnOtherChanging(System.Nullable<int> value);
    partial void OnOtherChanged();
    partial void OnTotalRejQtyChanging(System.Nullable<int> value);
    partial void OnTotalRejQtyChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnRejMTSNoChanging(string value);
    partial void OnRejMTSNoChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    #endregion
	
	public MIinFQI()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyNo", DbType="VarChar(50)")]
	public string GlassyNo
	{
		get
		{
			return this._GlassyNo;
		}
		set
		{
			if ((this._GlassyNo != value))
			{
				this.OnGlassyNoChanging(value);
				this.SendPropertyChanging();
				this._GlassyNo = value;
				this.SendPropertyChanged("GlassyNo");
				this.OnGlassyNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
	public System.Nullable<int> TotalQty
	{
		get
		{
			return this._TotalQty;
		}
		set
		{
			if ((this._TotalQty != value))
			{
				this.OnTotalQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalQty = value;
				this.SendPropertyChanged("TotalQty");
				this.OnTotalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedQty", DbType="Int")]
	public System.Nullable<int> RecievedQty
	{
		get
		{
			return this._RecievedQty;
		}
		set
		{
			if ((this._RecievedQty != value))
			{
				this.OnRecievedQtyChanging(value);
				this.SendPropertyChanging();
				this._RecievedQty = value;
				this.SendPropertyChanged("RecievedQty");
				this.OnRecievedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressQty", DbType="Int")]
	public System.Nullable<int> ProgressQty
	{
		get
		{
			return this._ProgressQty;
		}
		set
		{
			if ((this._ProgressQty != value))
			{
				this.OnProgressQtyChanging(value);
				this.SendPropertyChanging();
				this._ProgressQty = value;
				this.SendPropertyChanged("ProgressQty");
				this.OnProgressQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQty", DbType="Int")]
	public System.Nullable<int> BalanceQty
	{
		get
		{
			return this._BalanceQty;
		}
		set
		{
			if ((this._BalanceQty != value))
			{
				this.OnBalanceQtyChanging(value);
				this.SendPropertyChanging();
				this._BalanceQty = value;
				this.SendPropertyChanged("BalanceQty");
				this.OnBalanceQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty", DbType="Int")]
	public System.Nullable<int> AcceptedQty
	{
		get
		{
			return this._AcceptedQty;
		}
		set
		{
			if ((this._AcceptedQty != value))
			{
				this.OnAcceptedQtyChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQty = value;
				this.SendPropertyChanged("AcceptedQty");
				this.OnAcceptedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingQty", DbType="Int")]
	public System.Nullable<int> RetumblingQty
	{
		get
		{
			return this._RetumblingQty;
		}
		set
		{
			if ((this._RetumblingQty != value))
			{
				this.OnRetumblingQtyChanging(value);
				this.SendPropertyChanging();
				this._RetumblingQty = value;
				this.SendPropertyChanged("RetumblingQty");
				this.OnRetumblingQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingRefNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TumblingRefNo
	{
		get
		{
			return this._TumblingRefNo;
		}
		set
		{
			if ((this._TumblingRefNo != value))
			{
				this.OnTumblingRefNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingRefNo = value;
				this.SendPropertyChanged("TumblingRefNo");
				this.OnTumblingRefNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dots", DbType="Int")]
	public System.Nullable<int> Dots
	{
		get
		{
			return this._Dots;
		}
		set
		{
			if ((this._Dots != value))
			{
				this.OnDotsChanging(value);
				this.SendPropertyChanging();
				this._Dots = value;
				this.SendPropertyChanged("Dots");
				this.OnDotsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Islands", DbType="Int")]
	public System.Nullable<int> Islands
	{
		get
		{
			return this._Islands;
		}
		set
		{
			if ((this._Islands != value))
			{
				this.OnIslandsChanging(value);
				this.SendPropertyChanging();
				this._Islands = value;
				this.SendPropertyChanged("Islands");
				this.OnIslandsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LB", DbType="Int")]
	public System.Nullable<int> LB
	{
		get
		{
			return this._LB;
		}
		set
		{
			if ((this._LB != value))
			{
				this.OnLBChanging(value);
				this.SendPropertyChanging();
				this._LB = value;
				this.SendPropertyChanged("LB");
				this.OnLBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCR", DbType="Int")]
	public System.Nullable<int> SCR
	{
		get
		{
			return this._SCR;
		}
		set
		{
			if ((this._SCR != value))
			{
				this.OnSCRChanging(value);
				this.SendPropertyChanging();
				this._SCR = value;
				this.SendPropertyChanged("SCR");
				this.OnSCRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cutting", DbType="Int")]
	public System.Nullable<int> Cutting
	{
		get
		{
			return this._Cutting;
		}
		set
		{
			if ((this._Cutting != value))
			{
				this.OnCuttingChanging(value);
				this.SendPropertyChanging();
				this._Cutting = value;
				this.SendPropertyChanged("Cutting");
				this.OnCuttingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="Int")]
	public System.Nullable<int> Other
	{
		get
		{
			return this._Other;
		}
		set
		{
			if ((this._Other != value))
			{
				this.OnOtherChanging(value);
				this.SendPropertyChanging();
				this._Other = value;
				this.SendPropertyChanged("Other");
				this.OnOtherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRejQty", DbType="Int")]
	public System.Nullable<int> TotalRejQty
	{
		get
		{
			return this._TotalRejQty;
		}
		set
		{
			if ((this._TotalRejQty != value))
			{
				this.OnTotalRejQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalRejQty = value;
				this.SendPropertyChanged("TotalRejQty");
				this.OnTotalRejQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejMTSNo", DbType="VarChar(50)")]
	public string RejMTSNo
	{
		get
		{
			return this._RejMTSNo;
		}
		set
		{
			if ((this._RejMTSNo != value))
			{
				this.OnRejMTSNoChanging(value);
				this.SendPropertyChanging();
				this._RejMTSNo = value;
				this.SendPropertyChanged("RejMTSNo");
				this.OnRejMTSNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="VarChar(50)")]
	public string ApprovedBy
	{
		get
		{
			return this._ApprovedBy;
		}
		set
		{
			if ((this._ApprovedBy != value))
			{
				this.OnApprovedByChanging(value);
				this.SendPropertyChanging();
				this._ApprovedBy = value;
				this.SendPropertyChanged("ApprovedBy");
				this.OnApprovedByChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabelDetailsPacking")]
public partial class LabelDetailsPacking : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _GlassyNo;
	
	private string _Model;
	
	private System.Nullable<int> _TotalQty;
	
	private System.Nullable<decimal> _Power;
	
	private string _LotNo;
	
	private System.Nullable<int> _StartNo;
	
	private System.Nullable<int> _EndNo;
	
	private System.Nullable<int> _Qty;
	
	private string _Remarks;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _PackedBy;
	
	private string _SubModel;
	
	private string _BrandName;
	
	private string _ExpiryDate;
	
	private string _TumblingRefNo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlassyNoChanging(string value);
    partial void OnGlassyNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnStartNoChanging(System.Nullable<int> value);
    partial void OnStartNoChanged();
    partial void OnEndNoChanging(System.Nullable<int> value);
    partial void OnEndNoChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPackedByChanging(string value);
    partial void OnPackedByChanged();
    partial void OnSubModelChanging(string value);
    partial void OnSubModelChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnExpiryDateChanging(string value);
    partial void OnExpiryDateChanged();
    partial void OnTumblingRefNoChanging(string value);
    partial void OnTumblingRefNoChanged();
    #endregion
	
	public LabelDetailsPacking()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyNo", DbType="VarChar(50)")]
	public string GlassyNo
	{
		get
		{
			return this._GlassyNo;
		}
		set
		{
			if ((this._GlassyNo != value))
			{
				this.OnGlassyNoChanging(value);
				this.SendPropertyChanging();
				this._GlassyNo = value;
				this.SendPropertyChanged("GlassyNo");
				this.OnGlassyNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
	public System.Nullable<int> TotalQty
	{
		get
		{
			return this._TotalQty;
		}
		set
		{
			if ((this._TotalQty != value))
			{
				this.OnTotalQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalQty = value;
				this.SendPropertyChanged("TotalQty");
				this.OnTotalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartNo", DbType="Int")]
	public System.Nullable<int> StartNo
	{
		get
		{
			return this._StartNo;
		}
		set
		{
			if ((this._StartNo != value))
			{
				this.OnStartNoChanging(value);
				this.SendPropertyChanging();
				this._StartNo = value;
				this.SendPropertyChanged("StartNo");
				this.OnStartNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndNo", DbType="Int")]
	public System.Nullable<int> EndNo
	{
		get
		{
			return this._EndNo;
		}
		set
		{
			if ((this._EndNo != value))
			{
				this.OnEndNoChanging(value);
				this.SendPropertyChanging();
				this._EndNo = value;
				this.SendPropertyChanged("EndNo");
				this.OnEndNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
	public System.Nullable<int> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackedBy", DbType="VarChar(50)")]
	public string PackedBy
	{
		get
		{
			return this._PackedBy;
		}
		set
		{
			if ((this._PackedBy != value))
			{
				this.OnPackedByChanging(value);
				this.SendPropertyChanging();
				this._PackedBy = value;
				this.SendPropertyChanged("PackedBy");
				this.OnPackedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubModel", DbType="VarChar(50)")]
	public string SubModel
	{
		get
		{
			return this._SubModel;
		}
		set
		{
			if ((this._SubModel != value))
			{
				this.OnSubModelChanging(value);
				this.SendPropertyChanging();
				this._SubModel = value;
				this.SendPropertyChanged("SubModel");
				this.OnSubModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(50)")]
	public string BrandName
	{
		get
		{
			return this._BrandName;
		}
		set
		{
			if ((this._BrandName != value))
			{
				this.OnBrandNameChanging(value);
				this.SendPropertyChanging();
				this._BrandName = value;
				this.SendPropertyChanged("BrandName");
				this.OnBrandNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="VarChar(50)")]
	public string ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this.OnExpiryDateChanging(value);
				this.SendPropertyChanging();
				this._ExpiryDate = value;
				this.SendPropertyChanged("ExpiryDate");
				this.OnExpiryDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingRefNo", DbType="VarChar(50)")]
	public string TumblingRefNo
	{
		get
		{
			return this._TumblingRefNo;
		}
		set
		{
			if ((this._TumblingRefNo != value))
			{
				this.OnTumblingRefNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingRefNo = value;
				this.SendPropertyChanged("TumblingRefNo");
				this.OnTumblingRefNoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BatchFinalReport")]
public partial class BatchFinalReport : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _PhobicId;
	
	private string _LotNo;
	
	private string _Model;
	
	private System.Nullable<int> _TotalQty;
	
	private System.Nullable<int> _AcceptedQty;
	
	private System.Nullable<int> _RejectedQty;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhobicIdChanging(string value);
    partial void OnPhobicIdChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnAcceptedQtyChanging(System.Nullable<int> value);
    partial void OnAcceptedQtyChanged();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    #endregion
	
	public BatchFinalReport()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhobicId", DbType="VarChar(50)")]
	public string PhobicId
	{
		get
		{
			return this._PhobicId;
		}
		set
		{
			if ((this._PhobicId != value))
			{
				this.OnPhobicIdChanging(value);
				this.SendPropertyChanging();
				this._PhobicId = value;
				this.SendPropertyChanged("PhobicId");
				this.OnPhobicIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
	public System.Nullable<int> TotalQty
	{
		get
		{
			return this._TotalQty;
		}
		set
		{
			if ((this._TotalQty != value))
			{
				this.OnTotalQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalQty = value;
				this.SendPropertyChanged("TotalQty");
				this.OnTotalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty", DbType="Int")]
	public System.Nullable<int> AcceptedQty
	{
		get
		{
			return this._AcceptedQty;
		}
		set
		{
			if ((this._AcceptedQty != value))
			{
				this.OnAcceptedQtyChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQty = value;
				this.SendPropertyChanged("AcceptedQty");
				this.OnAcceptedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LensPreperation_Details")]
public partial class LensPreperation_Detail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingRefNo;
	
	private string _LotNo;
	
	private string _Model;
	
	private System.Nullable<decimal> _Power;
	
	private System.Nullable<int> _Qty;
	
	private string _PhobicId;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingRefNoChanging(string value);
    partial void OnTumblingRefNoChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnPhobicIdChanging(string value);
    partial void OnPhobicIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public LensPreperation_Detail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingRefNo", DbType="VarChar(50)")]
	public string TumblingRefNo
	{
		get
		{
			return this._TumblingRefNo;
		}
		set
		{
			if ((this._TumblingRefNo != value))
			{
				this.OnTumblingRefNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingRefNo = value;
				this.SendPropertyChanged("TumblingRefNo");
				this.OnTumblingRefNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="NVarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
	public System.Nullable<int> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhobicId", DbType="VarChar(50)")]
	public string PhobicId
	{
		get
		{
			return this._PhobicId;
		}
		set
		{
			if ((this._PhobicId != value))
			{
				this.OnPhobicIdChanging(value);
				this.SendPropertyChanging();
				this._PhobicId = value;
				this.SendPropertyChanged("PhobicId");
				this.OnPhobicIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RemattTumblingLens")]
public partial class RemattTumblingLen : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Glassy1;
	
	private string _Glassy2;
	
	private string _Glassy3;
	
	private string _AcceptedQty1;
	
	private string _AcceptedQty2;
	
	private string _AcceptedQty3;
	
	private string _RetumblingRef1;
	
	private string _RetumblingRef2;
	
	private string _RetumblingRef3;
	
	private string _Model1;
	
	private string _Model2;
	
	private string _Model3;
	
	private System.Nullable<decimal> _Power1;
	
	private System.Nullable<decimal> _Power2;
	
	private System.Nullable<decimal> _Power3;
	
	private string _TumblingLotNo;
	
	private string _PreparedBy1;
	
	private string _PreparedBy2;
	
	private string _PreparedBy3;
	
	private System.Nullable<System.DateTime> _Date1;
	
	private System.Nullable<System.DateTime> _Date2;
	
	private System.Nullable<System.DateTime> _Date3;
	
	private string _PhobicId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGlassy1Changing(string value);
    partial void OnGlassy1Changed();
    partial void OnGlassy2Changing(string value);
    partial void OnGlassy2Changed();
    partial void OnGlassy3Changing(string value);
    partial void OnGlassy3Changed();
    partial void OnAcceptedQty1Changing(string value);
    partial void OnAcceptedQty1Changed();
    partial void OnAcceptedQty2Changing(string value);
    partial void OnAcceptedQty2Changed();
    partial void OnAcceptedQty3Changing(string value);
    partial void OnAcceptedQty3Changed();
    partial void OnRetumblingRef1Changing(string value);
    partial void OnRetumblingRef1Changed();
    partial void OnRetumblingRef2Changing(string value);
    partial void OnRetumblingRef2Changed();
    partial void OnRetumblingRef3Changing(string value);
    partial void OnRetumblingRef3Changed();
    partial void OnModel1Changing(string value);
    partial void OnModel1Changed();
    partial void OnModel2Changing(string value);
    partial void OnModel2Changed();
    partial void OnModel3Changing(string value);
    partial void OnModel3Changed();
    partial void OnPower1Changing(System.Nullable<decimal> value);
    partial void OnPower1Changed();
    partial void OnPower2Changing(System.Nullable<decimal> value);
    partial void OnPower2Changed();
    partial void OnPower3Changing(System.Nullable<decimal> value);
    partial void OnPower3Changed();
    partial void OnTumblingLotNoChanging(string value);
    partial void OnTumblingLotNoChanged();
    partial void OnPreparedBy1Changing(string value);
    partial void OnPreparedBy1Changed();
    partial void OnPreparedBy2Changing(string value);
    partial void OnPreparedBy2Changed();
    partial void OnPreparedBy3Changing(string value);
    partial void OnPreparedBy3Changed();
    partial void OnDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnDate1Changed();
    partial void OnDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnDate2Changed();
    partial void OnDate3Changing(System.Nullable<System.DateTime> value);
    partial void OnDate3Changed();
    partial void OnPhobicIdChanging(string value);
    partial void OnPhobicIdChanged();
    #endregion
	
	public RemattTumblingLen()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glassy1", DbType="VarChar(50)")]
	public string Glassy1
	{
		get
		{
			return this._Glassy1;
		}
		set
		{
			if ((this._Glassy1 != value))
			{
				this.OnGlassy1Changing(value);
				this.SendPropertyChanging();
				this._Glassy1 = value;
				this.SendPropertyChanged("Glassy1");
				this.OnGlassy1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glassy2", DbType="VarChar(50)")]
	public string Glassy2
	{
		get
		{
			return this._Glassy2;
		}
		set
		{
			if ((this._Glassy2 != value))
			{
				this.OnGlassy2Changing(value);
				this.SendPropertyChanging();
				this._Glassy2 = value;
				this.SendPropertyChanged("Glassy2");
				this.OnGlassy2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glassy3", DbType="VarChar(50)")]
	public string Glassy3
	{
		get
		{
			return this._Glassy3;
		}
		set
		{
			if ((this._Glassy3 != value))
			{
				this.OnGlassy3Changing(value);
				this.SendPropertyChanging();
				this._Glassy3 = value;
				this.SendPropertyChanged("Glassy3");
				this.OnGlassy3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty1", DbType="VarChar(50)")]
	public string AcceptedQty1
	{
		get
		{
			return this._AcceptedQty1;
		}
		set
		{
			if ((this._AcceptedQty1 != value))
			{
				this.OnAcceptedQty1Changing(value);
				this.SendPropertyChanging();
				this._AcceptedQty1 = value;
				this.SendPropertyChanged("AcceptedQty1");
				this.OnAcceptedQty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty2", DbType="VarChar(50)")]
	public string AcceptedQty2
	{
		get
		{
			return this._AcceptedQty2;
		}
		set
		{
			if ((this._AcceptedQty2 != value))
			{
				this.OnAcceptedQty2Changing(value);
				this.SendPropertyChanging();
				this._AcceptedQty2 = value;
				this.SendPropertyChanged("AcceptedQty2");
				this.OnAcceptedQty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty3", DbType="VarChar(50)")]
	public string AcceptedQty3
	{
		get
		{
			return this._AcceptedQty3;
		}
		set
		{
			if ((this._AcceptedQty3 != value))
			{
				this.OnAcceptedQty3Changing(value);
				this.SendPropertyChanging();
				this._AcceptedQty3 = value;
				this.SendPropertyChanged("AcceptedQty3");
				this.OnAcceptedQty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingRef1", DbType="VarChar(50)")]
	public string RetumblingRef1
	{
		get
		{
			return this._RetumblingRef1;
		}
		set
		{
			if ((this._RetumblingRef1 != value))
			{
				this.OnRetumblingRef1Changing(value);
				this.SendPropertyChanging();
				this._RetumblingRef1 = value;
				this.SendPropertyChanged("RetumblingRef1");
				this.OnRetumblingRef1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingRef2", DbType="VarChar(50)")]
	public string RetumblingRef2
	{
		get
		{
			return this._RetumblingRef2;
		}
		set
		{
			if ((this._RetumblingRef2 != value))
			{
				this.OnRetumblingRef2Changing(value);
				this.SendPropertyChanging();
				this._RetumblingRef2 = value;
				this.SendPropertyChanged("RetumblingRef2");
				this.OnRetumblingRef2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingRef3", DbType="VarChar(50)")]
	public string RetumblingRef3
	{
		get
		{
			return this._RetumblingRef3;
		}
		set
		{
			if ((this._RetumblingRef3 != value))
			{
				this.OnRetumblingRef3Changing(value);
				this.SendPropertyChanging();
				this._RetumblingRef3 = value;
				this.SendPropertyChanged("RetumblingRef3");
				this.OnRetumblingRef3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model1", DbType="VarChar(50)")]
	public string Model1
	{
		get
		{
			return this._Model1;
		}
		set
		{
			if ((this._Model1 != value))
			{
				this.OnModel1Changing(value);
				this.SendPropertyChanging();
				this._Model1 = value;
				this.SendPropertyChanged("Model1");
				this.OnModel1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model2", DbType="VarChar(50)")]
	public string Model2
	{
		get
		{
			return this._Model2;
		}
		set
		{
			if ((this._Model2 != value))
			{
				this.OnModel2Changing(value);
				this.SendPropertyChanging();
				this._Model2 = value;
				this.SendPropertyChanged("Model2");
				this.OnModel2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model3", DbType="VarChar(50)")]
	public string Model3
	{
		get
		{
			return this._Model3;
		}
		set
		{
			if ((this._Model3 != value))
			{
				this.OnModel3Changing(value);
				this.SendPropertyChanging();
				this._Model3 = value;
				this.SendPropertyChanged("Model3");
				this.OnModel3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power1
	{
		get
		{
			return this._Power1;
		}
		set
		{
			if ((this._Power1 != value))
			{
				this.OnPower1Changing(value);
				this.SendPropertyChanging();
				this._Power1 = value;
				this.SendPropertyChanged("Power1");
				this.OnPower1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power2", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power2
	{
		get
		{
			return this._Power2;
		}
		set
		{
			if ((this._Power2 != value))
			{
				this.OnPower2Changing(value);
				this.SendPropertyChanging();
				this._Power2 = value;
				this.SendPropertyChanged("Power2");
				this.OnPower2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power3", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power3
	{
		get
		{
			return this._Power3;
		}
		set
		{
			if ((this._Power3 != value))
			{
				this.OnPower3Changing(value);
				this.SendPropertyChanging();
				this._Power3 = value;
				this.SendPropertyChanged("Power3");
				this.OnPower3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingLotNo", DbType="VarChar(50)")]
	public string TumblingLotNo
	{
		get
		{
			return this._TumblingLotNo;
		}
		set
		{
			if ((this._TumblingLotNo != value))
			{
				this.OnTumblingLotNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingLotNo = value;
				this.SendPropertyChanged("TumblingLotNo");
				this.OnTumblingLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy1", DbType="VarChar(50)")]
	public string PreparedBy1
	{
		get
		{
			return this._PreparedBy1;
		}
		set
		{
			if ((this._PreparedBy1 != value))
			{
				this.OnPreparedBy1Changing(value);
				this.SendPropertyChanging();
				this._PreparedBy1 = value;
				this.SendPropertyChanged("PreparedBy1");
				this.OnPreparedBy1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy2", DbType="VarChar(50)")]
	public string PreparedBy2
	{
		get
		{
			return this._PreparedBy2;
		}
		set
		{
			if ((this._PreparedBy2 != value))
			{
				this.OnPreparedBy2Changing(value);
				this.SendPropertyChanging();
				this._PreparedBy2 = value;
				this.SendPropertyChanged("PreparedBy2");
				this.OnPreparedBy2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy3", DbType="VarChar(50)")]
	public string PreparedBy3
	{
		get
		{
			return this._PreparedBy3;
		}
		set
		{
			if ((this._PreparedBy3 != value))
			{
				this.OnPreparedBy3Changing(value);
				this.SendPropertyChanging();
				this._PreparedBy3 = value;
				this.SendPropertyChanged("PreparedBy3");
				this.OnPreparedBy3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date1", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date1
	{
		get
		{
			return this._Date1;
		}
		set
		{
			if ((this._Date1 != value))
			{
				this.OnDate1Changing(value);
				this.SendPropertyChanging();
				this._Date1 = value;
				this.SendPropertyChanged("Date1");
				this.OnDate1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date2", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date2
	{
		get
		{
			return this._Date2;
		}
		set
		{
			if ((this._Date2 != value))
			{
				this.OnDate2Changing(value);
				this.SendPropertyChanging();
				this._Date2 = value;
				this.SendPropertyChanged("Date2");
				this.OnDate2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date3", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date3
	{
		get
		{
			return this._Date3;
		}
		set
		{
			if ((this._Date3 != value))
			{
				this.OnDate3Changing(value);
				this.SendPropertyChanging();
				this._Date3 = value;
				this.SendPropertyChanged("Date3");
				this.OnDate3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhobicId", DbType="VarChar(50)")]
	public string PhobicId
	{
		get
		{
			return this._PhobicId;
		}
		set
		{
			if ((this._PhobicId != value))
			{
				this.OnPhobicIdChanging(value);
				this.SendPropertyChanging();
				this._PhobicId = value;
				this.SendPropertyChanged("PhobicId");
				this.OnPhobicIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinalLensPreparation")]
public partial class FinalLensPreparation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingNo;
	
	private string _Model;
	
	private string _PhobicId;
	
	private System.Nullable<int> _TotalQty;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private string _StartTime;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private string _EndTime;
	
	private System.Nullable<int> _Status;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPhobicIdChanging(string value);
    partial void OnPhobicIdChanged();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
	
	public FinalLensPreparation()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhobicId", DbType="VarChar(50)")]
	public string PhobicId
	{
		get
		{
			return this._PhobicId;
		}
		set
		{
			if ((this._PhobicId != value))
			{
				this.OnPhobicIdChanging(value);
				this.SendPropertyChanging();
				this._PhobicId = value;
				this.SendPropertyChanged("PhobicId");
				this.OnPhobicIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
	public System.Nullable<int> TotalQty
	{
		get
		{
			return this._TotalQty;
		}
		set
		{
			if ((this._TotalQty != value))
			{
				this.OnTotalQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalQty = value;
				this.SendPropertyChanged("TotalQty");
				this.OnTotalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="VarChar(50)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="VarChar(50)")]
	public string EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this.OnEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EndTime = value;
				this.SendPropertyChanged("EndTime");
				this.OnEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
	public System.Nullable<int> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HapticPowerTable")]
public partial class HapticPowerTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _LotNo;
	
	private string _BlockingType;
	
	private string _SampleNo1;
	
	private string _SampleNo2;
	
	private string _SampleNo3;
	
	private string _PowerSample1;
	
	private string _PowerSample2;
	
	private string _PowerSample3;
	
	private System.Nullable<decimal> _PowerValue1;
	
	private System.Nullable<decimal> _PowerValue2;
	
	private System.Nullable<decimal> _PowerValue3;
	
	private System.Nullable<decimal> _Haptic1;
	
	private System.Nullable<decimal> _Haptic2;
	
	private System.Nullable<decimal> _Haptic3;
	
	private string _Remarks;
	
	private string _InspectedBy;
	
	private string _Shift;
	
	private System.Nullable<System.DateTime> _Date;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBlockingTypeChanging(string value);
    partial void OnBlockingTypeChanged();
    partial void OnSampleNo1Changing(string value);
    partial void OnSampleNo1Changed();
    partial void OnSampleNo2Changing(string value);
    partial void OnSampleNo2Changed();
    partial void OnSampleNo3Changing(string value);
    partial void OnSampleNo3Changed();
    partial void OnPowerSample1Changing(string value);
    partial void OnPowerSample1Changed();
    partial void OnPowerSample2Changing(string value);
    partial void OnPowerSample2Changed();
    partial void OnPowerSample3Changing(string value);
    partial void OnPowerSample3Changed();
    partial void OnPowerValue1Changing(System.Nullable<decimal> value);
    partial void OnPowerValue1Changed();
    partial void OnPowerValue2Changing(System.Nullable<decimal> value);
    partial void OnPowerValue2Changed();
    partial void OnPowerValue3Changing(System.Nullable<decimal> value);
    partial void OnPowerValue3Changed();
    partial void OnHaptic1Changing(System.Nullable<decimal> value);
    partial void OnHaptic1Changed();
    partial void OnHaptic2Changing(System.Nullable<decimal> value);
    partial void OnHaptic2Changed();
    partial void OnHaptic3Changing(System.Nullable<decimal> value);
    partial void OnHaptic3Changed();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnInspectedByChanging(string value);
    partial void OnInspectedByChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
	
	public HapticPowerTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockingType", DbType="NVarChar(50)")]
	public string BlockingType
	{
		get
		{
			return this._BlockingType;
		}
		set
		{
			if ((this._BlockingType != value))
			{
				this.OnBlockingTypeChanging(value);
				this.SendPropertyChanging();
				this._BlockingType = value;
				this.SendPropertyChanged("BlockingType");
				this.OnBlockingTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo1", DbType="NVarChar(50)")]
	public string SampleNo1
	{
		get
		{
			return this._SampleNo1;
		}
		set
		{
			if ((this._SampleNo1 != value))
			{
				this.OnSampleNo1Changing(value);
				this.SendPropertyChanging();
				this._SampleNo1 = value;
				this.SendPropertyChanged("SampleNo1");
				this.OnSampleNo1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo2", DbType="NVarChar(50)")]
	public string SampleNo2
	{
		get
		{
			return this._SampleNo2;
		}
		set
		{
			if ((this._SampleNo2 != value))
			{
				this.OnSampleNo2Changing(value);
				this.SendPropertyChanging();
				this._SampleNo2 = value;
				this.SendPropertyChanged("SampleNo2");
				this.OnSampleNo2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleNo3", DbType="NVarChar(50)")]
	public string SampleNo3
	{
		get
		{
			return this._SampleNo3;
		}
		set
		{
			if ((this._SampleNo3 != value))
			{
				this.OnSampleNo3Changing(value);
				this.SendPropertyChanging();
				this._SampleNo3 = value;
				this.SendPropertyChanged("SampleNo3");
				this.OnSampleNo3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerSample1", DbType="NVarChar(50)")]
	public string PowerSample1
	{
		get
		{
			return this._PowerSample1;
		}
		set
		{
			if ((this._PowerSample1 != value))
			{
				this.OnPowerSample1Changing(value);
				this.SendPropertyChanging();
				this._PowerSample1 = value;
				this.SendPropertyChanged("PowerSample1");
				this.OnPowerSample1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerSample2", DbType="NVarChar(50)")]
	public string PowerSample2
	{
		get
		{
			return this._PowerSample2;
		}
		set
		{
			if ((this._PowerSample2 != value))
			{
				this.OnPowerSample2Changing(value);
				this.SendPropertyChanging();
				this._PowerSample2 = value;
				this.SendPropertyChanged("PowerSample2");
				this.OnPowerSample2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerSample3", DbType="NVarChar(50)")]
	public string PowerSample3
	{
		get
		{
			return this._PowerSample3;
		}
		set
		{
			if ((this._PowerSample3 != value))
			{
				this.OnPowerSample3Changing(value);
				this.SendPropertyChanging();
				this._PowerSample3 = value;
				this.SendPropertyChanged("PowerSample3");
				this.OnPowerSample3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerValue1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> PowerValue1
	{
		get
		{
			return this._PowerValue1;
		}
		set
		{
			if ((this._PowerValue1 != value))
			{
				this.OnPowerValue1Changing(value);
				this.SendPropertyChanging();
				this._PowerValue1 = value;
				this.SendPropertyChanged("PowerValue1");
				this.OnPowerValue1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerValue2", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> PowerValue2
	{
		get
		{
			return this._PowerValue2;
		}
		set
		{
			if ((this._PowerValue2 != value))
			{
				this.OnPowerValue2Changing(value);
				this.SendPropertyChanging();
				this._PowerValue2 = value;
				this.SendPropertyChanged("PowerValue2");
				this.OnPowerValue2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerValue3", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> PowerValue3
	{
		get
		{
			return this._PowerValue3;
		}
		set
		{
			if ((this._PowerValue3 != value))
			{
				this.OnPowerValue3Changing(value);
				this.SendPropertyChanging();
				this._PowerValue3 = value;
				this.SendPropertyChanged("PowerValue3");
				this.OnPowerValue3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Haptic1", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Haptic1
	{
		get
		{
			return this._Haptic1;
		}
		set
		{
			if ((this._Haptic1 != value))
			{
				this.OnHaptic1Changing(value);
				this.SendPropertyChanging();
				this._Haptic1 = value;
				this.SendPropertyChanged("Haptic1");
				this.OnHaptic1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Haptic2", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Haptic2
	{
		get
		{
			return this._Haptic2;
		}
		set
		{
			if ((this._Haptic2 != value))
			{
				this.OnHaptic2Changing(value);
				this.SendPropertyChanging();
				this._Haptic2 = value;
				this.SendPropertyChanged("Haptic2");
				this.OnHaptic2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Haptic3", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Haptic3
	{
		get
		{
			return this._Haptic3;
		}
		set
		{
			if ((this._Haptic3 != value))
			{
				this.OnHaptic3Changing(value);
				this.SendPropertyChanging();
				this._Haptic3 = value;
				this.SendPropertyChanged("Haptic3");
				this.OnHaptic3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy", DbType="VarChar(50)")]
	public string InspectedBy
	{
		get
		{
			return this._InspectedBy;
		}
		set
		{
			if ((this._InspectedBy != value))
			{
				this.OnInspectedByChanging(value);
				this.SendPropertyChanging();
				this._InspectedBy = value;
				this.SendPropertyChanged("InspectedBy");
				this.OnInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="NVarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pouch_Delete")]
public partial class Pouch_Delete : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _rotlex_type;
	
	private string _RefLot;
	
	private int _Label;
	
	private string _Type;
	
	private string _Brand_Name;
	
	private string _Model_Name;
	
	private string _Reference_Name;
	
	private string _Power;
	
	private int _Qty;
	
	private string _Created_By;
	
	private System.DateTime _Created_Date;
	
	private string _Modified_By;
	
	private System.DateTime _Modified_Date;
	
	private string _R_Power;
	
	private string _CySize;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrotlex_typeChanging(string value);
    partial void Onrotlex_typeChanged();
    partial void OnRefLotChanging(string value);
    partial void OnRefLotChanged();
    partial void OnLabelChanging(int value);
    partial void OnLabelChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnBrand_NameChanging(string value);
    partial void OnBrand_NameChanged();
    partial void OnModel_NameChanging(string value);
    partial void OnModel_NameChanged();
    partial void OnReference_NameChanging(string value);
    partial void OnReference_NameChanged();
    partial void OnPowerChanging(string value);
    partial void OnPowerChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    partial void OnCreated_ByChanging(string value);
    partial void OnCreated_ByChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnModified_ByChanging(string value);
    partial void OnModified_ByChanged();
    partial void OnModified_DateChanging(System.DateTime value);
    partial void OnModified_DateChanged();
    partial void OnR_PowerChanging(string value);
    partial void OnR_PowerChanged();
    partial void OnCySizeChanging(string value);
    partial void OnCySizeChanged();
    #endregion
	
	public Pouch_Delete()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rotlex_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string rotlex_type
	{
		get
		{
			return this._rotlex_type;
		}
		set
		{
			if ((this._rotlex_type != value))
			{
				this.Onrotlex_typeChanging(value);
				this.SendPropertyChanging();
				this._rotlex_type = value;
				this.SendPropertyChanged("rotlex_type");
				this.Onrotlex_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefLot", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string RefLot
	{
		get
		{
			return this._RefLot;
		}
		set
		{
			if ((this._RefLot != value))
			{
				this.OnRefLotChanging(value);
				this.SendPropertyChanging();
				this._RefLot = value;
				this.SendPropertyChanged("RefLot");
				this.OnRefLotChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="Int NOT NULL")]
	public int Label
	{
		get
		{
			return this._Label;
		}
		set
		{
			if ((this._Label != value))
			{
				this.OnLabelChanging(value);
				this.SendPropertyChanging();
				this._Label = value;
				this.SendPropertyChanged("Label");
				this.OnLabelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Brand_Name
	{
		get
		{
			return this._Brand_Name;
		}
		set
		{
			if ((this._Brand_Name != value))
			{
				this.OnBrand_NameChanging(value);
				this.SendPropertyChanging();
				this._Brand_Name = value;
				this.SendPropertyChanged("Brand_Name");
				this.OnBrand_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Model_Name
	{
		get
		{
			return this._Model_Name;
		}
		set
		{
			if ((this._Model_Name != value))
			{
				this.OnModel_NameChanging(value);
				this.SendPropertyChanging();
				this._Model_Name = value;
				this.SendPropertyChanged("Model_Name");
				this.OnModel_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Reference_Name
	{
		get
		{
			return this._Reference_Name;
		}
		set
		{
			if ((this._Reference_Name != value))
			{
				this.OnReference_NameChanging(value);
				this.SendPropertyChanging();
				this._Reference_Name = value;
				this.SendPropertyChanged("Reference_Name");
				this.OnReference_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int NOT NULL")]
	public int Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Created_By
	{
		get
		{
			return this._Created_By;
		}
		set
		{
			if ((this._Created_By != value))
			{
				this.OnCreated_ByChanging(value);
				this.SendPropertyChanging();
				this._Created_By = value;
				this.SendPropertyChanged("Created_By");
				this.OnCreated_ByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
	public System.DateTime Created_Date
	{
		get
		{
			return this._Created_Date;
		}
		set
		{
			if ((this._Created_Date != value))
			{
				this.OnCreated_DateChanging(value);
				this.SendPropertyChanging();
				this._Created_Date = value;
				this.SendPropertyChanged("Created_Date");
				this.OnCreated_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Modified_By
	{
		get
		{
			return this._Modified_By;
		}
		set
		{
			if ((this._Modified_By != value))
			{
				this.OnModified_ByChanging(value);
				this.SendPropertyChanging();
				this._Modified_By = value;
				this.SendPropertyChanged("Modified_By");
				this.OnModified_ByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_Date", DbType="DateTime NOT NULL")]
	public System.DateTime Modified_Date
	{
		get
		{
			return this._Modified_Date;
		}
		set
		{
			if ((this._Modified_Date != value))
			{
				this.OnModified_DateChanging(value);
				this.SendPropertyChanging();
				this._Modified_Date = value;
				this.SendPropertyChanged("Modified_Date");
				this.OnModified_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_Power", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string R_Power
	{
		get
		{
			return this._R_Power;
		}
		set
		{
			if ((this._R_Power != value))
			{
				this.OnR_PowerChanging(value);
				this.SendPropertyChanging();
				this._R_Power = value;
				this.SendPropertyChanged("R_Power");
				this.OnR_PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CySize", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CySize
	{
		get
		{
			return this._CySize;
		}
		set
		{
			if ((this._CySize != value))
			{
				this.OnCySizeChanging(value);
				this.SendPropertyChanging();
				this._CySize = value;
				this.SendPropertyChanged("CySize");
				this.OnCySizeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report_Table")]
public partial class Report_Table : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Model;
	
	private System.Nullable<decimal> _Power;
	
	private string _TumblingNo;
	
	private string _PhobicId;
	
	private string _RetumblingNo;
	
	private System.Nullable<int> _WaitingTumbling;
	
	private System.Nullable<int> _RunningTumbling;
	
	private System.Nullable<int> _WaitingPowerSegregation;
	
	private System.Nullable<int> _WaitingPouchPacking;
	
	private System.Nullable<int> _Status;
	
	private string _GlassyNo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPowerChanging(System.Nullable<decimal> value);
    partial void OnPowerChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnPhobicIdChanging(string value);
    partial void OnPhobicIdChanged();
    partial void OnRetumblingNoChanging(string value);
    partial void OnRetumblingNoChanged();
    partial void OnWaitingTumblingChanging(System.Nullable<int> value);
    partial void OnWaitingTumblingChanged();
    partial void OnRunningTumblingChanging(System.Nullable<int> value);
    partial void OnRunningTumblingChanged();
    partial void OnWaitingPowerSegregationChanging(System.Nullable<int> value);
    partial void OnWaitingPowerSegregationChanged();
    partial void OnWaitingPouchPackingChanging(System.Nullable<int> value);
    partial void OnWaitingPouchPackingChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnGlassyNoChanging(string value);
    partial void OnGlassyNoChanged();
    #endregion
	
	public Report_Table()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhobicId", DbType="VarChar(50)")]
	public string PhobicId
	{
		get
		{
			return this._PhobicId;
		}
		set
		{
			if ((this._PhobicId != value))
			{
				this.OnPhobicIdChanging(value);
				this.SendPropertyChanging();
				this._PhobicId = value;
				this.SendPropertyChanged("PhobicId");
				this.OnPhobicIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingNo", DbType="VarChar(50)")]
	public string RetumblingNo
	{
		get
		{
			return this._RetumblingNo;
		}
		set
		{
			if ((this._RetumblingNo != value))
			{
				this.OnRetumblingNoChanging(value);
				this.SendPropertyChanging();
				this._RetumblingNo = value;
				this.SendPropertyChanged("RetumblingNo");
				this.OnRetumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingTumbling", DbType="Int")]
	public System.Nullable<int> WaitingTumbling
	{
		get
		{
			return this._WaitingTumbling;
		}
		set
		{
			if ((this._WaitingTumbling != value))
			{
				this.OnWaitingTumblingChanging(value);
				this.SendPropertyChanging();
				this._WaitingTumbling = value;
				this.SendPropertyChanged("WaitingTumbling");
				this.OnWaitingTumblingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningTumbling", DbType="Int")]
	public System.Nullable<int> RunningTumbling
	{
		get
		{
			return this._RunningTumbling;
		}
		set
		{
			if ((this._RunningTumbling != value))
			{
				this.OnRunningTumblingChanging(value);
				this.SendPropertyChanging();
				this._RunningTumbling = value;
				this.SendPropertyChanged("RunningTumbling");
				this.OnRunningTumblingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingPowerSegregation", DbType="Int")]
	public System.Nullable<int> WaitingPowerSegregation
	{
		get
		{
			return this._WaitingPowerSegregation;
		}
		set
		{
			if ((this._WaitingPowerSegregation != value))
			{
				this.OnWaitingPowerSegregationChanging(value);
				this.SendPropertyChanging();
				this._WaitingPowerSegregation = value;
				this.SendPropertyChanged("WaitingPowerSegregation");
				this.OnWaitingPowerSegregationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitingPouchPacking", DbType="Int")]
	public System.Nullable<int> WaitingPouchPacking
	{
		get
		{
			return this._WaitingPouchPacking;
		}
		set
		{
			if ((this._WaitingPouchPacking != value))
			{
				this.OnWaitingPouchPackingChanging(value);
				this.SendPropertyChanging();
				this._WaitingPouchPacking = value;
				this.SendPropertyChanged("WaitingPouchPacking");
				this.OnWaitingPouchPackingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
	public System.Nullable<int> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassyNo", DbType="VarChar(50)")]
	public string GlassyNo
	{
		get
		{
			return this._GlassyNo;
		}
		set
		{
			if ((this._GlassyNo != value))
			{
				this.OnGlassyNoChanging(value);
				this.SendPropertyChanging();
				this._GlassyNo = value;
				this.SendPropertyChanged("GlassyNo");
				this.OnGlassyNoChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MI_FQIReject")]
public partial class MI_FQIReject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _rotlex_type;
	
	private string _RefLot;
	
	private int _Label;
	
	private string _Type;
	
	private string _Brand_Name;
	
	private string _Model_name;
	
	private string _Reference_Name;
	
	private string _Power;
	
	private int _Qty;
	
	private string _Created_By;
	
	private System.DateTime _Created_Date;
	
	private string _Modified_By;
	
	private System.DateTime _Modified_Date;
	
	private string _R_Power;
	
	private string _CySize;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrotlex_typeChanging(string value);
    partial void Onrotlex_typeChanged();
    partial void OnRefLotChanging(string value);
    partial void OnRefLotChanged();
    partial void OnLabelChanging(int value);
    partial void OnLabelChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnBrand_NameChanging(string value);
    partial void OnBrand_NameChanged();
    partial void OnModel_nameChanging(string value);
    partial void OnModel_nameChanged();
    partial void OnReference_NameChanging(string value);
    partial void OnReference_NameChanged();
    partial void OnPowerChanging(string value);
    partial void OnPowerChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    partial void OnCreated_ByChanging(string value);
    partial void OnCreated_ByChanged();
    partial void OnCreated_DateChanging(System.DateTime value);
    partial void OnCreated_DateChanged();
    partial void OnModified_ByChanging(string value);
    partial void OnModified_ByChanged();
    partial void OnModified_DateChanging(System.DateTime value);
    partial void OnModified_DateChanged();
    partial void OnR_PowerChanging(string value);
    partial void OnR_PowerChanged();
    partial void OnCySizeChanging(string value);
    partial void OnCySizeChanged();
    #endregion
	
	public MI_FQIReject()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rotlex_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string rotlex_type
	{
		get
		{
			return this._rotlex_type;
		}
		set
		{
			if ((this._rotlex_type != value))
			{
				this.Onrotlex_typeChanging(value);
				this.SendPropertyChanging();
				this._rotlex_type = value;
				this.SendPropertyChanged("rotlex_type");
				this.Onrotlex_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefLot", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string RefLot
	{
		get
		{
			return this._RefLot;
		}
		set
		{
			if ((this._RefLot != value))
			{
				this.OnRefLotChanging(value);
				this.SendPropertyChanging();
				this._RefLot = value;
				this.SendPropertyChanged("RefLot");
				this.OnRefLotChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="Int NOT NULL")]
	public int Label
	{
		get
		{
			return this._Label;
		}
		set
		{
			if ((this._Label != value))
			{
				this.OnLabelChanging(value);
				this.SendPropertyChanging();
				this._Label = value;
				this.SendPropertyChanged("Label");
				this.OnLabelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Brand_Name
	{
		get
		{
			return this._Brand_Name;
		}
		set
		{
			if ((this._Brand_Name != value))
			{
				this.OnBrand_NameChanging(value);
				this.SendPropertyChanging();
				this._Brand_Name = value;
				this.SendPropertyChanged("Brand_Name");
				this.OnBrand_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Model_name
	{
		get
		{
			return this._Model_name;
		}
		set
		{
			if ((this._Model_name != value))
			{
				this.OnModel_nameChanging(value);
				this.SendPropertyChanging();
				this._Model_name = value;
				this.SendPropertyChanged("Model_name");
				this.OnModel_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Reference_Name
	{
		get
		{
			return this._Reference_Name;
		}
		set
		{
			if ((this._Reference_Name != value))
			{
				this.OnReference_NameChanging(value);
				this.SendPropertyChanging();
				this._Reference_Name = value;
				this.SendPropertyChanged("Reference_Name");
				this.OnReference_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Power", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Power
	{
		get
		{
			return this._Power;
		}
		set
		{
			if ((this._Power != value))
			{
				this.OnPowerChanging(value);
				this.SendPropertyChanging();
				this._Power = value;
				this.SendPropertyChanged("Power");
				this.OnPowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int NOT NULL")]
	public int Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Created_By
	{
		get
		{
			return this._Created_By;
		}
		set
		{
			if ((this._Created_By != value))
			{
				this.OnCreated_ByChanging(value);
				this.SendPropertyChanging();
				this._Created_By = value;
				this.SendPropertyChanged("Created_By");
				this.OnCreated_ByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_Date", DbType="DateTime NOT NULL")]
	public System.DateTime Created_Date
	{
		get
		{
			return this._Created_Date;
		}
		set
		{
			if ((this._Created_Date != value))
			{
				this.OnCreated_DateChanging(value);
				this.SendPropertyChanging();
				this._Created_Date = value;
				this.SendPropertyChanged("Created_Date");
				this.OnCreated_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Modified_By
	{
		get
		{
			return this._Modified_By;
		}
		set
		{
			if ((this._Modified_By != value))
			{
				this.OnModified_ByChanging(value);
				this.SendPropertyChanging();
				this._Modified_By = value;
				this.SendPropertyChanged("Modified_By");
				this.OnModified_ByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_Date", DbType="DateTime NOT NULL")]
	public System.DateTime Modified_Date
	{
		get
		{
			return this._Modified_Date;
		}
		set
		{
			if ((this._Modified_Date != value))
			{
				this.OnModified_DateChanging(value);
				this.SendPropertyChanging();
				this._Modified_Date = value;
				this.SendPropertyChanged("Modified_Date");
				this.OnModified_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_Power", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string R_Power
	{
		get
		{
			return this._R_Power;
		}
		set
		{
			if ((this._R_Power != value))
			{
				this.OnR_PowerChanging(value);
				this.SendPropertyChanging();
				this._R_Power = value;
				this.SendPropertyChanged("R_Power");
				this.OnR_PowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CySize", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CySize
	{
		get
		{
			return this._CySize;
		}
		set
		{
			if ((this._CySize != value))
			{
				this.OnCySizeChanging(value);
				this.SendPropertyChanging();
				this._CySize = value;
				this.SendPropertyChanged("CySize");
				this.OnCySizeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lensometer_PowerCheck")]
public partial class Lensometer_PowerCheck : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _TumblingNo;
	
	private string _RetumblingNo1;
	
	private string _RetumblingNo2;
	
	private string _RetumblingNo3;
	
	private System.Nullable<int> _RecievedQty;
	
	private System.Nullable<int> _ReceivedQty1;
	
	private System.Nullable<int> _ReceivedQty2;
	
	private System.Nullable<int> _ReceivedQty3;
	
	private System.Nullable<int> _AcceptedQty;
	
	private System.Nullable<int> _AcceptedQty1;
	
	private System.Nullable<int> _AcceptedQty2;
	
	private System.Nullable<int> _AcceptedQty3;
	
	private System.Nullable<int> _RejectedQty;
	
	private System.Nullable<int> _RejectedQty1;
	
	private System.Nullable<int> _RejectedQty2;
	
	private System.Nullable<int> _RejectedQty3;
	
	private string _Resolution;
	
	private string _Resolution1;
	
	private string _Resolution2;
	
	private string _Resolution3;
	
	private System.Nullable<int> _TotalQty;
	
	private System.Nullable<int> _TotalQty1;
	
	private System.Nullable<int> _TotalQty2;
	
	private System.Nullable<int> _TotalQty3;
	
	private string _Remarks;
	
	private string _Remarks1;
	
	private string _Remarks2;
	
	private string _Remarks3;
	
	private string _InspectedBy;
	
	private string _InspectedBy1;
	
	private string _InspectedBy2;
	
	private string _InspectedBy3;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<System.DateTime> _Date1;
	
	private System.Nullable<System.DateTime> _Date2;
	
	private System.Nullable<System.DateTime> _Date3;
	
	private System.Nullable<int> _Flag;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTumblingNoChanging(string value);
    partial void OnTumblingNoChanged();
    partial void OnRetumblingNo1Changing(string value);
    partial void OnRetumblingNo1Changed();
    partial void OnRetumblingNo2Changing(string value);
    partial void OnRetumblingNo2Changed();
    partial void OnRetumblingNo3Changing(string value);
    partial void OnRetumblingNo3Changed();
    partial void OnRecievedQtyChanging(System.Nullable<int> value);
    partial void OnRecievedQtyChanged();
    partial void OnReceivedQty1Changing(System.Nullable<int> value);
    partial void OnReceivedQty1Changed();
    partial void OnReceivedQty2Changing(System.Nullable<int> value);
    partial void OnReceivedQty2Changed();
    partial void OnReceivedQty3Changing(System.Nullable<int> value);
    partial void OnReceivedQty3Changed();
    partial void OnAcceptedQtyChanging(System.Nullable<int> value);
    partial void OnAcceptedQtyChanged();
    partial void OnAcceptedQty1Changing(System.Nullable<int> value);
    partial void OnAcceptedQty1Changed();
    partial void OnAcceptedQty2Changing(System.Nullable<int> value);
    partial void OnAcceptedQty2Changed();
    partial void OnAcceptedQty3Changing(System.Nullable<int> value);
    partial void OnAcceptedQty3Changed();
    partial void OnRejectedQtyChanging(System.Nullable<int> value);
    partial void OnRejectedQtyChanged();
    partial void OnRejectedQty1Changing(System.Nullable<int> value);
    partial void OnRejectedQty1Changed();
    partial void OnRejectedQty2Changing(System.Nullable<int> value);
    partial void OnRejectedQty2Changed();
    partial void OnRejectedQty3Changing(System.Nullable<int> value);
    partial void OnRejectedQty3Changed();
    partial void OnResolutionChanging(string value);
    partial void OnResolutionChanged();
    partial void OnResolution1Changing(string value);
    partial void OnResolution1Changed();
    partial void OnResolution2Changing(string value);
    partial void OnResolution2Changed();
    partial void OnResolution3Changing(string value);
    partial void OnResolution3Changed();
    partial void OnTotalQtyChanging(System.Nullable<int> value);
    partial void OnTotalQtyChanged();
    partial void OnTotalQty1Changing(System.Nullable<int> value);
    partial void OnTotalQty1Changed();
    partial void OnTotalQty2Changing(System.Nullable<int> value);
    partial void OnTotalQty2Changed();
    partial void OnTotalQty3Changing(System.Nullable<int> value);
    partial void OnTotalQty3Changed();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnRemarks1Changing(string value);
    partial void OnRemarks1Changed();
    partial void OnRemarks2Changing(string value);
    partial void OnRemarks2Changed();
    partial void OnRemarks3Changing(string value);
    partial void OnRemarks3Changed();
    partial void OnInspectedByChanging(string value);
    partial void OnInspectedByChanged();
    partial void OnInspectedBy1Changing(string value);
    partial void OnInspectedBy1Changed();
    partial void OnInspectedBy2Changing(string value);
    partial void OnInspectedBy2Changed();
    partial void OnInspectedBy3Changing(string value);
    partial void OnInspectedBy3Changed();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnDate1Changed();
    partial void OnDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnDate2Changed();
    partial void OnDate3Changing(System.Nullable<System.DateTime> value);
    partial void OnDate3Changed();
    partial void OnFlagChanging(System.Nullable<int> value);
    partial void OnFlagChanged();
    #endregion
	
	public Lensometer_PowerCheck()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TumblingNo", DbType="VarChar(50)")]
	public string TumblingNo
	{
		get
		{
			return this._TumblingNo;
		}
		set
		{
			if ((this._TumblingNo != value))
			{
				this.OnTumblingNoChanging(value);
				this.SendPropertyChanging();
				this._TumblingNo = value;
				this.SendPropertyChanged("TumblingNo");
				this.OnTumblingNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingNo1", DbType="VarChar(50)")]
	public string RetumblingNo1
	{
		get
		{
			return this._RetumblingNo1;
		}
		set
		{
			if ((this._RetumblingNo1 != value))
			{
				this.OnRetumblingNo1Changing(value);
				this.SendPropertyChanging();
				this._RetumblingNo1 = value;
				this.SendPropertyChanged("RetumblingNo1");
				this.OnRetumblingNo1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingNo2", DbType="VarChar(50)")]
	public string RetumblingNo2
	{
		get
		{
			return this._RetumblingNo2;
		}
		set
		{
			if ((this._RetumblingNo2 != value))
			{
				this.OnRetumblingNo2Changing(value);
				this.SendPropertyChanging();
				this._RetumblingNo2 = value;
				this.SendPropertyChanged("RetumblingNo2");
				this.OnRetumblingNo2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetumblingNo3", DbType="VarChar(50)")]
	public string RetumblingNo3
	{
		get
		{
			return this._RetumblingNo3;
		}
		set
		{
			if ((this._RetumblingNo3 != value))
			{
				this.OnRetumblingNo3Changing(value);
				this.SendPropertyChanging();
				this._RetumblingNo3 = value;
				this.SendPropertyChanged("RetumblingNo3");
				this.OnRetumblingNo3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedQty", DbType="Int")]
	public System.Nullable<int> RecievedQty
	{
		get
		{
			return this._RecievedQty;
		}
		set
		{
			if ((this._RecievedQty != value))
			{
				this.OnRecievedQtyChanging(value);
				this.SendPropertyChanging();
				this._RecievedQty = value;
				this.SendPropertyChanged("RecievedQty");
				this.OnRecievedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty1", DbType="Int")]
	public System.Nullable<int> ReceivedQty1
	{
		get
		{
			return this._ReceivedQty1;
		}
		set
		{
			if ((this._ReceivedQty1 != value))
			{
				this.OnReceivedQty1Changing(value);
				this.SendPropertyChanging();
				this._ReceivedQty1 = value;
				this.SendPropertyChanged("ReceivedQty1");
				this.OnReceivedQty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty2", DbType="Int")]
	public System.Nullable<int> ReceivedQty2
	{
		get
		{
			return this._ReceivedQty2;
		}
		set
		{
			if ((this._ReceivedQty2 != value))
			{
				this.OnReceivedQty2Changing(value);
				this.SendPropertyChanging();
				this._ReceivedQty2 = value;
				this.SendPropertyChanged("ReceivedQty2");
				this.OnReceivedQty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty3", DbType="Int")]
	public System.Nullable<int> ReceivedQty3
	{
		get
		{
			return this._ReceivedQty3;
		}
		set
		{
			if ((this._ReceivedQty3 != value))
			{
				this.OnReceivedQty3Changing(value);
				this.SendPropertyChanging();
				this._ReceivedQty3 = value;
				this.SendPropertyChanged("ReceivedQty3");
				this.OnReceivedQty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty", DbType="Int")]
	public System.Nullable<int> AcceptedQty
	{
		get
		{
			return this._AcceptedQty;
		}
		set
		{
			if ((this._AcceptedQty != value))
			{
				this.OnAcceptedQtyChanging(value);
				this.SendPropertyChanging();
				this._AcceptedQty = value;
				this.SendPropertyChanged("AcceptedQty");
				this.OnAcceptedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty1", DbType="Int")]
	public System.Nullable<int> AcceptedQty1
	{
		get
		{
			return this._AcceptedQty1;
		}
		set
		{
			if ((this._AcceptedQty1 != value))
			{
				this.OnAcceptedQty1Changing(value);
				this.SendPropertyChanging();
				this._AcceptedQty1 = value;
				this.SendPropertyChanged("AcceptedQty1");
				this.OnAcceptedQty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty2", DbType="Int")]
	public System.Nullable<int> AcceptedQty2
	{
		get
		{
			return this._AcceptedQty2;
		}
		set
		{
			if ((this._AcceptedQty2 != value))
			{
				this.OnAcceptedQty2Changing(value);
				this.SendPropertyChanging();
				this._AcceptedQty2 = value;
				this.SendPropertyChanged("AcceptedQty2");
				this.OnAcceptedQty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedQty3", DbType="Int")]
	public System.Nullable<int> AcceptedQty3
	{
		get
		{
			return this._AcceptedQty3;
		}
		set
		{
			if ((this._AcceptedQty3 != value))
			{
				this.OnAcceptedQty3Changing(value);
				this.SendPropertyChanging();
				this._AcceptedQty3 = value;
				this.SendPropertyChanged("AcceptedQty3");
				this.OnAcceptedQty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Int")]
	public System.Nullable<int> RejectedQty
	{
		get
		{
			return this._RejectedQty;
		}
		set
		{
			if ((this._RejectedQty != value))
			{
				this.OnRejectedQtyChanging(value);
				this.SendPropertyChanging();
				this._RejectedQty = value;
				this.SendPropertyChanged("RejectedQty");
				this.OnRejectedQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty1", DbType="Int")]
	public System.Nullable<int> RejectedQty1
	{
		get
		{
			return this._RejectedQty1;
		}
		set
		{
			if ((this._RejectedQty1 != value))
			{
				this.OnRejectedQty1Changing(value);
				this.SendPropertyChanging();
				this._RejectedQty1 = value;
				this.SendPropertyChanged("RejectedQty1");
				this.OnRejectedQty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty2", DbType="Int")]
	public System.Nullable<int> RejectedQty2
	{
		get
		{
			return this._RejectedQty2;
		}
		set
		{
			if ((this._RejectedQty2 != value))
			{
				this.OnRejectedQty2Changing(value);
				this.SendPropertyChanging();
				this._RejectedQty2 = value;
				this.SendPropertyChanged("RejectedQty2");
				this.OnRejectedQty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty3", DbType="Int")]
	public System.Nullable<int> RejectedQty3
	{
		get
		{
			return this._RejectedQty3;
		}
		set
		{
			if ((this._RejectedQty3 != value))
			{
				this.OnRejectedQty3Changing(value);
				this.SendPropertyChanging();
				this._RejectedQty3 = value;
				this.SendPropertyChanged("RejectedQty3");
				this.OnRejectedQty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution", DbType="VarChar(50)")]
	public string Resolution
	{
		get
		{
			return this._Resolution;
		}
		set
		{
			if ((this._Resolution != value))
			{
				this.OnResolutionChanging(value);
				this.SendPropertyChanging();
				this._Resolution = value;
				this.SendPropertyChanged("Resolution");
				this.OnResolutionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution1", DbType="VarChar(50)")]
	public string Resolution1
	{
		get
		{
			return this._Resolution1;
		}
		set
		{
			if ((this._Resolution1 != value))
			{
				this.OnResolution1Changing(value);
				this.SendPropertyChanging();
				this._Resolution1 = value;
				this.SendPropertyChanged("Resolution1");
				this.OnResolution1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution2", DbType="VarChar(50)")]
	public string Resolution2
	{
		get
		{
			return this._Resolution2;
		}
		set
		{
			if ((this._Resolution2 != value))
			{
				this.OnResolution2Changing(value);
				this.SendPropertyChanging();
				this._Resolution2 = value;
				this.SendPropertyChanged("Resolution2");
				this.OnResolution2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resolution3", DbType="VarChar(50)")]
	public string Resolution3
	{
		get
		{
			return this._Resolution3;
		}
		set
		{
			if ((this._Resolution3 != value))
			{
				this.OnResolution3Changing(value);
				this.SendPropertyChanging();
				this._Resolution3 = value;
				this.SendPropertyChanged("Resolution3");
				this.OnResolution3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty", DbType="Int")]
	public System.Nullable<int> TotalQty
	{
		get
		{
			return this._TotalQty;
		}
		set
		{
			if ((this._TotalQty != value))
			{
				this.OnTotalQtyChanging(value);
				this.SendPropertyChanging();
				this._TotalQty = value;
				this.SendPropertyChanged("TotalQty");
				this.OnTotalQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty1", DbType="Int")]
	public System.Nullable<int> TotalQty1
	{
		get
		{
			return this._TotalQty1;
		}
		set
		{
			if ((this._TotalQty1 != value))
			{
				this.OnTotalQty1Changing(value);
				this.SendPropertyChanging();
				this._TotalQty1 = value;
				this.SendPropertyChanged("TotalQty1");
				this.OnTotalQty1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty2", DbType="Int")]
	public System.Nullable<int> TotalQty2
	{
		get
		{
			return this._TotalQty2;
		}
		set
		{
			if ((this._TotalQty2 != value))
			{
				this.OnTotalQty2Changing(value);
				this.SendPropertyChanging();
				this._TotalQty2 = value;
				this.SendPropertyChanged("TotalQty2");
				this.OnTotalQty2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQty3", DbType="Int")]
	public System.Nullable<int> TotalQty3
	{
		get
		{
			return this._TotalQty3;
		}
		set
		{
			if ((this._TotalQty3 != value))
			{
				this.OnTotalQty3Changing(value);
				this.SendPropertyChanging();
				this._TotalQty3 = value;
				this.SendPropertyChanged("TotalQty3");
				this.OnTotalQty3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="VarChar(50)")]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks1", DbType="VarChar(50)")]
	public string Remarks1
	{
		get
		{
			return this._Remarks1;
		}
		set
		{
			if ((this._Remarks1 != value))
			{
				this.OnRemarks1Changing(value);
				this.SendPropertyChanging();
				this._Remarks1 = value;
				this.SendPropertyChanged("Remarks1");
				this.OnRemarks1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks2", DbType="VarChar(50)")]
	public string Remarks2
	{
		get
		{
			return this._Remarks2;
		}
		set
		{
			if ((this._Remarks2 != value))
			{
				this.OnRemarks2Changing(value);
				this.SendPropertyChanging();
				this._Remarks2 = value;
				this.SendPropertyChanged("Remarks2");
				this.OnRemarks2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks3", DbType="VarChar(50)")]
	public string Remarks3
	{
		get
		{
			return this._Remarks3;
		}
		set
		{
			if ((this._Remarks3 != value))
			{
				this.OnRemarks3Changing(value);
				this.SendPropertyChanging();
				this._Remarks3 = value;
				this.SendPropertyChanged("Remarks3");
				this.OnRemarks3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy", DbType="VarChar(50)")]
	public string InspectedBy
	{
		get
		{
			return this._InspectedBy;
		}
		set
		{
			if ((this._InspectedBy != value))
			{
				this.OnInspectedByChanging(value);
				this.SendPropertyChanging();
				this._InspectedBy = value;
				this.SendPropertyChanged("InspectedBy");
				this.OnInspectedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy1", DbType="VarChar(50)")]
	public string InspectedBy1
	{
		get
		{
			return this._InspectedBy1;
		}
		set
		{
			if ((this._InspectedBy1 != value))
			{
				this.OnInspectedBy1Changing(value);
				this.SendPropertyChanging();
				this._InspectedBy1 = value;
				this.SendPropertyChanged("InspectedBy1");
				this.OnInspectedBy1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy2", DbType="VarChar(50)")]
	public string InspectedBy2
	{
		get
		{
			return this._InspectedBy2;
		}
		set
		{
			if ((this._InspectedBy2 != value))
			{
				this.OnInspectedBy2Changing(value);
				this.SendPropertyChanging();
				this._InspectedBy2 = value;
				this.SendPropertyChanged("InspectedBy2");
				this.OnInspectedBy2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectedBy3", DbType="VarChar(50)")]
	public string InspectedBy3
	{
		get
		{
			return this._InspectedBy3;
		}
		set
		{
			if ((this._InspectedBy3 != value))
			{
				this.OnInspectedBy3Changing(value);
				this.SendPropertyChanging();
				this._InspectedBy3 = value;
				this.SendPropertyChanged("InspectedBy3");
				this.OnInspectedBy3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date1", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date1
	{
		get
		{
			return this._Date1;
		}
		set
		{
			if ((this._Date1 != value))
			{
				this.OnDate1Changing(value);
				this.SendPropertyChanging();
				this._Date1 = value;
				this.SendPropertyChanged("Date1");
				this.OnDate1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date2", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date2
	{
		get
		{
			return this._Date2;
		}
		set
		{
			if ((this._Date2 != value))
			{
				this.OnDate2Changing(value);
				this.SendPropertyChanging();
				this._Date2 = value;
				this.SendPropertyChanged("Date2");
				this.OnDate2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date3", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date3
	{
		get
		{
			return this._Date3;
		}
		set
		{
			if ((this._Date3 != value))
			{
				this.OnDate3Changing(value);
				this.SendPropertyChanging();
				this._Date3 = value;
				this.SendPropertyChanged("Date3");
				this.OnDate3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Int")]
	public System.Nullable<int> Flag
	{
		get
		{
			return this._Flag;
		}
		set
		{
			if ((this._Flag != value))
			{
				this.OnFlagChanging(value);
				this.SendPropertyChanging();
				this._Flag = value;
				this.SendPropertyChanged("Flag");
				this.OnFlagChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewBtchAllot")]
public partial class NewBtchAllot : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Rowid;
	
	private string _LotNo;
	
	private string _Brand_Name;
	
	private string _Model;
	
	private string _SolutionId;
	
	private string _Shift;
	
	private System.Nullable<int> _Volume;
	
	private System.Nullable<int> _Quantity;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _ApprovedBy;
	
	private string _Reflot;
	
	private string _Product_Type;
	
	private string _Planned_power;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowidChanging(int value);
    partial void OnRowidChanged();
    partial void OnLotNoChanging(string value);
    partial void OnLotNoChanged();
    partial void OnBrand_NameChanging(string value);
    partial void OnBrand_NameChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnSolutionIdChanging(string value);
    partial void OnSolutionIdChanged();
    partial void OnShiftChanging(string value);
    partial void OnShiftChanged();
    partial void OnVolumeChanging(System.Nullable<int> value);
    partial void OnVolumeChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    partial void OnReflotChanging(string value);
    partial void OnReflotChanged();
    partial void OnProduct_TypeChanging(string value);
    partial void OnProduct_TypeChanged();
    partial void OnPlanned_powerChanging(string value);
    partial void OnPlanned_powerChanged();
    #endregion
	
	public NewBtchAllot()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rowid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Rowid
	{
		get
		{
			return this._Rowid;
		}
		set
		{
			if ((this._Rowid != value))
			{
				this.OnRowidChanging(value);
				this.SendPropertyChanging();
				this._Rowid = value;
				this.SendPropertyChanged("Rowid");
				this.OnRowidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNo", DbType="VarChar(50)")]
	public string LotNo
	{
		get
		{
			return this._LotNo;
		}
		set
		{
			if ((this._LotNo != value))
			{
				this.OnLotNoChanging(value);
				this.SendPropertyChanging();
				this._LotNo = value;
				this.SendPropertyChanged("LotNo");
				this.OnLotNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_Name", DbType="VarChar(50)")]
	public string Brand_Name
	{
		get
		{
			return this._Brand_Name;
		}
		set
		{
			if ((this._Brand_Name != value))
			{
				this.OnBrand_NameChanging(value);
				this.SendPropertyChanging();
				this._Brand_Name = value;
				this.SendPropertyChanged("Brand_Name");
				this.OnBrand_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionId", DbType="VarChar(50)")]
	public string SolutionId
	{
		get
		{
			return this._SolutionId;
		}
		set
		{
			if ((this._SolutionId != value))
			{
				this.OnSolutionIdChanging(value);
				this.SendPropertyChanging();
				this._SolutionId = value;
				this.SendPropertyChanged("SolutionId");
				this.OnSolutionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="VarChar(50)")]
	public string Shift
	{
		get
		{
			return this._Shift;
		}
		set
		{
			if ((this._Shift != value))
			{
				this.OnShiftChanging(value);
				this.SendPropertyChanging();
				this._Shift = value;
				this.SendPropertyChanged("Shift");
				this.OnShiftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
	public System.Nullable<int> Volume
	{
		get
		{
			return this._Volume;
		}
		set
		{
			if ((this._Volume != value))
			{
				this.OnVolumeChanging(value);
				this.SendPropertyChanging();
				this._Volume = value;
				this.SendPropertyChanged("Volume");
				this.OnVolumeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="VarChar(50)")]
	public string ApprovedBy
	{
		get
		{
			return this._ApprovedBy;
		}
		set
		{
			if ((this._ApprovedBy != value))
			{
				this.OnApprovedByChanging(value);
				this.SendPropertyChanging();
				this._ApprovedBy = value;
				this.SendPropertyChanged("ApprovedBy");
				this.OnApprovedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reflot", DbType="VarChar(50)")]
	public string Reflot
	{
		get
		{
			return this._Reflot;
		}
		set
		{
			if ((this._Reflot != value))
			{
				this.OnReflotChanging(value);
				this.SendPropertyChanging();
				this._Reflot = value;
				this.SendPropertyChanged("Reflot");
				this.OnReflotChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Type", DbType="VarChar(50)")]
	public string Product_Type
	{
		get
		{
			return this._Product_Type;
		}
		set
		{
			if ((this._Product_Type != value))
			{
				this.OnProduct_TypeChanging(value);
				this.SendPropertyChanging();
				this._Product_Type = value;
				this.SendPropertyChanged("Product_Type");
				this.OnProduct_TypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Planned_power", DbType="VarChar(30)")]
	public string Planned_power
	{
		get
		{
			return this._Planned_power;
		}
		set
		{
			if ((this._Planned_power != value))
			{
				this.OnPlanned_powerChanging(value);
				this.SendPropertyChanging();
				this._Planned_power = value;
				this.SendPropertyChanged("Planned_power");
				this.OnPlanned_powerChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
